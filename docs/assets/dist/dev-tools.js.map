{"version":3,"file":"assets/dist/dev-tools.js","mappings":";;;;;;;;;;;;;AAAgC;AACH;;;;;;;;;;;;;;;;;;;;ACD7B,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACqD;AACL;AACS;AACb;AACrC;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qDAAc;AACrD;AACA,0BAA0B,iEAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qEAAiB;AAC9C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;AC3FO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC0C;AACnC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iCAAiC,uDAAY;AAC7C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,YAAY;AACZ;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpCA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe;AACf,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA,wDAAwD,IAAI;AAC5D,gDAAgD,IAAI;AACpD;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;AC1BA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACoC;AACyB;AACX;AACa;AACrB;AACnC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iDAAO;AAClC;AACA,aAAa;AACb;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iDAAO;AACvB;AACA;AACA,0CAA0C,kDAAK;AAC/C,mCAAmC,kDAAK;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0EAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0EAAoB;AACvD;AACA;AACA;AACA;AACA;AACA,oBAAoB,uDAAW;AAC/B;AACA;AACA,gDAAgD,eAAe;AAC/D,8DAA8D,eAAe,YAAY,UAAU,iDAAO,6DAA6D;AACvK,wBAAwB,iDAAO,IAAI,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iDAAO;AACzC;AACA;AACA;AACA;AACA,8DAA8D,eAAe,YAAY,eAAe;AACxG,wBAAwB,iDAAO,IAAI,QAAQ;AAC3C;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uDAAW;AAC/B;AACA,wBAAwB,iDAAK;AAC7B,8DAA8D,eAAe,YAAY,0BAA0B;AACnH,wBAAwB,iDAAO,IAAI,QAAQ;AAC3C;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D,8DAA8D,eAAe,YAAY,UAAU,iDAAO,6DAA6D;AACvK,wBAAwB,iDAAO,IAAI,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,eAAe,YAAY,iBAAiB;AAC1G,wBAAwB,iDAAO,IAAI,QAAQ;AAC3C;AACA;AACA,qBAAqB;AACrB;AACA,8DAA8D,eAAe,YAAY,0BAA0B;AACnH,wBAAwB,iDAAO,IAAI,QAAQ;AAC3C;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0EAAoB;AACjD;AACA;AACA;AACA,6BAA6B,0EAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5UA;AACA;AACA;AACA,mBAAmB,aAAa;AAChC,sBAAsB,kBAAkB;AACxC,2BAA2B;AAC3B,oBAAoB;AACpB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/BA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;ACtCA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;AC/CA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;AC1BA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvBO;AACP,wBAAwB;AACxB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD,wDAAwD,OAAO;AAC/D;AACA,oBAAoB,QAAQ,aAAa,OAAO,GAAG;AACnD;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACO;AACP;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACO,uCAAuC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,YAAY;AACZ;AACO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;ACVA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC6C;AACR;AACa;AACb;AACQ;AACc;AAC3D;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACO;AACP;AACA;AACA,sCAAsC;AACtC,wDAAwD;AACxD;AACA,qBAAqB,yDAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA;AACA,oCAAoC,8DAAa,CAAC,iDAAO;AACzD;AACA;AACA,kCAAkC,qDAAU;AAC5C;AACA;AACA;AACA,8CAA8C,kCAAkC;AAChF;AACA,oBAAoB,uEAAiB,WAAW,qCAAqC;AACrF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC9EA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC6C;AACR;AACa;AACb;AACQ;AACJ;AAClC;AACP;AACA,qBAAqB,yDAAiB;AACtC;AACA;AACA;AACA;AACA,YAAY,iDAAK;AACjB;AACA,aAAa,iDAAK;AAClB,gCAAgC,8DAAa,CAAC,iDAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,kCAAkC,qDAAU;AAC5C;AACA,kBAAkB,qDAAQ;AAC1B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACnDA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AAC6C;AACR;AACa;AACb;AACsB;AACd;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,qBAAqB,yDAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO,UAAU,QAAQ,QAAQ;AACzE,mDAAmD,YAAY;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+CAA+C;AAC/C,uBAAuB,uEAAiB,YAAY,kBAAkB;AACtE,wBAAwB,uEAAiB,UAAU,UAAU,kBAAkB,EAAE,sBAAsB,UAAU,eAAe,GAAG;AACnI,qBAAqB,uEAAiB,UAAU,uBAAuB,OAAO,QAAQ,MAAM,SAAS,aAAa,uBAAuB,UAAU,mBAAmB,GAAG;AACzK,0DAA0D,uEAAiB,UAAU,SAAS,gBAAgB,eAAe,GAAG;AAChI;AACA,+GAA+G,6EAA6E,4EAA4E;AACxQ;AACA;AACA;AACA,YAAY,iDAAK;AACjB;AACA,aAAa,iDAAK;AAClB,gCAAgC,8DAAa,CAAC,iDAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,kCAAkC,qDAAU;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC/FA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC6C;AACR;AACa;AACb;AACQ;AACtC;AACP;AACA,qBAAqB,yDAAiB;AACtC;AACA;AACA;AACA;AACA,YAAY,iDAAK;AACjB;AACA,aAAa,iDAAK;AAClB,gCAAgC,8DAAa,CAAC,iDAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,kCAAkC,qDAAU;AAC5C,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClDA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC6C;AACK;AACb;AACA;AACrC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAO;AACjC;AACA;AACA;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA,0BAA0B,8DAAa;AACvC;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAU;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;;;AC3DA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA,8BAA8B,SAAI,IAAI,SAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AAC6C;AACc;AACtB;AACa;AACL;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,qBAAqB,yDAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO,UAAU,QAAQ,QAAQ;AACzE,mDAAmD,YAAY;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+CAA+C;AAC/C,uBAAuB,uEAAiB,YAAY,kBAAkB;AACtE,wBAAwB,uEAAiB,UAAU,UAAU,kBAAkB,EAAE,sBAAsB,UAAU,eAAe,GAAG;AACnI,qBAAqB,uEAAiB,UAAU,uBAAuB,OAAO,QAAQ,MAAM,SAAS,aAAa,uBAAuB,UAAU,mBAAmB,GAAG;AACzK,oDAAoD,uEAAiB,UAAU,SAAS,gBAAgB,eAAe,GAAG;AAC1H;AACA,yGAAyG,uEAAuE,sEAAsE;AACtP;AACA;AACA;AACA;AACA;AACA,uBAAuB,iDAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qDAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClFA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACmE;AACb;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,+DAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,+DAAgB;AACxD;AACA;AACA;AACA;AACA;AACA,IAAI,yDAAa,aAAa,yDAAa;AAC3C;AACiB;;;;;;;;;;;;;;;;;;;;;;AC3DjB,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACwC;AACxC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAQ;AAC1B;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7E4B;AACJ;AACK;AACG;AACM;AACA;AACU;AACR;AACE;AACC;AACD;AACF;AACT;AACG;AACE;AACR;AACF;AACO;AACA;AACF;;;;;;;;;;;;;;;;;;;;ACnBW;AACI;AACF;AACc;AACnD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,KAAK;AAC5C,+BAA+B,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,KAAK;AACpD;AACA,wBAAwB,sDAAO;AAC/B;AACA;AACA,6CAA6C,KAAK;AAClD;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yCAAyC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAQ;AACxB;AACA,kCAAkC;AAClC;AACA,aAAa;AACb;AACA;AACA;AACA,wBAAwB,sDAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjJyD;AACX;AAC9C;AACA,oCAAoC;AACpC;AACA,6BAA6B;AAC7B,8BAA8B;AAC9B,8BAA8B;AAC9B,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,YAAY;AACZ;AACO;AACP;AACA,eAAe,qEAAiB;AAChC;AACA;AACA,kEAAkE,KAAK;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA,iFAAiF,cAAc;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;AC5EA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACoC;AACS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6BAA6B;AAC7B;AACA,gCAAgC,sDAAS;AACzC;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxEA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AAC8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,8DAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAQ;AACZ;AACA;AACsB;;;;;;;;;;;;;;;;;;AC/CtB,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AAC8D;AACjB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,8DAAgB;AAC9D;AACA;AACA;AACA,wCAAwC,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,wBAAwB,yDAAa;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAQ;AACZ;AACA;AACwB;;;;;;;;;;;;;;AC/DxB,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,6DAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,IAAI,+DAAa;AACjB;;;;;;;;;;;;;;;;AC7DO;AACP;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR4B;AACI;AACE;AACC;AACO;AACN;;;;;;;;;;;;;;;;;;ACLpC,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO,wBAAwB,2DAAa;AAC5C,oDAAoD;AACpD;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB,eAAe;AAC1D;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA,gFAAgF,2BAA2B;AAC3G;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA,mBAAmB;AACnB;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;AC9DA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA;AACiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,6DAAe;AACjE;AACA;AACA;AACA;AACA,oBAAoB,oEAAkB,GAAG,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,IAAI,0DAAQ;AACZ;AACA;AAC0B;;;;;;;;;;;;;;;;;;ACnH1B,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC4E;AAChB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,6DAAe;AACjF;AACA;AACA,oBAAoB,sEAAsB;AAC1C;AACA,kBAAkB,sEAAsB;AACxC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAO,CAAC,wDAAa;AAClD,kCAAkC,mBAAO,CAAC,oEAAmB;AAC7D;AACA;AACA,aAAa;AACb;AACA,uBAAuB,sEAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,IAAI,+DAAa;AACjB,IAAI,0DAAQ;AACZ;AACA;AACkC;;;;;;;;;;;;;;;;;ACtFlC,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACoG;AACxB;AAClB;AACf;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,6DAAe;AAC/E;AACA;AACA;AACA;AACA,YAAY,mDAAe;AAC3B;AACA,sBAAsB,oEAAc;AACpC;AACA,kBAAkB,sEAAsB;AACxC,wBAAwB,8DAAc;AACtC;AACA;AACA,0BAA0B,0DAAQ;AAClC;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,IAAI,+DAAa;AACjB,IAAI,0DAAQ;AACZ;AACA;AACA;AACA,UAAU,8DAAY;AACtB;AACA,CAAC;;;;;;;;;;;;;;;;ACtED,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC4D;AAC0B;AAC3C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,6DAAe;AAC3E;AACA;AACA;AACA;AACA,YAAY,mDAAe;AAC3B;AACA;AACA,kBAAkB,sEAAsB;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAiC;AACjC,SAAS;AACT;AACA,kBAAkB,0DAAQ;AAC1B;AACA,8BAA8B,sEAAsB;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oCAAoC;AACpC,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,IAAI,0DAAQ;AACZ,IAAI,+DAAa;AACjB;AACA;;;;;;;;;;;;;;;;AC9EO;AACP;AACA;;;;;;;;;;;;;;;;;;;;ACFyB;AACiB;AACE;AACC;;;;;;;;;;;;ACHhC;AACb;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C,oBAAoB,mBAAO,CAAC,6FAAwB;AACpD,yBAAyB,mBAAO,CAAC,uGAA6B;AAC9D,iBAAiB,mBAAO,CAAC,iFAAkB;AAC3C,wBAAwB,mBAAO,CAAC,qGAA4B;AAC5D,yBAAyB,mBAAO,CAAC,iGAA0B;AAC3D,oBAAoB,mBAAO,CAAC,uFAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B;AACA;;;;;;;;;;;;ACpIa;AACb;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C,oBAAoB,mBAAO,CAAC,6FAAwB;AACpD,iBAAiB,mBAAO,CAAC,iFAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrCa;AACb;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C,oBAAoB,mBAAO,CAAC,6FAAwB;AACpD,iBAAiB,mBAAO,CAAC,iFAAkB;AAC3C,qBAAqB,mBAAO,CAAC,+FAAyB;AACtD,yBAAyB,mBAAO,CAAC,iGAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B,GAAG,gCAAgC;AACjE;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,8DAA8D;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,8BAA8B;;;;;;;;;;;;AClCjB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;;;;;;;;;;;ACVf;AACb;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAiC;AACjC,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA;AACA;;;;;;;;;;;;AC7Da;AACb,8CAA6C,EAAE,aAAa,EAAC;;;;;;;;;;;;ACDhD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,sBAAsB;;;;;;;;;;;;ACbT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,sBAAsB;AAC1C,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA,oBAAoB,KAAK;AACzB;AACA,6DAA6D;AAC7D;AACA,KAAK;AACL;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;;;;;;;;;;;ACzGJ;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,+BAA+B,GAAG,oCAAoC,GAAG,yBAAyB,GAAG,6BAA6B,GAAG,+BAA+B,GAAG,oBAAoB,GAAG,4BAA4B,GAAG,mBAAmB,GAAG,sBAAsB,GAAG,sCAAsC;AAClT,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C,+BAA+B,mBAAO,CAAC,qGAAwB;AAC/D,oBAAoB,mBAAO,CAAC,+EAAa;AACzC,eAAe,mBAAO,CAAC,+DAAS;AAChC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6EAA6E,cAAc;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,gFAAgF;AAC7L;AACA,KAAK;AACL;AACA,+BAA+B;;;;;;;;;;;;ACvQlB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,GAAG,qBAAqB,GAAG,yBAAyB,GAAG,wBAAwB,GAAG,gCAAgC;AAC3I,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gCAAgC;AAChC;AACA;AACA,gCAAgC,UAAU,IAAI,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,yBAAyB;;;;;;;;;;;;ACpGZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdwB;AACW;AACV;AACA;AACJ;AACG;AACH;AACG;AACU;AAChB;AACM;AACE;AACjB;;;;;;;;;;;;ACZV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC7BY;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,oBAAoB,mBAAO,CAAC,uFAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;;ACvBV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB,GAAG,qBAAqB,GAAG,4BAA4B,GAAG,mBAAmB;AACnG,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sBAAsB;;;;;;;;;;;;ACxGT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,0CAA0C,sBAAsB;AAChE;AACA;AACA,mCAAmC,KAAK,IAAI,YAAY;AACxD;AACA;AACA,0BAA0B,KAAK,EAAE,QAAQ,KAAK,KAAK;AACnD;AACA,SAAS;AACT;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;;AC/CL;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,wBAAwB;AAC/G,oFAAoF,kBAAkB;AACtG,qFAAqF,mBAAmB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qGAAqG,6BAA6B;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,kBAAkB;AAC1H,yGAAyG,mBAAmB;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB;;;;;;;;;;;;AC9Ja;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,4BAA4B,mBAAO,CAAC,uGAA6B;AACjE,oBAAoB,mBAAO,CAAC,uFAAqB;AACjD,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,6CAA6C;AAC7C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD,sCAAsC,mBAAmB,KAAK,YAAY;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AC9KY;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,6BAA6B,mBAAO,CAAC,oGAAsB;AAC3D,oBAAoB,mBAAO,CAAC,uFAAqB;AACjD,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C,+BAA+B,mBAAO,CAAC,6GAAgC;AACvE,2BAA2B,mBAAO,CAAC,qGAA4B;AAC/D,0BAA0B,mBAAO,CAAC,8FAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,SAAS;AACT;AACA;AACA,iBAAiB;;;;;;;;;;;;AC1EJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,gBAAgB,mBAAO,CAAC,uEAAkB;AAC1C;AACA;AACA;AACA,mEAAmE,yBAAyB,MAAM,0BAA0B,SAAS,mCAAmC;AACxK,SAAS;AACT;AACA;AACA,qBAAqB;;;;;;;;;;;;ACXR;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;;;;;;;;;ACPY;AACF;AACE;;;;;;;;;;;;;;ACJyB;AAE1D,IAAI,OAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+EV,sEAAsB,CAAC;AAAA,EAAS;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA,CAAC;AAAA,EAED;AAAA,IACI,aAAa,CAAC,aAAa;AAAA,EAC/B;AACJ;;;;;;;;;;;;;;AC1F0D;AAE1D,IAAI,OAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2WV,sEAAsB,CAAC;AAAA,EAAS;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA,CAAC;AAAA,EAED;AAAA,IACI,aAAa,CAAC,aAAa;AAAA,EAC/B;AACJ;;;;;;;;;;;;;;ACtyTV,sEAAsB,CAAC;AAAA,EAAS;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA,CAAC;AAAA,EAED;AAAA,IACI,aAAa,CAAC,aAAa;AAAA,EAC/B;AACJ;;;;;;;;;;;;ACpUa;;;AAGb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA,uBAAuB;AACvB,yBAAyB;AACzB,yBAAyB;AACzB,yBAAyB;AACzB,2BAA2B;;;AAG3B,yBAAyB,oCAAoC;;AAE7D;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA,8BAA8B;AAC9B;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD;AACjD,iDAAiD;AACjD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,qDAAU;;AAEvC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB;;AAExB,qBAAqB;;AAErB;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA,gCAAgC;AAChC;AACA;;AAEA,qCAAqC;AACrC;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;ACvpBa;;;AAGb;AACA;AACA;;AAEA;AACA,eAAe,oHAA+C;AAC9D,eAAe,kHAA8C;AAC7D,eAAe,gHAA6C;AAC5D,eAAe,gHAA6C;;AAE5D,QAAQ,YAAY;AACpB;;AAEA,QAAQ,OAAO;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;;AAEA;;AAEA;;AAEA,mDAAmD,EAAE;;AAErD;AACA;;AAEA;;AAEA,yBAAyB,EAAE,cAAc,EAAE,kCAAkC,IAAI;;AAEjF;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA;AACA,cAAc,2BAA2B,QAAQ;AACjD;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8CAA8C;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAU,6BAA6B;;AAEvC;;AAEA,qBAAqB,KAAK;;AAE1B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yEAAyE,KAAK;AAC9E;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;AAEA,6BAA6B,IAAI;;AAEjC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACtLa;;AAEb,uBAAuB,mBAAO,CAAC,mEAAe;;AAE9C;AACA,mBAAmB;AACnB,oBAAoB;AACpB;AACA;;AAEA;AACA,gCAAgC;AAChC;;AAEA;;AAEA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC,sBAAsB,qBAAqB;AAC3C;AACA,sBAAsB;AACtB;AACA;AACA,gCAAgC;AAChC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC;;;AAGlC,6BAA6B;;AAE7B;AACA,iDAAiD;;AAEjD,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,4DAA4D,IAAI;AAChE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;;;;;;;;;;;;ACzJa;AACb;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,6DAAY;;AAElC;AACA,8BAA8B,IAAI,MAAM,IAAI;AAC5C;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uBAAuB,IAAI,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,GAAG;AACzB;AACA;AACA,KAAK;AACL;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA,UAAU,IAAI;AACd;AACA;AACA;AACA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,UAAU;AACV;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACpVA;AACA,UAAU,oBAAoB;AAC9B,WAAW,QAAQ;AACnB,WAAW,KAAK,0CAA0C;AAC1D,aAAa,SAAS;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB,qDAAqD,gBAAgB;AACrE;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,OAAO,IAAI;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA,gBAAgB;AAChB,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,IAAI;AAChB,eAAe,GAAG;AAClB,WAAW,GAAG;AACd;AACA,WAAW,QAAQ,mBAAmB;AACtC,YAAY,kBAAkB;AAC9B;AACA,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,MAAM;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA,uCAAuC;AACvC;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,cAAc;AACd;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrRa;;;AAGb,6FAAkC;;;;;;;;;;;;ACHlC,yBAAyB;AACzB;AACa;;AAEb;AACA,6HAA2D;;;;;;;;;;;;ACL3D;AACA;;AAEa;;;AAGb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrEA;;AAEa;;AAEb;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B;AAC1B,qCAAqC;;;;;;;;;;;;AC3BrC;AACA;AACa;;;AAGb,uBAAuB;;AAEvB,yBAAyB;;AAEzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,oCAAoC;AACpC,4DAA4D;AAC5D;AACA,gCAAgC;AAChC,oBAAoB;AACpB,gCAAgC;AAChC,gCAAgC;AAChC;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA,8CAA8C,cAAc,EAAE;AAC9D,wCAAwC,KAAK,EAAE;AAC/C;;AAEA,8CAA8C,IAAI,OAAO,IAAI;;AAE7D,eAAe,mBAAO,CAAC,qEAAY;;AAEnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;AACA,CAAC;;AAED;AACA,+BAA+B;AAC/B;AACA;;AAEA;AACA,uDAAuD;;AAEvD;AACA,mBAAmB;AACnB;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wCAAwC;;AAExC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,mBAAO,CAAC,kFAA6B;;AAE5D;AACA;AACA;AACA;;;AAGA;AACA;AACA,oDAAoD,oCAAoC,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,2BAA2B,GAAG,EAAE,MAAM,KAAK;AACrD,UAAU,yBAAyB,GAAG,EAAE,MAAM,IAAI,MAAM;AACxD,UAAU,mBAAmB,GAAG,EAAE,EAAE,iBAAiB,EAAE,iCAAiC,MAAM;AAC9F,UAAU,2BAA2B,GAAG,EAAE,EAAE,iBAAiB,KAAK;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,qFAA8C;AAC9C,6FAAiD;;AAEjD,cAAc;AACd,gBAAgB;AAChB,WAAW;AACX,kBAAkB;AAClB,mBAAmB;AACnB,yBAAyB;AACzB,qBAAqB;AACrB;AACA,kBAAkB;AAClB,sBAAsB;AACtB,eAAe;AACf,oBAAoB;AACpB,sBAAsB;AACtB,mBAAmB;AACnB,gBAAgB;AAChB,0BAA0B;;;;;;;;;;;;AC5T1B;AACa;;;AAGb,oIAA4D;AAC5D,sJAAkE;AAClE,oIAA4D;;;;;;;;;;;;ACN5D;AACA;AACa;;;AAGb,kBAAkB,0GAAsC;;;AAGxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,OAAO;;AAEjC;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA,wCAAwC;;AAExC;AACA,8CAA8C;AAC9C;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA,uBAAuB;AACvB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;AC/CA;AACA;AACa;;;AAGb,kBAAkB,0GAAsC;;;AAGxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;;AAEA,uFAAuF;;AAEvF;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;ACtDA;;AAEa;;;AAGb,mBAAmB,mBAAO,CAAC,sEAAgB;AAC3C,mBAAmB,mBAAO,CAAC,kEAAW;AACtC,mBAAmB,mBAAO,CAAC,8DAAY;AACvC,mBAAmB,mBAAO,CAAC,oEAAe;AAC1C,mBAAmB,mBAAO,CAAC,sEAAgB;AAC3C,mBAAmB,mBAAO,CAAC,wEAAiB;AAC5C,mBAAmB,mBAAO,CAAC,sDAAY;AACvC,mBAAmB,mBAAO,CAAC,4CAAO;AAClC,mBAAmB,mBAAO,CAAC,yDAAU;;;AAGrC;AACA,WAAW,mBAAO,CAAC,4EAAmB;AACtC,QAAQ,mBAAO,CAAC,sEAAgB;AAChC,cAAc,mBAAO,CAAC,kFAAsB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;;AAErD;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,aAAa;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,aAAa;AACrB;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,WAAW;AACX;AACA;AACA,kBAAkB;AAClB;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;;AAGhC;AACA;;AAEA,iBAAiB;AACjB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0BAA0B;AAChD,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA,kBAAkB;;AAElB,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA,GAAG;;AAEH;;AAEA,6CAA6C,kCAAkC;;AAE/E;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA,GAAG;;AAEH;;AAEA,6CAA6C,kCAAkC;;AAE/E;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;;;;ACrkBA;AACA;AACA;AACA;AACA;AACa;;;AAGb,sBAAsB,mBAAO,CAAC,wDAAS;;;AAGvC;AACA;AACA;AACA,kBAAkB,mBAAO,CAAC,gFAAqB;AAC/C,kBAAkB,mBAAO,CAAC,8EAAoB;AAC9C,kBAAkB,mBAAO,CAAC,gFAAqB;AAC/C,kBAAkB,mBAAO,CAAC,0FAA0B;AACpD,kBAAkB,mBAAO,CAAC,0EAAkB;AAC5C,kBAAkB,mBAAO,CAAC,8EAAoB;AAC9C,kBAAkB,mBAAO,CAAC,wFAAyB;AACnD,kBAAkB,mBAAO,CAAC,0FAA0B;AACpD,kBAAkB,mBAAO,CAAC,oFAAuB;AACjD,kBAAkB,mBAAO,CAAC,sFAAwB;AAClD,kBAAkB,mBAAO,CAAC,wFAAyB;AACnD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC,kDAAkD,mCAAmC;AACrF;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;;AAEd;;AAEA;AACA;;;AAGA,8BAA8B,mBAAO,CAAC,4FAA2B;;;AAGjE;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACa;;;AAGb,aAAa,mBAAO,CAAC,wDAAS;;;AAG9B;AACA,sBAAsB,mBAAO,CAAC,sFAAwB;AACtD,sBAAsB,mBAAO,CAAC,8EAAoB;AAClD,sBAAsB,mBAAO,CAAC,gFAAqB;AACnD,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,sBAAsB,mBAAO,CAAC,4FAA2B;AACzD,sBAAsB,mBAAO,CAAC,0FAA0B;AACxD;AACA;AACA,sBAAsB,mBAAO,CAAC,sFAAwB;AACtD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gCAAgC,OAAO;AACvC;AACA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,wFAAyB;;;AAGxD;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACa;;;AAGb,sBAAsB,mBAAO,CAAC,wDAAS;;;AAGvC;AACA;;AAEA;AACA,uBAAuB,mBAAO,CAAC,gFAAqB;AACpD,uBAAuB,mBAAO,CAAC,sFAAwB;AACvD,uBAAuB,mBAAO,CAAC,sFAAwB;AACvD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,uBAAuB,mBAAO,CAAC,0FAA0B;AACzD,uBAAuB,kIAAgD;AACvE,uBAAuB,wHAA2C;AAClE,uBAAuB,mBAAO,CAAC,gFAAqB;AACpD,uBAAuB,mBAAO,CAAC,kFAAsB;AACrD,uBAAuB,mBAAO,CAAC,wFAAyB;AACxD,uBAAuB,mBAAO,CAAC,8FAA4B;AAC3D,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,kGAA8B;AAC7D,uBAAuB,qIAAmD;AAC1E,uBAAuB,2HAA8C;AACrE;AACA;AACA,uBAAuB,mBAAO,CAAC,oGAA+B;AAC9D;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;;;AAGA,+BAA+B,mBAAO,CAAC,gGAA6B;;;AAGpE;;;;;;;;;;;;AC/LA;;AAEa;;;AAGb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChFA;;AAEa;;;AAGb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA,YAAY;AACZ,aAAa;AACb;AACA;AACA;;;;;;;;;;;;ACxCA;AACA;;AAEa;;;AAGb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;;AAGb,sBAAsB,oGAAgC;AACtD,sBAAsB,yGAAqC;AAC3D,sBAAsB,wGAAoC;;;AAG1D;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;;AAEA,sCAAsC,OAAO;AAC7C;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,SAAS;AAC5C;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACpVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;;AAGb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,2BAA2B;;AAE3B,kDAAkD;;AAElD;AACA,KAAK;AACL,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B,2CAA2C,uBAAuB;;AAElE;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/VA;;AAEa;;AAEb,cAAc,sGAAkC;;;AAGhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD;;AAExD;AACA,mDAAmD;;AAEnD;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA,cAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACjOA;;AAEa;;;AAGb;AACA;;AAEA,uDAAuD;;AAEvD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACjCA;;AAEa;;;AAGb;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD;;AAExD,uBAAuB;;AAEvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B;;AAE3B;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACjGA;;AAEa;;AAEb,cAAc,sGAAkC;;;AAGhD;AACA;AACA;AACA;;AAEA;AACA,wDAAwD;;AAExD;;AAEA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAkD;;AAElD,gBAAgB;;AAEhB;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;ACtDA;;AAEa;;AAEb,cAAc,sGAAkC;;;AAGhD;AACA;AACA;AACA;;AAEA;AACA,wDAAwD;;AAExD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC,yBAAyB;AACzB;;AAEA,iBAAiB;;AAEjB,gBAAgB;;AAEhB;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC5CA;;AAEa;;;AAGb,kBAAkB,mBAAO,CAAC,mFAAuB;AACjD,6BAA6B,yHAAmD;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD;;AAExD,gCAAgC;;AAEhC,mDAAmD;;AAEnD;;AAEA,cAAc,2BAA2B;AACzC,+CAA+C;AAC/C;;AAEA,qCAAqC;;AAErC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,sDAAsD;;AAEtD;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACzEA;;AAEa;;;AAGb;AACA;AACA;AACA;;AAEA;AACA,wDAAwD;;AAExD;AACA,kCAAkC;;AAElC;AACA,SAAS,gDAAgD;AACzD;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;AClFA;;AAEa;;AAEb,cAAc,sGAAkC;;;AAGhD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB;;AAEA,8CAA8C;;AAE9C,SAAS;AACT;AACA,sBAAsB;;AAEtB;;AAEA;;AAEA;AACA;AACA,+BAA+B;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI;AACJ;;AAEA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,+BAA+B;;AAE/B;AACA;AACA;AACA,oDAAoD;;AAEpD;AACA,yDAAyD;;AAEzD;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,gCAAgC;AAChC;AACA,MAAM;AACN;AACA,gCAAgC;AAChC;;AAEA,uEAAuE;AACvE;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACzWA;;AAEa;;;AAGb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,gDAAgD;AACzD;AACA;AACA,wDAAwD;;AAExD;AACA,sCAAsC;;AAEtC;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;;;;;;;;;;AClDa;;;AAGb,2BAA2B,iHAA6C;AACxE,2BAA2B,sGAAkC;;;AAG7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD;;AAExD,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,2DAA2D;AAC3D;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,SAAS,gDAAgD;AACzD;AACA;AACA,wDAAwD;;AAExD;AACA,sCAAsC;;AAEtC;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA,sEAAsE;;AAEtE;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA,sCAAsC;;AAEtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,WAAW;AACpB;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA,oCAAoC;AACpC;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;ACrMA;;AAEa;;AAEb,YAAY,mBAAO,CAAC,yDAAU;AAC9B,cAAc,sGAAkC;;;AAGhD;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA,uBAAuB;AACvB,uBAAuB;AACvB,4BAA4B;AAC5B,wBAAwB;AACxB,wBAAwB;;AAExB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0DAA0D,WAAW;AACrE;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,WAAW;AAC7C;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,WAAW;AAC7C,6CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,cAAc,YAAY;AAC1B;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;;;;ACtOA;;AAEa;;AAEb,cAAc,sGAAkC;;;AAGhD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;;AAEjC;;AAEA,kDAAkD;;AAElD;AACA,uDAAuD;;AAEvD;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA,uFAAuF;;AAEvF,uCAAuC;;AAEvC;AACA;AACA;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;;AAEA,0FAA0F;;AAE1F;AACA;;AAEA;;AAEA;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D;;AAE5D,gBAAgB;;AAEhB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iCAAiC,oBAAoB;AACrD,oDAAoD;;AAEpD;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA,qBAAqB;AACrB,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC5Na;;;AAGb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;ACfa;;AAEb;AACA;;AAEA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACa;;;AAGb,qBAAqB,6GAAyC;;;AAG9D;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;;AAEnC,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,gCAAgC,QAAQ;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA,iDAAiD;;AAEjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7IA;;AAEa;;;AAGb;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACa;;AAEb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,QAAQ;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,QAAQ;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,2BAA2B,GAAG,yBAAyB,GAAG;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,uCAAuC;;AAEvC,yCAAyC,aAAa;;AAEtD,kDAAkD;;AAElD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACxGA;AACA;AACa;;;AAGb,qBAAqB,2GAAuC;AAC5D,qBAAqB,0GAAsC;AAC3D,qBAAqB,6GAAyC;;AAE9D;AACA;AACA,2BAA2B;;;AAG3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,cAAc,mBAAmB;AACjC;;AAEA;;AAEA,+BAA+B,QAAQ;AACvC,yCAAyC;AACzC;AACA;;AAEA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR,wBAAwB,QAAQ;AAChC,uFAAuF;AACvF,4CAA4C;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR,wBAAwB,mBAAmB;AAC3C,uFAAuF;AACvF,4CAA4C;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA,4CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,uCAAuC;;AAEvC,yCAAyC,aAAa;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACxMA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,yDAAU;;;AAG9B;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;;AAGA;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;;AAGb;AACA;AACA;;AAEA,sCAAsC,OAAO;AAC7C;;AAEA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA,0BAA0B,YAAY;AACtC;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR,6BAA6B;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;;AAEa;;;AAGb;AACA,gDAAgD,EAAE,gCAAgC,KAAK,6CAA6C,KAAK;AACzI,6CAA6C,KAAK;;;AAGlD;AACA;AACA;;AAEA,mDAAmD;;AAEnD;AACA;;AAEA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC3EA;;AAEa;;;AAGb;AACA;AACA;AACA;;AAEA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA,mEAAmE;;AAEnE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,+EAA+E;;AAE/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC9DA;AACA;AACa;;;AAGb;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;;AAEA;AACA;AACA,yBAAyB;AACzB;;AAEA,sBAAsB,iBAAiB;AACvC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,WAAW,0BAA0B;AACrC;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjIA;AACA;AACa;;;AAGb;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA,gBAAgB;;AAEhB,4DAA4D;;AAE5D;;AAEA,cAAc,oBAAoB;AAClC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjIA,+BAA+B,QAAQ,QAAQ;;AAElC;;AAEb,wBAAwB,mBAAO,CAAC,6EAAoB;AACpD,wBAAwB,kGAA8B;AACtD,wBAAwB,gHAA4C;AACpE,wBAAwB,4GAAwC;;;AAGhE,mCAAmC,IAAI,OAAO,IAAI,GAAG;AACrD,mCAAmC,KAAK,EAAE;;;AAG1C;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACtDA;;AAEa;;AAEb,cAAc,sGAAkC;;AAEhD;;AAEA,gBAAgB,SAAS,OAAO;;AAEhC,oBAAoB,WAAW,EAAE;AACjC,qCAAqC,gCAAgC;;;AAGrE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;;AAGb;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,YAAY;AACpC;AACA;AACA,2CAA2C;AAC3C;AACA,2CAA2C;;AAE3C;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACxCA;;AAEa;;;AAGb,kBAAkB,8GAAwC;;;AAG1D;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,sBAAsB;AACtB;AACA;;;AAGA;AACA;AACA;;AAEA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzDA;;AAEa;;AAEb,2BAA2B,iHAA6C;AACxE,2BAA2B,sGAAkC;;;AAG7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD;AACzD,6DAA6D;;AAE7D;AACA;;AAEA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA,6CAA6C;AAC7C;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB;AACA,+CAA+C;AAC/C;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACvJA;;AAEa;;AAEb,2BAA2B,iHAA6C;AACxE,2BAA2B,sGAAkC;;;AAG7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD;;AAEzD;AACA;;AAEA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA,6CAA6C;AAC7C;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,WAAW;AAC1B;AACA,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACrJA;;AAEa;;;AAGb;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC7DA;;AAEa;;AAEb,cAAc,sGAAkC;;;AAGhD;AACA;;AAEA,oDAAoD;;AAEpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA,4DAA4D;;AAE5D;AACA;AACA;;;;;;;;;;;;AC7CA;;AAEa;;;AAGb,qBAAqB,mBAAO,CAAC,yDAAU;AACvC,qBAAqB,2GAAuC;AAC5D,qBAAqB,0GAAsC;AAC3D,qBAAqB,6GAAyC;;;AAG9D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc,aAAa;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6DAA6D;;AAE7D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;;;;;;;;;;;;AC7JA;AACA;AACa;;;AAGb;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA,gBAAgB;;AAEhB,gCAAgC;;AAEhC;AACA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,SAAS;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjIA;AACA;;AAEa;;;AAGb;AACA,MAAM;;AAEN,oDAAoD,oCAAoC,MAAM;;AAE9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;;AAE3B,iBAAiB;;AAEjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA,iBAAiB;;AAEjB;;AAEA;AACA,EAAE;;;;;;;;;;;;ACxFF;;AAEa;;;AAGb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;;AAErB;;AAEA,kCAAkC,SAAS;AAC3C,gCAAgC;AAChC;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;;;;;;;;;;;;;ACvMa;;;AAGb;;AAEA;;AAEA;AACA;AACA,eAAe;;AAEf;;AAEA,cAAc,SAAS;AACvB;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,oCAAoC,EAAE;AACtC;AACA;;AAEA,gCAAgC,OAAO;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;;;AAGA,0BAA0B;AAC1B;;;AAGA;;;;;;;;;;;;;ACxHa;;;AAGb;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;;AAEA,cAAc,SAAS;AACvB;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,cAAc,oBAAoB;AAClC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iCAAiC,OAAO;AACxC;;AAEA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0BAA0B;AAC1B;;;AAGA;;;;;;;;;;;;;AChGa;;;AAGb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACxBa;;;AAGb,6FAA2C;AAC3C,6FAA2C;AAC3C,6FAA2C;AAC3C,0FAA0C;;;;;;;;;;;;ACN1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,KAAK;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,2CAA2C,KAAK;AAChD,0CAA0C,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA,qBAAqB;AACrB;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;;;;;;;;;;;;;;;;;;;;;ACvTa;;AAEb;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,uBAAuB;;AAEvB;AACA;AACA,oCAAoC;AACpC,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,KAAK;AACL,oCAAoC;AACpC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB,6CAA6C,qBAAqB;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;;AAEhD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEsE;AACtE,iEAAe,QAAQ,EAAC;;;;;;;;;;;AC3bxB;;;;;;;;;;ACAA;;;;;;;;;;ACAA,8BAA8B,WAAW,EAAE;;;;;;;;;;ACA3C;;;;;;;;;;;ACAa;;AAEb,kHAA+C;AAC/C,+GAA8C;AAC9C,+GAA8C;AAC9C,4GAA6C;AAC7C,4GAA6C;;;;;;;;;;;ACN7C;;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNmB","sources":["webpack://@leuffen/themejs-sys/./dev.ts","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/ce/custom-element.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/ce/html.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/ce/htmlFile.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/ce/loadHtml.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/apply.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/create-element.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/debounce.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/debouncer.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/dom-ready.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/elwalk.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/eval.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/ka-set-options.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/query-select.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/sleep.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/storage.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/core/str-to-camelcase.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/element/KaCustomElement.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/element/KaCustomFragment.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/element/KaCustomModal.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/element/KaCustomWrapper.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/element/KaHtmlElement.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/element/KaModal.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/element/ka-use.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/functions.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/index.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/tpl/template.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/tpl/templatify.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/embed/dist/types.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/kit-bootstrap/dist/base/tab-pane.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/kit-bootstrap/dist/form/form-input.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/kit-bootstrap/dist/form/quick-input.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/kit-bootstrap/dist/functions.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/kit-bootstrap/dist/index.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/kit-bootstrap/dist/modals/flex-modal.js","webpack://@leuffen/themejs-sys/./node_modules/@kasimirjs/kit-bootstrap/dist/sidebar/sidebar-wrapper.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle-dev/dist/components/ExampleSwitcherElement.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle-dev/dist/components/JodaDevSidebarElement.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle-dev/dist/components/JodaShowcaseElement.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle-dev/dist/config.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle-dev/dist/index.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/component/joda-content-element.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/component/joda-fetch.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/component/joda-split.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/helper/JodaDescriptionManager.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/helper/JodaElementException.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/helper/JodaErrorElement.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/helper/JodaRenderer.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/helper/JodaSiteConfig.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/helper/QTemplate.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/helper/functions.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/helper/ka-quick-template.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/helper/logger.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/index.module.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/joda.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/processor/LayoutProcessor.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/processor/jodaresponsive.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/processor/jodashorts.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/processor/jodasplit.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/processor/jodastyle-commands.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/processor/jodastyle.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/processor/jodavisualize.js","webpack://@leuffen/themejs-sys/./node_modules/@leuffen/jodastyle/dist/types/DefaultLayout.js","webpack://@leuffen/themejs-sys/./src.dev/index-dev.ts","webpack://@leuffen/themejs-sys/./src.dev/showcase/contact-page.ts","webpack://@leuffen/themejs-sys/./src.dev/showcase/default-page.ts","webpack://@leuffen/themejs-sys/./src.dev/showcase/legal-page.ts","webpack://@leuffen/themejs-sys/./node_modules/linkify-it/index.js","webpack://@leuffen/themejs-sys/./node_modules/linkify-it/lib/re.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it-attrs/index.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it-attrs/patterns.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it-attrs/utils.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/index.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/common/entities.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/common/html_blocks.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/common/html_re.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/common/utils.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/helpers/index.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/index.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/parser_block.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/parser_core.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/parser_inline.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/presets/commonmark.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/presets/default.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/presets/zero.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/renderer.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/ruler.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/code.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/fence.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/heading.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/hr.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/html_block.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/lheading.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/list.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/reference.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/state_block.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_block/table.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_core/block.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_core/inline.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_core/linkify.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_core/normalize.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_core/replacements.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_core/state_core.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_core/text_join.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/entity.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/escape.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/fragments_join.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/image.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/link.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/linkify.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/newline.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/rules_inline/text.js","webpack://@leuffen/themejs-sys/./node_modules/markdown-it/lib/token.js","webpack://@leuffen/themejs-sys/./node_modules/mdurl/decode.js","webpack://@leuffen/themejs-sys/./node_modules/mdurl/encode.js","webpack://@leuffen/themejs-sys/./node_modules/mdurl/format.js","webpack://@leuffen/themejs-sys/./node_modules/mdurl/index.js","webpack://@leuffen/themejs-sys/./node_modules/mdurl/parse.js","webpack://@leuffen/themejs-sys/./node_modules/punycode/punycode.es6.js","webpack://@leuffen/themejs-sys/./node_modules/uc.micro/categories/Cc/regex.js","webpack://@leuffen/themejs-sys/./node_modules/uc.micro/categories/Cf/regex.js","webpack://@leuffen/themejs-sys/./node_modules/uc.micro/categories/P/regex.js","webpack://@leuffen/themejs-sys/./node_modules/uc.micro/categories/Z/regex.js","webpack://@leuffen/themejs-sys/./node_modules/uc.micro/index.js","webpack://@leuffen/themejs-sys/./node_modules/uc.micro/properties/Any/regex.js","webpack://@leuffen/themejs-sys/webpack/bootstrap","webpack://@leuffen/themejs-sys/webpack/runtime/compat get default export","webpack://@leuffen/themejs-sys/webpack/runtime/define property getters","webpack://@leuffen/themejs-sys/webpack/runtime/hasOwnProperty shorthand","webpack://@leuffen/themejs-sys/webpack/runtime/make namespace object","webpack://@leuffen/themejs-sys/./docs/_src/dev-tools.ts"],"sourcesContent":["import \"@leuffen/jodastyle-dev\";\nimport \"./src.dev/index-dev\";\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ka_templatify } from \"../tpl/templatify.js\";\nimport { KaTemplate } from \"../tpl/template.js\";\nimport { ka_query_selector } from \"../core/query-select\";\nimport { RemoteTemplate } from \"./htmlFile\";\nexport class KaCustomElement extends HTMLElement {\n    constructor(props) {\n        super(props);\n        /**\n         *\n         * @protected\n         * @var {KaTemplate}\n         */\n        this.__tpl = null;\n        this.__isConnected = false;\n    }\n    /**\n     * The Template associated with this Element\n     *\n     * @return {KaTemplate}\n     */\n    get $tpl() {\n        return this.__tpl;\n    }\n    isConnected() {\n        return this.isConnected;\n    }\n    /**\n     * @abstract\n     * @return {Promise<void>}\n     */\n    connected($tpl, $this) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.warn(\"connected() method not overridden in\", this);\n        });\n    }\n    connectedCallback() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let callback = this.constructor.__callback;\n            if (callback === null) {\n            }\n            else {\n                callback.bind(this);\n            }\n            if (this.constructor.__tpl !== null) {\n                let origTpl = this.constructor.__tpl;\n                if (origTpl instanceof RemoteTemplate)\n                    origTpl = yield origTpl.load();\n                let tpl = ka_templatify(origTpl);\n                if (this.constructor.__options.shadowDom === true) {\n                    let shadowDom = this.attachShadow(this.constructor.__options.shadowDomOptions);\n                    shadowDom.appendChild(tpl);\n                }\n                else {\n                    this.appendChild(tpl);\n                }\n                this.__tpl = new KaTemplate(tpl);\n            }\n            if (this.constructor.__options.waitEvent !== null) {\n                let wd = this.constructor.__options.waitEvent.split(\"@\");\n                let eventName = wd[0];\n                let target = document;\n                if (wd.length === 2) {\n                    target = ka_query_selector(wd[1]);\n                }\n                target.addEventListener(eventName, (event) => __awaiter(this, void 0, void 0, function* () {\n                    callback(this.$tpl, this);\n                    this.__isConnected = true;\n                }));\n                return;\n            }\n            if (callback === null) {\n                // Class: Call connected() Method\n                yield this.connected(this.$tpl, this);\n                this.__isConnected = true;\n                return;\n            }\n            // Function\n            callback(this.$tpl, this);\n            this.__isConnected = true;\n        });\n    }\n}\n;\n","export function ka_html(htmlContent) {\n    if (htmlContent instanceof HTMLTemplateElement) {\n        return htmlContent;\n    }\n    let e = document.createElement(\"template\");\n    e.innerHTML = htmlContent;\n    return e;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ka_load_html } from \"./loadHtml\";\nexport class RemoteTemplate {\n    constructor(url) {\n        this.url = url;\n        this.tpl = null;\n    }\n    /**\n     *\n     * @return {Promise<HTMLTemplateElement>}\n     */\n    load() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.tpl === null)\n                this.tpl = yield ka_load_html(this.url);\n            return this.tpl;\n        });\n    }\n}\n/**\n * Load the Template on usage from remote location\n *\n *\n * @param url {string}\n * @return {RemoteTemplate}\n */\nfunction htmlUrl(url) {\n    return new RemoteTemplate(url);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n *\n * @param url {string}\n * @return {Promise<HTMLTemplateElement>}\n */\nexport function ka_load_html(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let e = document.createElement(\"template\");\n        let result = yield fetch(url);\n        if (!result.ok) {\n            console.error(`[loadHtml] failed to load '${url}'`);\n            throw `[loadHtml] failed to load '${url}'`;\n        }\n        let body = yield result.text();\n        e.innerHTML = body;\n        return e;\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ka_eval } from \"./eval.js\";\nimport { ka_str_to_camel_case } from \"./str-to-camelcase.js\";\nimport { isset, isUndefined } from \"../functions\";\nimport { KaCustomFragment } from \"../element/KaCustomFragment\";\nimport { KaUse } from \"../element/ka-use\";\nexport function ka_apply(selector, scope, recursive = false) {\n    var _a;\n    if (typeof selector === \"string\")\n        selector = KaToolsV1.querySelector(selector);\n    let attMap = {\n        \"textcontent\": \"textContent\",\n        \"htmlcontent\": \"innerHTML\",\n        \"innerhtml\": \"innerHTML\",\n    };\n    for (let attName of selector.getAttributeNames()) {\n        //console.log(attName);\n        if (!attName.startsWith(\"ka.\")) {\n            continue;\n        }\n        let attVal = selector.getAttribute(attName);\n        let attType = attName.split(\".\")[1];\n        let attSelector = attName.split(\".\")[2];\n        if (typeof attSelector === \"undefined\")\n            attSelector = null;\n        let registerEventHandler = function (element, action, callbackOrCode, scope) {\n            if (typeof element._ka_on === \"undefined\")\n                element._ka_on = {};\n            if (typeof element._ka_on[action] === \"undefined\")\n                element.addEventListener(action, (e) => element._ka_on[action](e));\n            element._ka_on[action] = (e) => __awaiter(this, void 0, void 0, function* () {\n                scope[\"$event\"] = e;\n                if (typeof callbackOrCode === \"function\") {\n                    return callbackOrCode(e, element, scope);\n                }\n                else {\n                    return ka_eval(callbackOrCode, scope, element);\n                }\n            });\n        };\n        if (attType === \"on\") {\n            let attScope = Object.assign({ $scope: scope }, scope);\n            if (attSelector !== null) {\n                registerEventHandler(selector, attSelector, attVal, attScope);\n            }\n            else {\n                let callBackMap = KaToolsV1.eval(attVal, attScope, selector);\n                for (let curAction in callBackMap) {\n                    registerEventHandler(selector, curAction, callBackMap[curAction], attScope);\n                }\n            }\n            continue;\n        }\n        let r = null;\n        if (typeof attVal !== \"undefined\" && typeof attVal !== null && attVal !== \"\")\n            r = ka_eval(attVal, scope, selector);\n        switch (attType) {\n            case \"use\":\n                if (!(selector instanceof KaUse)) {\n                    let elem = new KaUse();\n                    // Copy all attributes from selector to elem\n                    for (let attName of selector.getAttributeNames()) {\n                        elem.setAttribute(attName, selector.getAttribute(attName));\n                    }\n                    selector.replaceWith(elem);\n                    selector = elem;\n                }\n                selector.use(r, scope);\n                continue;\n            case \"become\":\n                if (!(r instanceof HTMLElement)) {\n                    console.error(\"ka.become is only available on HTMLElements: Used on \", r, \"found in \", selector);\n                    throw \"ka.become called on non HTMLElement.\";\n                }\n                let attributes = selector.attributes;\n                selector.replaceWith(r);\n                continue;\n            case \"content\":\n                selector.setAttribute(\"ka.stop\", \"\");\n                if (typeof r === \"string\") {\n                    selector.innerHTML = r;\n                    continue;\n                }\n                if (!(r instanceof HTMLElement)) {\n                    console.error(\"ka.content is only available on HTMLElements: Used on \", r, \"found in \", selector);\n                    throw \"ka.content called on non HTMLElement.\";\n                }\n                selector.append(r);\n                continue;\n            case \"scope\":\n                if (!(r instanceof Object)) {\n                    console.error(\"ka.scope must be object type <ka-use/> Elements: Value is \", r, \"found in \", selector);\n                    throw \"ka.scope insuffient value\";\n                }\n                selector.setScope(r);\n                continue;\n            case \"stop\":\n                continue;\n            case \"debug\":\n                console.log(\"ka.debug on element\", selector, \"value:\", r, \"scope:\", scope);\n                continue;\n            case \"ref\":\n                if (isUndefined(scope.$ref))\n                    scope.$ref = {};\n                // Allow ref without parameter to use $ref.$last\n                if (r !== null)\n                    scope.$ref[r] = selector;\n                scope.$ref.$last = selector;\n                break;\n            case \"classlist\":\n                if (attSelector !== null) {\n                    if (r === true) {\n                        selector.classList.add(attSelector);\n                    }\n                    else {\n                        selector.classList.remove(attSelector);\n                    }\n                    break;\n                }\n                if (typeof r === \"string\") {\n                    // Split and add all classes\n                    r = r.split(\" \").filter((e) => e.trim() !== \"\");\n                }\n                if (Array.isArray(r)) {\n                    for (let cname of r) {\n                        if (cname.trim() === \"\")\n                            continue;\n                        selector.classList.add(cname);\n                    }\n                    break;\n                }\n                for (let cname in r) {\n                    if (r[cname] === true) {\n                        selector.classList.add(cname);\n                    }\n                    else {\n                        selector.classList.remove(cname);\n                    }\n                }\n                break;\n            case \"style\":\n                if (attSelector !== null && attSelector.startsWith(\"--\")) {\n                    selector.style.setProperty(attSelector, r);\n                    break;\n                }\n                if (attSelector !== null) {\n                    let val = r;\n                    if (typeof val === \"number\" && [\"left\", \"top\", \"height\", \"width\", \"bottom\", \"right\", \"line-height\", \"font-size\"].indexOf(attSelector) !== -1)\n                        val = val + \"px\";\n                    selector.style[ka_str_to_camel_case(attSelector)] = val;\n                    break;\n                }\n                for (let cname in r) {\n                    let val = r[cname];\n                    if (typeof val === \"number\" && [\"left\", \"top\", \"height\", \"width\", \"bottom\", \"right\", \"line-height\", \"font-size\"].indexOf(cname) !== -1)\n                        val = val + \"px\";\n                    selector.style[ka_str_to_camel_case(cname)] = val;\n                }\n                break;\n            case \"bindarray\":\n                if (attSelector === \"default\")\n                    continue;\n                if (isUndefined(r)) {\n                    // Bind default values\n                    if (selector.hasAttribute(\"ka.bind.default\")) {\n                        scope = Object.assign({ $scope: scope }, scope);\n                        scope = Object.assign(Object.assign({ $scope: scope }, scope), { __curVal: ka_eval(selector.getAttribute(\"ka.bind.default\"), scope, selector) });\n                        ka_eval(`${attVal} = __curVal`, scope, selector);\n                        r = scope.__curVal;\n                    }\n                }\n                if (!Array.isArray(r)) {\n                    console.error(\"kap:bindarr: Not an array!\", r, selector);\n                    return;\n                }\n                if (r.indexOf(selector.value) === -1)\n                    selector.checked = false;\n                else\n                    selector.checked = true;\n                if (typeof selector._kap_bind === \"undefined\") {\n                    selector.addEventListener(\"change\", (event) => {\n                        let arr = ka_eval(attVal, scope, selector);\n                        if (arr.indexOf(selector.value) === -1 && selector.checked)\n                            arr.push(selector.value);\n                        if (arr.indexOf(selector.value) !== -1 && !selector.checked)\n                            arr = arr.filter((e) => e !== selector.value);\n                        scope = Object.assign(Object.assign({ $scope: scope }, scope), { __curVal: arr });\n                        ka_eval(`${attVal} = __curVal`, scope, selector);\n                        if (scope.$on && scope.$on.change)\n                            scope.$on.change(event);\n                    });\n                    selector._kap_bind = true;\n                }\n                break;\n            case \"bind\":\n                if (attSelector === \"default\")\n                    continue;\n                if (isUndefined(r)) {\n                    // Bind default values\n                    if (isset(selector.value)) {\n                        scope = Object.assign(Object.assign({ $scope: scope }, scope), { __curVal: selector.value });\n                        ka_eval(`${attVal} = __curVal`, scope, selector);\n                        r = scope.__curVal;\n                    }\n                    if (selector.hasAttribute(\"ka.bind.default\")) {\n                        scope = Object.assign({ $scope: scope }, scope);\n                        scope = Object.assign(Object.assign({ $scope: scope }, scope), { __curVal: ka_eval(selector.getAttribute(\"ka.bind.default\"), scope, selector) });\n                        ka_eval(`${attVal} = __curVal`, scope, selector);\n                        r = scope.__curVal;\n                    }\n                }\n                if (selector.type === \"checkbox\" || selector.type === \"radio\") {\n                    if (selector.hasAttribute(\"value\")) {\n                        if (r === selector.getAttribute(\"value\"))\n                            selector.checked = true;\n                        else\n                            selector.checked = false;\n                    }\n                    else {\n                        if (r === true)\n                            selector.checked = true;\n                        else\n                            selector.checked = false;\n                    }\n                }\n                else {\n                    selector.value = typeof r !== \"undefined\" ? r : \"\";\n                }\n                if (typeof selector._kap_bind === \"undefined\") {\n                    selector.addEventListener(\"change\", (event) => {\n                        let value = null;\n                        if (selector.type === \"checkbox\" || selector.type === \"radio\") {\n                            if (selector.hasAttribute(\"value\")) {\n                                if (selector.checked === false)\n                                    return;\n                                value = selector.getAttribute(\"value\");\n                            }\n                            else {\n                                value = selector.checked;\n                            }\n                        }\n                        else {\n                            value = selector.value;\n                        }\n                        scope = Object.assign(Object.assign({ $scope: scope }, scope), { __curVal: value });\n                        ka_eval(`${attVal} = __curVal`, scope, selector);\n                        if (scope.$on && scope.$on.change)\n                            scope.$on.change(event);\n                    });\n                    selector.addEventListener(\"keyup\", (event) => {\n                        scope = Object.assign(Object.assign({ $scope: scope }, scope), { __curVal: selector.value });\n                        ka_eval(`${attVal} = __curVal`, scope, selector);\n                        if (scope.$on && scope.$on.change)\n                            scope.$on.change(event);\n                    });\n                    selector._kap_bind = true;\n                }\n                break;\n            case \"options\":\n                let value = selector.value;\n                selector.innerHTML = \"\";\n                for (let option in r) {\n                    if (!Array.isArray(r)) {\n                        // Object key => value value => text\n                        selector.appendChild(new Option(r[option], option));\n                    }\n                    else {\n                        // Array\n                        if (((_a = r[option]) === null || _a === void 0 ? void 0 : _a.text) !== undefined) {\n                            selector.appendChild(new Option(r[option].text, r[option].value));\n                        }\n                        else {\n                            // Array value and text will be array value\n                            selector.appendChild(new Option(r[option], r[option]));\n                        }\n                    }\n                }\n                if (value !== null)\n                    selector.value = value;\n                break;\n            case \"attr\":\n                if (attSelector !== null) {\n                    if (r === null || r === false) {\n                        selector.removeAttribute(attSelector);\n                    }\n                    else {\n                        selector.setAttribute(attSelector, r);\n                    }\n                    break;\n                }\n                for (let cname in r) {\n                    if (r[cname] === null || r[cname] === false) {\n                        selector.removeAttribute(cname);\n                    }\n                    else {\n                        selector.setAttribute(cname, r[cname]);\n                    }\n                }\n                break;\n            case \"prop\":\n                if (attSelector !== null) {\n                    // Set Property directly\n                    selector[ka_str_to_camel_case(attSelector)] = r;\n                    break;\n                }\n                for (let cname in r) {\n                    selector[ka_str_to_camel_case(cname)] = r[cname];\n                }\n                break;\n            default:\n                if (typeof attMap[attType] !== \"undefined\")\n                    attType = attMap[attType];\n                if (typeof selector[attType] === \"undefined\") {\n                    console.warn(\"apply(): trying to set undefined property \", attType, \"on element\", selector);\n                }\n                selector[attType] = r;\n                break;\n        }\n    }\n    if (recursive) {\n        for (let e of selector.children) {\n            ka_apply(e, scope, recursive);\n        }\n    }\n}\n","/**\n * Create a new Element\n *\n * @param tagName {string}      The Tag Name\n * @param attributes {string<string>}   Attributes to set initially\n * @param appendToElement {HTMLElement}\n * @param children {HTMLElement[]}\n * @return HTMLElement\n */\nexport function ka_create_element(tagName, attributes = null, children = null, appendToElement = null) {\n    let e = document.createElement(tagName);\n    if (attributes === null)\n        attributes = {};\n    for (let attName in attributes) {\n        e.setAttribute(attName, attributes[attName]);\n    }\n    if (children instanceof NodeList) {\n        children = Array.from(children);\n    }\n    if (Array.isArray(children)) {\n        for (let ce of children) {\n            e.appendChild(ce);\n        }\n    }\n    if (typeof children === \"string\") {\n        e.innerText = children;\n    }\n    if (appendToElement !== null) {\n        appendToElement.appendChild(e);\n    }\n    return e;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst _debounceInterval = { i: null, time: null };\n/**\n * Debounce a event\n *\n *\n *\n * @param min   Minimum Time to wait\n * @param max   Trigger event automatically after this time\n * @return {Promise<unknown>}\n */\nexport function ka_debounce(min, max = null) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (max === null)\n            max = min;\n        let dbi = _debounceInterval;\n        return new Promise((resolve) => {\n            if (dbi.time < (+new Date()) - max && dbi.i !== null) {\n                return resolve();\n            }\n            if (dbi.i !== null) {\n                return;\n            }\n            dbi.time = (+new Date());\n            dbi.i = window.setTimeout(() => {\n                dbi.i = null;\n                return resolve();\n            }, min);\n        });\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Debouncer_resolve, _Debouncer_interval, _Debouncer_time;\nexport class Debouncer {\n    constructor(min = 100, max = null) {\n        this.min = min;\n        this.max = max;\n        _Debouncer_resolve.set(this, []);\n        _Debouncer_interval.set(this, null);\n        _Debouncer_time.set(this, null);\n    }\n    debounce(min = this.min, max = this.max) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (max === null)\n                max = min;\n            if (__classPrivateFieldGet(this, _Debouncer_interval, \"f\") !== null) {\n                window.clearInterval(__classPrivateFieldGet(this, _Debouncer_interval, \"f\"));\n            }\n            __classPrivateFieldSet(this, _Debouncer_interval, window.setInterval(() => {\n                __classPrivateFieldGet(this, _Debouncer_resolve, \"f\").forEach(r => r());\n                __classPrivateFieldSet(this, _Debouncer_resolve, [], \"f\");\n                window.clearInterval(__classPrivateFieldGet(this, _Debouncer_interval, \"f\"));\n            }, min), \"f\");\n            return new Promise((resolve) => {\n                __classPrivateFieldGet(this, _Debouncer_resolve, \"f\").push(resolve);\n            });\n        });\n    }\n}\n_Debouncer_resolve = new WeakMap(), _Debouncer_interval = new WeakMap(), _Debouncer_time = new WeakMap();\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * Wait for DomContentLoaded or resolve immediate\n *\n * <example>\n * await MicxToolsVx.domReady();\n * </example>\n *\n * @return {Promise<string>}\n */\nexport function ka_dom_ready() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => {\n            if (document.readyState === \"complete\" || document.readyState === \"interactive\")\n                return resolve(\"loaded\");\n            document.addEventListener(\"DOMContentLoaded\", () => resolve('DOMContentLoaded'));\n        });\n    });\n}\n","/**\n *\n * @param {HTMLElement} elem\n * @param fn\n * @param recursive\n */\nexport function ka_elwalk(elem, fn, recursive = false, includeFirst = false) {\n    if (Array.isArray(elem))\n        elem.children = elem;\n    if (typeof elem.children === \"undefined\")\n        return;\n    if (includeFirst && elem instanceof HTMLElement) {\n        let ret = fn(elem);\n        if (ret === false)\n            return false;\n    }\n    for (let child of elem.children) {\n        let ret = fn(child);\n        if (ret === false)\n            continue; // No recursiion\n        if (recursive && typeof child.children !== \"undefined\")\n            ka_elwalk(child, fn, recursive);\n    }\n}\n","export function ka_eval(stmt, __scope, e, __refs) {\n    if (stmt.endsWith(\";\"))\n        stmt = stmt.slice(0, -1);\n    const reserved = [\"var\", \"null\", \"let\", \"const\", \"function\", \"class\", \"in\", \"of\", \"for\", \"true\", \"false\", \"await\", \"$this\"];\n    let r = \"var $this = e;\";\n    for (let __name in __scope) {\n        if (reserved.indexOf(__name) !== -1)\n            continue;\n        if (__name.indexOf(\"-\") !== -1) {\n            console.error(`Invalid scope key '${__name}': Cannot contain - in scope:`, __scope);\n            throw `eval() failed: Invalid scope key: '${__name}': Cannot contain minus char '-'`;\n        }\n        r += `var ${__name} = __scope['${__name}'];`;\n    }\n    // If the scope was cloned, the original will be in $scope. This is important when\n    // Using events [on.click], e.g.\n    if (typeof __scope.$scope === \"undefined\") {\n        r += \"var $scope = __scope;\";\n    }\n    try {\n        // console.log(r + '(' + stmt + ')');\n        const func = new Function('e', '__scope', r + '; return ' + stmt);\n        return func(e, __scope);\n    }\n    catch (ex) {\n        console.error(\"cannot eval() stmt: '\" + stmt + \"': \" + ex, \" on element \", e, ex, \"(context:\", __scope, \")\");\n        throw \"eval('\" + stmt + \"') failed: \" + ex;\n    }\n}\n","export function ka_set_options(element, options, value = null) {\n    element.innerHTML = \"\";\n    for (let option in options) {\n        if (isNaN(option)) {\n            element.appendChild(new Option(options[option], option));\n        }\n        else {\n            if (typeof options[option].text !== \"undefined\") {\n                element.appendChild(new Option(options[option].text, options[option].value));\n            }\n            else {\n                element.appendChild(new Option(options[option], options[option]));\n            }\n        }\n    }\n    if (value !== null)\n        element.value = value;\n}\n","/**\n * Query a Element or trigger an Exception\n *\n * @param query\n * @param parent\n * @param exception\n * @return {HTMLElement}\n */\nexport function ka_query_selector(query, parent = null, exception = null) {\n    if (typeof exception === \"undefined\" || exception === null)\n        exception = `querySelector '${query}' not found`;\n    if (typeof parent === \"undefined\" || parent === null)\n        parent = document;\n    let e = parent.querySelectorAll(query);\n    if (e.length === 0) {\n        console.warn(exception, \"on parent: \", parent);\n        throw exception;\n    }\n    return e[0];\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function ka_sleep(sleepms) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => {\n            window.setTimeout(() => {\n                return resolve();\n            }, sleepms);\n        });\n    });\n}\n","/**\n * Return a Proxy handling saving / deleting / updating the object in the localStorage\n * @param object\n * @param scopeName\n */\nexport function ka_session_storage(object = {}, scopeName = null) {\n    if (scopeName == null) {\n        scopeName = \"ka_session_storage\";\n    }\n    if (object === null) {\n        sessionStorage.removeItem(scopeName);\n        return;\n    }\n    if (sessionStorage.getItem(scopeName) == null) {\n        sessionStorage.setItem(scopeName, JSON.stringify(object));\n    }\n    let savedObject = JSON.parse(sessionStorage.getItem(scopeName));\n    for (let key in object) {\n        if (typeof savedObject[key] === \"undefined\") {\n            savedObject[key] = object[key];\n        }\n    }\n    let proxy = new Proxy(savedObject, {\n        set: function (target, property, value, receiver) {\n            target[property] = value;\n            sessionStorage.setItem(scopeName, JSON.stringify(target));\n            return true;\n        }\n    });\n    return proxy;\n}\n","/**\n * Transform any input to CamelCase\n *\n * Example: some-class => someClass\n *\n * @param str {string}\n * @return {string}\n */\nexport function ka_str_to_camel_case(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (ltr, idx) => idx === 0 ? ltr.toLowerCase() : ltr.toUpperCase()).replace(/[^a-zA-Z0-9]+/g, '');\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createScopeObject } from \"../types\";\nimport { isset } from \"../functions\";\nimport { ka_templatify } from \"../tpl/templatify\";\nimport { ka_html } from \"../ce/html\";\nimport { KaTemplate } from \"../tpl/template\";\nimport { ka_create_element } from \"../core/create-element\";\nclass ShadowRootConfig {\n    constructor() {\n        this.mode = null; // Default null: No shadowRoot\n        this.stylesheets = [];\n    }\n}\nexport class KaCustomElement extends HTMLElement {\n    constructor() {\n        super(...arguments);\n        this.__ka_stop_render = true; // Stop rendering if this element is reached\n        this.shadowRootConfig = new ShadowRootConfig(); // Activate shadowRoot\n        this.html = \"Undefined Template\";\n        this.scope = createScopeObject();\n        this.tplPrototype = null;\n        this.wrapper = null;\n    }\n    init(scope) {\n        this.scope.init(scope);\n        return this.scope;\n    }\n    wrap(fragment) {\n        this.wrapper = fragment;\n    }\n    setParentScope(scope) {\n        this.scope.$parent = scope;\n    }\n    connectedCallback() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.scope.isInitialized())\n                this.init({});\n            // Check template set by customElement annotation\n            // Cannot be done in constructor because of async behavior\n            if (isset(this.constructor[\"html\"])) {\n                this.html = this.constructor[\"html\"];\n            }\n            if (this.tplPrototype === null) {\n                this.tplPrototype = ka_templatify(ka_html(this.html));\n            }\n            this.tpl = this.tplPrototype.cloneNode(true);\n            this.scope.$tpl = new KaTemplate(this.tpl);\n            // Adding Shadow Root\n            let domRoot = this;\n            if (this.shadowRootConfig.mode !== null) {\n                domRoot = this.attachShadow({ mode: this.shadowRootConfig.mode });\n                this.shadowRootConfig.stylesheets.forEach((stylesheet) => {\n                    ka_create_element(\"link\", { rel: \"stylesheet\", href: stylesheet }, null, domRoot);\n                });\n            }\n            if (this.wrapper !== null) {\n                yield this.wrapper.fragmentConnectedCallback();\n                domRoot.append(this.wrapper.wrapTemplate(this.tpl));\n                this.wrapper.wrapFinish();\n            }\n            else {\n                domRoot.append(this.tpl);\n            }\n            this.scope.render();\n        });\n    }\n    disconnectedCallback() {\n        if (this.scope.$tpl !== undefined)\n            this.scope.$tpl.dispose();\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createScopeObject } from \"../types\";\nimport { isset } from \"../functions\";\nimport { ka_templatify } from \"../tpl/templatify\";\nimport { ka_html } from \"../ce/html\";\nimport { KaTemplate } from \"../tpl/template\";\nimport { ka_sleep } from \"../core/sleep\";\nexport class KaCustomFragment {\n    constructor() {\n        this.scope = createScopeObject();\n        this.html = null;\n    }\n    init(scope) {\n        // Check template set by customElement annotation\n        if (isset(this.constructor[\"html\"]) && this.html === null)\n            this.html = this.constructor[\"html\"];\n        if (!isset(this.tplPrototype))\n            this.tplPrototype = ka_templatify(ka_html(this.html));\n        this.scope.init(scope);\n        return this.scope;\n    }\n    setParentScope(scope) {\n        this.scope.$parent = scope;\n    }\n    setScope(scope) {\n        this.scope.importFrom(scope);\n    }\n    fragmentConnectedCallback(parentElement) {\n        return __awaiter(this, void 0, void 0, function* () {\n            parentElement.setAttribute(\"ka.stop\", \"true\");\n            if (!this.scope.isInitialized()) {\n                this.init({});\n            }\n            this.tpl = this.tplPrototype.cloneNode(true);\n            this.scope.$tpl = new KaTemplate(this.tpl);\n            parentElement.append(this.tpl);\n            yield ka_sleep(1);\n            this.scope.render();\n        });\n    }\n    fragmentDisconnectedCallback() {\n        this.scope.$tpl.dispose();\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _KaCustomModal_main, _KaCustomModal_configDefaults, _KaCustomModal_promise;\nimport { createScopeObject } from \"../types\";\nimport { isset } from \"../functions\";\nimport { ka_templatify } from \"../tpl/templatify\";\nimport { ka_html } from \"../ce/html\";\nimport { ka_create_element } from \"../core/create-element\";\nimport { KaTemplate } from \"../tpl/template\";\nexport class KaCustomModal {\n    adjustWidth(modalConfig) {\n        let w = window.innerWidth;\n        if (w > modalConfig.maxWidth)\n            w = modalConfig.maxWidth;\n        __classPrivateFieldGet(this, _KaCustomModal_main, \"f\").style.width = w + \"px\";\n    }\n    constructor(tagName = \"ka-modal\", shadowRootInit = null, modalConfig = {}) {\n        this.scope = createScopeObject();\n        this.__html = \"<div>No Template defined</div>\";\n        _KaCustomModal_main.set(this, void 0);\n        _KaCustomModal_configDefaults.set(this, {\n            parentElement: document.body,\n            zIndex: 9999,\n            styleBase: \"position:fixed; top:0; bottom:0; left:0; right:0;\",\n            styleBackdrop: \"background-color: #999;opacity:0.5;\",\n            maxWidth: 800,\n        });\n        _KaCustomModal_promise.set(this, {\n            promise: null,\n            reject: null,\n            resolve: null,\n        });\n        let config = __classPrivateFieldGet(this, _KaCustomModal_configDefaults, \"f\");\n        config = Object.assign(Object.assign({}, config), modalConfig);\n        this.element = ka_create_element(tagName, { hidden: \"hidden\" }, null, config.parentElement);\n        this.backdrop = ka_create_element(\"div\", { style: `${config.styleBase};${config.styleBackdrop};z-index:${config.zIndex};` }, null, this.element);\n        let master = ka_create_element(\"div\", { style: `position:fixed;left:0;right:0;top:0;bottom:0;display:flex;justify-content:center;z-index:${config.zIndex + 1};` }, null, this.element);\n        __classPrivateFieldSet(this, _KaCustomModal_main, ka_create_element(\"div\", { style: `;max-height:100%;max-width:100%;` }, null, master), \"f\");\n        this.adjustWidth(config);\n        __classPrivateFieldGet(this, _KaCustomModal_promise, \"f\").promise = new Promise((resolve, reject) => { __classPrivateFieldGet(this, _KaCustomModal_promise, \"f\").resolve = resolve; __classPrivateFieldGet(this, _KaCustomModal_promise, \"f\").reject = reject; });\n    }\n    init(scope) {\n        // Check template set by customElement annotation\n        if (isset(this.constructor[\"html\"]))\n            this.__html = this.constructor[\"html\"];\n        if (!isset(this.tplPrototype))\n            this.tplPrototype = ka_templatify(ka_html(this.__html));\n        this.scope.init(scope);\n        return this.scope;\n    }\n    setParentScope(scope) {\n        this.scope.$parent = scope;\n    }\n    setScope(scope) {\n        this.scope.importFrom(scope);\n    }\n    resolve(value) {\n        this.element.remove();\n        __classPrivateFieldGet(this, _KaCustomModal_promise, \"f\").resolve(value);\n    }\n    show(...params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.scope.isInitialized()) {\n                this.init({});\n            }\n            this.tpl = this.tplPrototype.cloneNode(true);\n            this.scope.$tpl = new KaTemplate(this.tpl);\n            __classPrivateFieldGet(this, _KaCustomModal_main, \"f\").append(this.tpl);\n            this.element.removeAttribute(\"hidden\");\n            this.scope.render();\n            return __classPrivateFieldGet(this, _KaCustomModal_promise, \"f\").promise;\n        });\n    }\n    fragmentDisconnectedCallback() {\n        this.scope.$tpl.dispose();\n    }\n}\n_KaCustomModal_main = new WeakMap(), _KaCustomModal_configDefaults = new WeakMap(), _KaCustomModal_promise = new WeakMap();\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createScopeObject } from \"../types\";\nimport { isset } from \"../functions\";\nimport { ka_templatify } from \"../tpl/templatify\";\nimport { ka_html } from \"../ce/html\";\nimport { KaTemplate } from \"../tpl/template\";\nexport class KaCustomWrapper {\n    constructor() {\n        this.scope = createScopeObject();\n        this.html = null;\n    }\n    init(scope) {\n        // Check template set by customElement annotation\n        if (isset(this.constructor[\"html\"]) && this.html === null)\n            this.html = this.constructor[\"html\"];\n        if (!isset(this.tplPrototype))\n            this.tplPrototype = ka_templatify(ka_html(this.html));\n        this.scope.init(scope);\n        return this.scope;\n    }\n    wrapTemplate(tpl) {\n        this.scope.$content = tpl;\n        return this.tpl;\n    }\n    fragmentConnectedCallback() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.scope.isInitialized()) {\n                this.init({});\n            }\n            this.returnedTpl = this.tplPrototype;\n            this.tpl = this.tplPrototype.cloneNode(true);\n            this.scope.$tpl = new KaTemplate(this.tpl);\n        });\n    }\n    wrapFinish() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.scope.render();\n        });\n    }\n    fragmentDisconnectedCallback() {\n        this.scope.$tpl.dispose();\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { KaTemplate } from \"../tpl/template\";\nimport { ka_templatify } from \"../tpl/templatify\";\nimport { ka_html } from \"../ce/html\";\nimport { isset } from \"../functions\";\n/**\n * @deprecated\n */\nexport class KaHtmlElement extends HTMLElement {\n    constructor(shadowRootInit = null) {\n        super();\n        this.shadowRootInit = shadowRootInit;\n        this.addEventListener(\"load\", (e) => console.log(e));\n    }\n    connectedCallback() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let htmlTpl = null;\n            if (typeof this.html === \"function\") {\n                let fn = this.html;\n                htmlTpl = yield fn(this);\n            }\n            else {\n                htmlTpl = this.html;\n            }\n            if (typeof htmlTpl === \"string\")\n                htmlTpl = ka_html(htmlTpl);\n            let attachTo = this;\n            if (this.shadowRootInit !== null) {\n                attachTo = this.attachShadow(this.shadowRootInit);\n            }\n            if (isset(htmlTpl)) {\n                let tpl;\n                try {\n                    tpl = ka_templatify(htmlTpl);\n                }\n                catch (e) {\n                    console.error(\"Templatify failed on element\", this, \"for template\", htmlTpl);\n                    throw e;\n                }\n                this.$tpl = new KaTemplate(tpl);\n                attachTo.appendChild(tpl);\n            }\n            this.connected();\n        });\n    }\n    disconnectedCallback() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.$tpl.dispose();\n            this.disconnected();\n        });\n    }\n}\n","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _KaModal_main, _KaModal_configDefaults, _KaModal_promise;\nimport { KaTemplate } from \"../tpl/template\";\nimport { ka_create_element } from \"../core/create-element\";\nimport { ka_html } from \"../ce/html\";\nimport { ka_templatify } from \"../tpl/templatify\";\nimport { createScopeObject } from \"../types\";\nexport class KaModal {\n    adjustWidth(modalConfig) {\n        let w = window.innerWidth;\n        if (w > modalConfig.maxWidth)\n            w = modalConfig.maxWidth;\n        __classPrivateFieldGet(this, _KaModal_main, \"f\").style.width = w + \"px\";\n    }\n    constructor(tagName = \"ka-modal\", shadowRootInit = null, modalConfig = {}) {\n        this.scope = createScopeObject();\n        _KaModal_main.set(this, void 0);\n        this.$tpl = null;\n        _KaModal_configDefaults.set(this, {\n            parentElement: document.body,\n            zIndex: 9999,\n            styleBase: \"position:fixed; top:0; bottom:0; left:0; right:0;\",\n            styleBackdrop: \"background-color: #999;opacity:0.5;\",\n            maxWidth: 800,\n        });\n        _KaModal_promise.set(this, {\n            promise: null,\n            reject: null,\n            resolve: null,\n        });\n        let config = __classPrivateFieldGet(this, _KaModal_configDefaults, \"f\");\n        config = Object.assign(Object.assign({}, config), modalConfig);\n        this.element = ka_create_element(tagName, { hidden: \"hidden\" }, null, config.parentElement);\n        this.backdrop = ka_create_element(\"div\", { style: `${config.styleBase};${config.styleBackdrop};z-index:${config.zIndex};` }, null, this.element);\n        let master = ka_create_element(\"div\", { style: `position:fixed;left:0;right:0;top:0;bottom:0;display:flex;justify-content:center;z-index:${config.zIndex + 1};` }, null, this.element);\n        __classPrivateFieldSet(this, _KaModal_main, ka_create_element(\"div\", { style: `;max-height:100%;max-width:100%;` }, null, master), \"f\");\n        this.adjustWidth(config);\n        __classPrivateFieldGet(this, _KaModal_promise, \"f\").promise = new Promise((resolve, reject) => { __classPrivateFieldGet(this, _KaModal_promise, \"f\").resolve = resolve; __classPrivateFieldGet(this, _KaModal_promise, \"f\").reject = reject; });\n    }\n    render(scope = null) {\n        if (this.$tpl === null) {\n            let html = this.html;\n            if (typeof html === \"string\") {\n                html = ka_html(html);\n            }\n            if (!(html instanceof HTMLTemplateElement)) {\n                console.error(\"html is not HtmlTemplateElement\", html, \"on\", this);\n                throw \"html is not HtmlTemplateElement\";\n            }\n            console.log(\"html\", html);\n            let elem;\n            try {\n                elem = ka_templatify(html);\n            }\n            catch (e) {\n                console.log(\"error templatify for element\", this, \":\", e);\n                throw e;\n            }\n            __classPrivateFieldGet(this, _KaModal_main, \"f\").appendChild(elem);\n            this.$tpl = new KaTemplate(elem);\n        }\n        this.$tpl.render(scope);\n    }\n    resolve(value) {\n        this.element.remove();\n        __classPrivateFieldGet(this, _KaModal_promise, \"f\").resolve(value);\n    }\n    show(...params) {\n        this.element.removeAttribute(\"hidden\");\n        return __classPrivateFieldGet(this, _KaModal_promise, \"f\").promise;\n    }\n}\n_KaModal_main = new WeakMap(), _KaModal_configDefaults = new WeakMap(), _KaModal_promise = new WeakMap();\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { customElement, isset, random_string } from \"../functions\";\nimport { KaCustomFragment } from \"./KaCustomFragment\";\nlet KaUse = class KaUse extends HTMLElement {\n    get component() {\n        return this.myComponent;\n    }\n    set component(val) {\n        this.myComponent = val;\n        this.innerHTML = \"\";\n        this.append(val);\n    }\n    /**\n     * called from ka.use=\"\" by apply()\n     *\n     * @param val\n     */\n    use(val, parentScope) {\n        if (isset(val[\"setParentScope\"]))\n            val[\"setParentScope\"](parentScope);\n        this.myComponent = val;\n        this.innerHTML = \"\";\n        // If not specified scope is the parent scope.\n        if (!this.hasAttribute(\"ka.scope\"))\n            val[\"setScope\"](parentScope);\n        if (val instanceof KaCustomFragment) {\n            val.fragmentConnectedCallback(this);\n            return;\n        }\n        this.append(val);\n    }\n    /**\n     * set dedicated scope using ka.scope\n     *\n     * @param scope\n     */\n    setScope(scope) {\n        if (this.myComponent instanceof KaCustomFragment) {\n            this.myComponent.setScope(scope);\n        }\n    }\n    disconnectedCallback() {\n    }\n    connectedCallback() {\n        this.style.display = \"contents\";\n        this.setAttribute(\"ka.stop\", \"true\");\n        if (this.myComponent instanceof KaCustomFragment) {\n            this.myComponent.fragmentConnectedCallback(this);\n        }\n    }\n};\nKaUse = __decorate([\n    customElement(\"ka-use-\" + random_string().toLowerCase())\n], KaUse);\nexport { KaUse };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ka_sleep } from \"./core/sleep\";\n/**\n * Check if parameter is undefined or null\n *\n * @param input\n */\nexport function isset(input) {\n    return (typeof input !== \"undefined\" && input !== null);\n}\nexport function isUndefined(input) {\n    return (typeof input === \"undefined\");\n}\n/**\n * Defines a customElement\n *\n * Usage as class decorator @customElement(\"some-tag\")\n *\n * @param tagName\n */\nexport function customElement(tagName = null, template = null) {\n    return function (classOrDescriptor) {\n        if (template !== null) {\n            classOrDescriptor[\"html\"] = template;\n        }\n        if (window[\"_kasi_defined_custom_elements\"] === undefined) {\n            window[\"_kasi_defined_custom_elements\"] = [];\n        }\n        if (tagName === null) {\n            if (window[\"_kasi_anon_element_id\"] === undefined) {\n                window[\"_kasi_anon_element_id\"] = 0;\n            }\n            tagName = \"kasimirjs-anon-element-\" + window[\"_kasi_anon_element_id\"]++;\n        }\n        //console.debug(\"registering custom element\", classOrDescriptor, tagName);\n        if (!window[\"_kasi_defined_custom_elements\"].includes(tagName)) {\n            customElements.define(tagName, classOrDescriptor);\n            window[\"_kasi_defined_custom_elements\"].push(tagName);\n        }\n        return classOrDescriptor;\n    };\n}\nexport function ka_await_element(selector, parent = document, maxWait = 2000) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let elem = parent.querySelector(selector);\n        let rounds = 1;\n        while (elem === null && maxWait > 0) {\n            let delay = 20 * rounds++;\n            yield ka_sleep(delay);\n            elem = parent.querySelector(selector);\n            maxWait -= delay;\n        }\n        return elem;\n    });\n}\nexport function template(template) {\n    return function (classOrDescriptor) {\n        classOrDescriptor[\"html\"] = template;\n        return classOrDescriptor;\n    };\n}\nexport function random_string(len = 12) {\n    let result = '';\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n    for (let i = 0; i < len; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n","export * from \"./functions\";\nexport * from \"./types\";\nexport * from \"./core/sleep\";\nexport * from \"./core/debounce\";\nexport * from \"./core/create-element\";\nexport * from \"./core/ka-set-options\";\nexport { ka_dom_ready } from \"./core/dom-ready\";\nexport * from \"./element/KaHtmlElement\";\nexport * from \"./element/KaCustomElement\";\nexport * from \"./element/KaCustomFragment\";\nexport * from \"./element/KaCustomWrapper\";\nexport * from \"./element/KaCustomModal\";\nexport * from \"./tpl/template\";\nexport * from \"./element/KaModal\";\nexport * from \"./core/query-select\";\nexport * from \"./core/eval\";\nexport * from \"./ce/html\";\nexport * from \"./tpl/templatify\";\nexport * from \"./core/debouncer\";\nexport * from \"./core/storage\";\n","import { ka_eval } from \"../core/eval.js\";\nimport { ka_elwalk } from \"../core/elwalk.js\";\nimport { ka_apply } from \"../core/apply.js\";\nimport { KaCustomElement } from \"../ce/custom-element.js\";\nexport class KaTemplate {\n    constructor(template) {\n        this.template = template;\n        if (typeof this.template.__kachilds === \"undefined\")\n            this.template.__kachilds = [];\n        if (typeof this.template.__kasibling === \"undefined\")\n            this.template.__kasibling = this.template.nextElementSibling;\n        this.__renderCount = 0;\n        this.$scope = {};\n    }\n    _error(msg) {\n        console.error(`[ka-template] ${msg} on element`, this.template);\n        throw `[ka-template] ${msg} on element` + this.template;\n    }\n    _appendTemplate() {\n        let elements = this.template.content;\n        let elList = [];\n        for (let curE of elements.children) {\n            curE = curE.cloneNode(true);\n            curE._ka_maintained_by = this.template.getAttribute(\"_kaidx\");\n            elList.push(curE);\n            this.template.parentNode.insertBefore(curE, this.template.__kasibling);\n        }\n        this.template.__kachilds.push(elList);\n    }\n    _removeLastChild() {\n        if (this.template.__kachilds.length === 0)\n            return;\n        let childs = this.template.__kachilds[this.template.__kachilds.length - 1];\n        for (let curE of childs) {\n            this.template.parentElement.removeChild(curE);\n        }\n        this.template.__kachilds.length = this.template.__kachilds.length - 1;\n    }\n    _renderFor($scope, stmt) {\n        //console.log(\"kachilds\", this.template.__kachilds);\n        let matches = stmt.match(/^(let)?\\s*(?<target>.+)\\s+(?<type>of|in|repeat)\\s+(?<select>.+)$/);\n        if (matches === null) {\n            this._error(`Can't parse ka.for='${stmt}'`);\n        }\n        let selectVal = ka_eval(matches.groups.select, $scope, this.template);\n        if (matches.groups.type === \"repeat\") {\n            if (typeof selectVal !== \"number\")\n                this._error(`Error ka.for='${stmt}': Selected val must be number in repeat loop`);\n            selectVal = new Array(selectVal).fill(null);\n        }\n        let eIndex = 0;\n        for (let index in selectVal) {\n            let curScope = Object.assign({ $scope: $scope }, $scope);\n            curScope[matches.groups.target] = index;\n            if (matches.groups.type === \"of\")\n                curScope[matches.groups.target] = selectVal[index];\n            if (this.template.__kachilds.length < eIndex + 1) {\n                //console.log(\"append\", eIndex, this.template.__kachilds.length);\n                this._appendTemplate();\n            }\n            this._maintain(curScope, this.template.__kachilds[eIndex], eIndex);\n            eIndex++;\n        }\n        for (let remIdx = eIndex; remIdx < this.template.__kachilds.length;) {\n            this._removeLastChild();\n        }\n    }\n    _maintain($scope, childs, forIndex = 0) {\n        for (let child of childs) {\n            child._ka_for_index = forIndex;\n            ka_elwalk(child, (el) => {\n                //console.log(\"walk\", el);\n                if (el instanceof HTMLTemplateElement) {\n                    //console.log(\"maintain\", el);\n                    let r = new this.constructor(el);\n                    r.render($scope);\n                    return false;\n                }\n                if (typeof el._ka_maintained_by !== \"undefined\" && el._ka_maintained_by !== this.template.getAttribute(\"_kaidx\")) {\n                    return false;\n                }\n                ka_apply(el, $scope);\n                if ((el instanceof HTMLElement && el.hasAttribute(\"ka.stop\")) || el[\"__ka_stop_render\"]) {\n                    return false; // Skip Element rendering\n                }\n            }, true, true);\n        }\n    }\n    _renderIf($scope, stmt) {\n        let selectVal = ka_eval(stmt, $scope, this.template);\n        if (selectVal === true) {\n            if (this.template.__kachilds.length === 0)\n                this._appendTemplate();\n            this._maintain($scope, this.template.__kachilds[0]);\n        }\n        else {\n            this._removeLastChild();\n        }\n    }\n    /**\n     * Remove all rendered element\n     */\n    dispose() {\n        for (; this.template.__kachilds.length > 0;)\n            this._removeLastChild();\n    }\n    setScope($scope) {\n        this.$scope = $scope;\n    }\n    /**\n     * Render / Update the Template\n     *\n     * Once the scope in parameter 1 was set, it will render\n     * without any parameters. Scope is available via property $scope\n     *\n     * @param $scope\n     */\n    render($scope = null) {\n        if ($scope === null)\n            $scope = this.$scope;\n        this.$scope = $scope;\n        this.__renderCount++;\n        if (this.template.hasAttribute(\"ka.for\")) {\n            this._renderFor($scope, this.template.getAttribute(\"ka.for\"));\n        }\n        else if (this.template.hasAttribute(\"ka.if\")) {\n            this._renderIf($scope, this.template.getAttribute(\"ka.if\"));\n        }\n        else {\n            if (typeof this.template._ka_active === \"undefined\") {\n                this._appendTemplate();\n                this.template._ka_active = true;\n            }\n            this._maintain($scope, this.template.__kachilds);\n        }\n    }\n    /**\n     * Return true if this template was renderd the first time\n     *\n     * @returns {boolean}\n     */\n    isFirstRender() {\n        return this.__renderCount === 1;\n    }\n}\n;\n","import { ka_query_selector } from \"../core/query-select\";\nimport { ka_elwalk } from \"../core/elwalk.js\";\nfunction quoteattr(s, preserveCR) {\n    preserveCR = preserveCR ? '&#13;' : '\\n';\n    return ('' + s) /* Forces the conversion to string. */\n        .replace(/&/g, '&amp;') /* This MUST be the 1st replacement. */\n        .replace(/'/g, '&apos;') /* The 4 other predefined entities, required. */\n        .replace(/\"/g, '&quot;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        /*\n        You may add other replacements here for HTML only\n        (but it's not necessary).\n        Or for XML, only if the named entities are defined in its DTD.\n        */\n        .replace(/\\r\\n/g, preserveCR) /* Must be before the next replacement. */\n        .replace(/[\\r\\n]/g, preserveCR);\n    ;\n}\nwindow._ka_el_idx = 0;\n/**\n * Generate a renderable Template from <template> Element\n *\n * @param {HTMLElement|string} elem\n * @return {HTMLTemplateElement}\n */\nexport function ka_templatify(elem, returnMode = true) {\n    if (typeof elem === \"string\")\n        elem = ka_query_selector(elem);\n    if (!(elem instanceof Node)) {\n        console.error(\"[ka-templatify] Parameter 1 is not a html element: \", elem);\n        throw `[ka-templify] Parameter 1 is not a html element: ${elem}`;\n    }\n    const elIdxName = \"_ka_el_idx\";\n    if (window[elIdxName] === null)\n        window[elIdxName] = 5;\n    window[elIdxName]++;\n    if (returnMode) {\n        let returnTpl = document.createElement(\"template\");\n        returnTpl.setAttribute(\"_kaidx\", (window[elIdxName]).toString());\n        /* @var {HTMLTemplateElement} returnTpl */\n        returnTpl.innerHTML = elem.innerHTML\n            .replace(/\\[\\[(.*?)\\]\\]/g, (matches, m1) => `<span ka.textContent=\"${quoteattr(m1)}\"></span>`);\n        ka_templatify(returnTpl.content, false);\n        return returnTpl;\n    }\n    if (elem instanceof HTMLTemplateElement)\n        elem = elem.content;\n    let wrapElem = (el, attName, attVal) => {\n        let tpl = document.createElement(\"template\");\n        tpl.setAttribute(\"_kaidx\", (window[elIdxName]).toString());\n        let clonedEl = el.cloneNode(true);\n        clonedEl.removeAttribute(attName);\n        tpl.content.append(clonedEl);\n        tpl.setAttribute(attName, attVal);\n        el.replaceWith(tpl);\n        return tpl;\n    };\n    ka_elwalk(elem, (el) => {\n        //console.log(el);\n        if (!(el instanceof HTMLElement))\n            return;\n        let tpl = null;\n        for (let attrName of el.getAttributeNames()) {\n            if (attrName === \"ka.for\") {\n                tpl = wrapElem(el, \"ka.for\", el.getAttribute(\"ka.for\"));\n                ka_templatify(tpl, false);\n                break;\n            }\n            if (attrName === \"ka.if\") {\n                tpl = wrapElem(el, \"ka.if\", el.getAttribute(\"ka.if\"));\n                ka_templatify(tpl, false);\n                break;\n            }\n        }\n    }, true, false);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isset } from \"./functions\";\nimport { Debouncer } from \"./core/debouncer\";\nclass KaDefaultScope {\n    constructor() {\n        this.__isInitialized = false;\n    }\n    isInitialized() {\n        return this.__isInitialized;\n    }\n    render() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.$tpl.render(this);\n        });\n    }\n    raw() {\n        return this.$__scope_orig;\n    }\n    importFrom(scope) {\n        for (let key of Object.keys(scope)) {\n            if (key.startsWith(\"$\") || key.startsWith(\"__\"))\n                continue;\n            this[\"$__scope_orig\"][key] = scope[key];\n        }\n    }\n    dump() {\n        return Object.assign({}, this);\n    }\n    init(scopeDef) {\n        if (this.isInitialized())\n            throw \"Scope is already initalized\";\n        this.__isInitialized = true;\n        for (let key of Object.keys(scopeDef)) {\n            this[key] = scopeDef[key];\n        }\n    }\n}\nexport function createScopeObject(init = null) {\n    let scopeDef = new KaDefaultScope();\n    scopeDef[\"$__scope_orig\"] = scopeDef;\n    let proxy = new Proxy(scopeDef, {\n        get(target, prop, receiver) {\n            if (prop.startsWith(\"$\"))\n                return target[prop];\n            return target[prop];\n        },\n        set(target, p, value, receiver) {\n            if (target[p] === value)\n                return true; // Nothing changed\n            target[p] = value;\n            let debouncer = new Debouncer(50, 50);\n            if (p.startsWith(\"$\") || p.startsWith(\"__\"))\n                return true;\n            if (isset(scopeDef.$tpl))\n                scopeDef.$tpl.render();\n            (() => __awaiter(this, void 0, void 0, function* () {\n                yield debouncer.debounce();\n            }))();\n            return true;\n        }\n    });\n    if (init !== null)\n        scopeDef.init(init);\n    return proxy;\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { KaCustomFragment, template } from \"@kasimirjs/embed\";\n// language=html\nconst html = `\n <div>\n    <ul class=\"nav nav-tabs\">\n      <li class=\"nav-item\" ka.for=\"let tabName in tabs\">\n        <a class=\"nav-link\" ka.classlist.fw-bold=\"selectedTabName === tabName\" ka.classlist.active=\"selectedTabName === tabName\" ka.on.click=\"$scope.selectedTabName = tabName\" aria-current=\"page\" href=\"javascript:void(0)\">[[ tabName ]]</a>\n      </li>\n    </ul>\n     <div class=\"p-3 border\">\n         <div ka.for=\"let curTabName in tabs\">\n             <div ka.if=\"curTabName === selectedTabName\" >\n                 <div ka.use=\"tabs[curTabName]\" ka.scope=\"targetScope\"></div>\n             </div>\n         </div>\n     </div>\n    \n</div>\n`;\nlet KitTabPane = class KitTabPane extends KaCustomFragment {\n    constructor(tabs) {\n        super();\n        this.tabs = tabs;\n        let scope = this.init({\n            targetScope: null,\n            tabs,\n            selectedTabName: Object.keys(tabs)[0]\n        });\n    }\n    setScope(scope) {\n        // Override default behaviou and pass scope to next\n        this.scope[\"targetScope\"] = scope;\n    }\n};\nKitTabPane = __decorate([\n    template(html),\n    __metadata(\"design:paramtypes\", [Object])\n], KitTabPane);\nexport { KitTabPane };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { KaCustomFragment, template } from \"@kasimirjs/embed\";\nimport { random_string } from \"../functions\";\nlet html = `\n<div class=\"row g-3 align-items-center\">\n  <div class=\"col-auto\">\n    <label ka.attr.for=\"config.id\" class=\"col-form-label\">[[ config.title ]]</label>\n  </div>\n  <div class=\"col-auto\">\n    <input ka.if=\"config.type !== 'select' && config.type !== 'textarea'\" ka.attr.readonly=\"config.readonly === true\" ka.attr.type=\"config.type\" ka.id=\"config.id\" ka.bind=\"%%bind%%\" class=\"form-control\" aria-describedby=\"passwordHelpInline\">\n  </div>\n  <div class=\"col-auto\">\n    <span id=\"passwordHelpInline\" class=\"form-text\">\n      Must be 8-20 characters long.\n    </span>\n  </div>\n</div>\n\n`;\nconst KitFormInputDefaults = {\n    title: \"\",\n    type: \"text\",\n    id: null\n};\nlet KitFormInput = class KitFormInput extends KaCustomFragment {\n    /**\n     * Example:\n     *\n     * new KitFormInput(\"$scope.name\", {title: \"Name:\"});\n     *\n     * @param bindSelector\n     * @param config\n     */\n    constructor(bindSelector, config) {\n        super();\n        this.bindSelector = bindSelector;\n        config = Object.assign(Object.assign({}, KitFormInputDefaults), config);\n        if (config.id === null) {\n            config.id = random_string();\n        }\n        let scope = this.init({\n            config,\n            bindValue: bindSelector\n        });\n    }\n    init(scope) {\n        if (typeof this.constructor[\"html\"] !== \"undefined\")\n            this[\"html\"] = this.constructor['html'].replace(\"%%bind%%\", this.bindSelector);\n        return super.init(scope);\n    }\n};\nKitFormInput = __decorate([\n    template(html),\n    __metadata(\"design:paramtypes\", [String, Object])\n], KitFormInput);\nexport { KitFormInput };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { customElement, KaCustomElement } from \"@kasimirjs/embed\";\n// language=HTML\nconst tpl = `\n    <div class=\"mb-1 row\" ka.if=\"type === 'text'\">\n        <label ka.attr.for=\"id\" class=\"col-sm-2 col-form-label\">[[label]]</label>\n        <div class=\"col-sm-10\">\n          <input type=\"text\" ka.bind=\"$scope.value\" class=\"form-control-plaintext form-control-sm bg-white\" ka.attr.id=\"id\">\n        </div>\n    </div>\n    <div class=\"form-check form-switch mb-1\" ka.if=\"type === 'switch'\">\n      <input class=\"form-check-input\" type=\"checkbox\" ka.bind=\"$scope.value\" role=\"switch\" ka.attr.id=\"id\">\n      <label class=\"form-check-label\" ka.attr.for=\"id\">[[ label ]]</label>\n    </div>\n\n`;\nvar elementIndex = 1;\nlet QuickInput = class QuickInput extends KaCustomElement {\n    get value() {\n        return this.scope.value;\n    }\n    set value(value) {\n        this.scope.value = value;\n    }\n    connectedCallback() {\n        const _super = Object.create(null, {\n            connectedCallback: { get: () => super.connectedCallback }\n        });\n        var _a, _b, _c, _d, _e;\n        return __awaiter(this, void 0, void 0, function* () {\n            let scope = this.init({\n                id: (_a = this.dataset.id) !== null && _a !== void 0 ? _a : \"quick-form-element-\" + elementIndex++,\n                type: (_b = this.dataset.type) !== null && _b !== void 0 ? _b : \"text\",\n                name: (_c = this.dataset.name) !== null && _c !== void 0 ? _c : \"data-name unset\",\n                label: (_e = (_d = this.dataset.label) !== null && _d !== void 0 ? _d : this.dataset.name) !== null && _e !== void 0 ? _e : \"data-label unset\",\n                $on: {\n                    change: (e) => {\n                        //this.dispatchEvent(new Event(\"change\"));\n                    }\n                }\n            });\n            _super.connectedCallback.call(this);\n        });\n    }\n};\nQuickInput = __decorate([\n    customElement(\"quick-input\", tpl)\n], QuickInput);\n","export function random_string(length = 8) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n","export * from \"./functions\";\nexport * from \"./base/tab-pane\";\nexport * from \"./form/form-input\";\nexport * from \"./form/quick-input\";\nexport * from \"./sidebar/sidebar-wrapper\";\nexport * from \"./modals/flex-modal\";\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { KaCustomModal } from \"@kasimirjs/embed\";\nconst html = `\n<div class=\"modal d-block\" tabindex=\"-1\">\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">%%title%%</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" ka.on.click=\"$fn.close()\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                %%body%%\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" ka.on.click=\"$fn.close()\">Close</button>\n                %%buttons%%\n            </div>\n        </div>\n    </div>\n</div>`;\nexport class FlexModalConfig {\n    constructor() {\n        this.title = \"unnamed\";\n        this.size = \"xl\";\n    }\n}\nexport class FlexModal extends KaCustomModal {\n    constructor(title, body, buttons, initScope = {}) {\n        super();\n        this.initScope = initScope;\n        this.__html = html.replace(\"%%title%%\", title).replace(\"%%body%%\", body).replace(\"%%buttons%%\", buttons.join(\" \"));\n    }\n    show(scope = {}, parser = (scope) => { return scope; }) {\n        const _super = Object.create(null, {\n            show: { get: () => super.show }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let defaultScope = this.initScope;\n            let instance = this;\n            let myScope = this.init(Object.assign(Object.assign(Object.assign({}, defaultScope), scope), { $fn: {\n                    close() {\n                        return __awaiter(this, void 0, void 0, function* () {\n                            instance.resolve(null);\n                        });\n                    },\n                    resolve() {\n                        return __awaiter(this, void 0, void 0, function* () {\n                            instance.resolve(parser(myScope));\n                        });\n                    }\n                } }));\n            return _super.show.call(this);\n        });\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n// language=HTML\nimport { ka_session_storage, KaCustomWrapper, template } from \"@kasimirjs/embed\";\nconst tpl = `\n    <style>\n        .sidepanel {\n            position: fixed;\n            top: 0;\n            bottom: 0;\n            right: 0;\n            border: 0;\n            width: 250px;\n            z-index: 99999;\n            transform: translateX(100%);\n            transition: all 0.3s ease-in-out;\n\n\n            background: linear-gradient(0deg, rgb(37, 32, 32) 0%, rgba(0, 0, 0, 1) 100%);\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n            padding: 5px\n        }\n\n        .sidepanel .activator {\n            position: absolute;\n            top: 38vh;\n            height: 50px;\n            width: 50px;\n            left: -50px;\n            cursor: pointer;\n            background: linear-gradient(90deg, rgb(68, 63, 63) 0%, rgba(0, 0, 0, 1) 100%);\n            z-index: 99999;\n            color: #fff;\n            border-radius: 20% 0 0 20%;\n            box-shadow: 0 0 15px rgba(0, 0, 0, 0.7);\n            opacity: 0.8;\n            transition: opacity 0.3s ease-in-out;\n        }\n\n        .sidepanel .activator svg {\n            width: 100%;\n            height: 100%;\n            padding: 10px\n        }\n\n        .sidepanel.active .activator {\n            opacity: 0.8;\n            box-shadow: 0 0 30px rgba(0, 0, 0, 0.9);\n        }\n\n        .sidepanel .activator:hover {\n            opacity: 1;\n        }\n\n        .sidepanel.active {\n            transform: translateX(0);\n            box-shadow: 0 0 30px rgba(0, 0, 0, 0.9);\n        }\n\n        .sidepanel .content {\n            color: #fff;\n            height: 100%;\n            overflow: scroll;\n        }\n\n    </style>\n\n    <nav class=\"sidepanel\" ka.classlist.active=\"state.active\">\n        <div class=\"activator\" ka.on.click=\"$fn.toggle()\" ka.content=\"$scope.config.icon\">B</div>\n        <div class=\"content\">\n            <div ka.content=\"$content\"></div>\n        </div>\n    </nav>\n`;\nexport class SidebarWrapperConfig {\n    constructor() {\n        this.icon = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-gear\" viewBox=\"0 0 16 16\">\n  <path d=\"M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z\"/>\n  <path d=\"M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z\"/>\n</svg>`;\n    }\n}\nlet SidebarWrapper = class SidebarWrapper extends KaCustomWrapper {\n    constructor(config = null) {\n        super();\n        if (config === null)\n            config = new SidebarWrapperConfig();\n        let state = ka_session_storage({ active: false }, \"switcher-element\");\n        let scope = this.init({\n            state: state,\n            config: config,\n            $fn: {\n                toggle: () => {\n                    state.active = !state.active;\n                    scope.render();\n                }\n            },\n            $on: {\n                change: (e) => {\n                }\n            }\n        });\n    }\n};\nSidebarWrapper = __decorate([\n    template(tpl),\n    __metadata(\"design:paramtypes\", [SidebarWrapperConfig])\n], SidebarWrapper);\nexport { SidebarWrapper };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { customElement, KaCustomElement, template } from \"@kasimirjs/embed\";\nimport { JodaDescriptionManager } from \"@leuffen/jodastyle\";\n// language=HTML\nconst tpl2 = `\n<div>\n    <select ka.options=\"$scope.desc\" ka.bind=\"$scope.className\" style=\"width:100%\"></select>\n    <input ka.bind=\"$scope.text\">\n</div>\n`;\nlet ExampleSwitcherElement = class ExampleSwitcherElement extends KaCustomElement {\n    constructor() {\n        super();\n        console.log(JodaDescriptionManager.classes);\n        let scope = this.init({\n            desc: JodaDescriptionManager.classes,\n            text: \"test\",\n            className: \"test\",\n            $on: {\n                change: (e) => {\n                    window.history.pushState({}, \"\", \"?className=\" + scope.className);\n                }\n            }\n        });\n        let last = \"\";\n        setInterval(() => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            if (last === window.location.href) {\n                return;\n            }\n            last = window.location.href;\n            let url = new URL(window.location.href);\n            let className = url.searchParams.get(\"className\");\n            if (className === null) {\n                return;\n            }\n            scope.className = className;\n            let daba = document.getElementsByTagName(\"joda-content\")[0];\n            var MarkdownIt = require('markdown-it');\n            var markdownItAttrs = require('markdown-it-attrs');\n            var md = new MarkdownIt({\n                html: true // Erlaubt HTML-Input.\n            }, null);\n            md.use(markdownItAttrs);\n            let desc = JodaDescriptionManager.getDescription(className);\n            if (desc === undefined || desc === null) {\n                let newElement = document.createElement(\"div\");\n                newElement.innerHTML = \"No description found\";\n                daba.replaceWith(newElement);\n                return;\n            }\n            document.body.classList.add(...desc.config.bodyClasses);\n            let content = (_a = desc.example) !== null && _a !== void 0 ? _a : \"No example found\";\n            if (desc.config.parseMarkdown) {\n                content = content.replace(/\\n{:/gm, \"{:\");\n                content = md.render(content);\n                content = \"<joda-split>\" + content + \"</joda-split>\";\n            }\n            let newElement = document.createElement(\"joda-content\");\n            newElement.innerHTML = content;\n            daba.replaceWith(newElement);\n        }), 100);\n    }\n};\nExampleSwitcherElement = __decorate([\n    customElement(\"joda-example-switcher\"),\n    template(tpl2),\n    __metadata(\"design:paramtypes\", [])\n], ExampleSwitcherElement);\nexport { ExampleSwitcherElement };\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { customElement, ka_dom_ready, ka_sleep, KaCustomElement, template } from \"@kasimirjs/embed\";\nimport { JodaDescriptionManager, jodaSiteConfig } from \"@leuffen/jodastyle\";\nimport { SidebarWrapper } from \"@kasimirjs/kit-bootstrap\";\nimport { joda_dev_config } from \"../index\";\nconst config = {\n    icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-display-fill\" viewBox=\"0 0 16 16\">\n      <path d=\"M6 12c0 .667-.083 1.167-.25 1.5H5a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1h-.75c-.167-.333-.25-.833-.25-1.5h4c2 0 2-2 2-2V4c0-2-2-2-2-2H2C0 2 0 4 0 4v6c0 2 2 2 2 2h4z\"/>\n    </svg>`\n};\n// language=HTML\nconst tpl2 = `\n<div>\n    \n    <h3 class=\"\">JodaStyle Dev</h3>\n    <quick-input ka.bind=\"$scope.siteConfig.disable_split\" data-label=\"Disable Joda Split \" data-name=\"test\" data-type=\"switch\"></quick-input>\n    <quick-input ka.bind=\"$scope.siteConfig.disable_templates\" data-label=\"Disable Joda Templates \" data-name=\"test\" data-type=\"switch\"></quick-input>\n    <quick-input ka.bind=\"$scope.siteConfig.disable_responsive\" data-label=\"Disable Joda Responsive\" data-name=\"test\" data-type=\"switch\"></quick-input>\n    <quick-input ka.bind=\"$scope.siteConfig.debug_visualize\" data-label=\"Joda Debug Visualize\" data-name=\"test\" data-type=\"switch\"></quick-input>\n    <quick-input ka.if=\"siteConfig.debug_visualize\" ka.bind=\"$scope.siteConfig.debug_visualize_attribute\" data-label=\"Add Attributes to Visualize\" data-name=\"test\" data-type=\"switch\"></quick-input>\n    <hr>\n    <joda-example-switcher></joda-example-switcher>\n</div>\n`;\nlet JodaDevSidebarElement = class JodaDevSidebarElement extends KaCustomElement {\n    constructor() {\n        super();\n        this.shadowRootConfig.mode = \"closed\";\n        this.shadowRootConfig.stylesheets = [\n            joda_dev_config.stylesheet,\n        ];\n        this.wrap(new SidebarWrapper(config));\n        let scope = this.init({\n            desc: JodaDescriptionManager.classes,\n            siteConfig: jodaSiteConfig,\n            $on: {\n                change: (e) => __awaiter(this, void 0, void 0, function* () {\n                    yield ka_sleep(100);\n                    window.location.reload();\n                })\n            }\n        });\n        let last = \"\";\n    }\n};\nJodaDevSidebarElement = __decorate([\n    customElement(\"joda-dev-sidebar\"),\n    template(tpl2),\n    __metadata(\"design:paramtypes\", [])\n], JodaDevSidebarElement);\n(() => __awaiter(void 0, void 0, void 0, function* () {\n    yield ka_dom_ready();\n    document.body.append(new JodaDevSidebarElement());\n}))();\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { JodaDescriptionManager } from \"@leuffen/jodastyle\";\nimport { customElement, ka_sleep, KaCustomElement, template } from \"@kasimirjs/embed\";\nimport { joda_dev_config } from \"../index\";\n// language=HTML\nconst tpl = `\n    <div class=\"joda-showcase-element\" ka.classlist=\"classes\">\n        <div class=\"row \" >\n            <div class=\"col col-auto\" ka.for=\"let i of desc \">\n                <div class=\"card\">\n                    <div class=\"card-body p-1 m-1\">\n                        <div class=\"preview\">\n                            <iframe ka.prop.src=\"'element.html?className=' + i.className\"></iframe>\n                            <div class=\"overlay\"><a ka.prop.href=\"'element.html?className=' + i.className\">Show</a></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n`;\nlet JodaShowcaseElement = class JodaShowcaseElement extends KaCustomElement {\n    constructor() {\n        super();\n        this.shadowRootConfig.mode = \"closed\";\n        this.shadowRootConfig.stylesheets = [\n            joda_dev_config.stylesheet\n        ];\n        let scope = this.init({\n            desc: JodaDescriptionManager.data,\n            classes: [],\n            $on: {}\n        });\n    }\n    connectedCallback() {\n        const _super = Object.create(null, {\n            connectedCallback: { get: () => super.connectedCallback }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield ka_sleep(1);\n            this.scope.classes = this.getAttribute(\"class\");\n            this.scope.desc = JodaDescriptionManager.data.filter(e => e.category === this.getAttribute(\"data-category\"));\n            console.log(\"connectedCallback\", this.scope.desc);\n            _super.connectedCallback.call(this);\n        });\n    }\n    disconnectedCallback() {\n        const _super = Object.create(null, {\n            disconnectedCallback: { get: () => super.disconnectedCallback }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(\"disconnect\", this);\n            this.scope.desc = [];\n            _super.disconnectedCallback.call(this);\n        });\n    }\n};\nJodaShowcaseElement = __decorate([\n    template(tpl),\n    customElement(\"joda-showcase-element\"),\n    __metadata(\"design:paramtypes\", [])\n], JodaShowcaseElement);\n","export let joda_dev_config = {\n    stylesheet: \"/assets/dist/dev.css\" // Define the stylsheet to use for shadowRoot\n};\n","export * from \"./config\";\nimport \"./components/JodaShowcaseElement\";\nimport \"./components/JodaDevSidebarElement\";\nimport \"./components/ExampleSwitcherElement\";\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _JodaContentElement_origContentTemplate, _JodaContentElement_outputDiv;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JodaContentElement = void 0;\nconst embed_1 = require(\"@kasimirjs/embed\");\nconst jodastyle_1 = require(\"../processor/jodastyle\");\nconst jodaresponsive_1 = require(\"../processor/jodaresponsive\");\nconst logger_1 = require(\"../helper/logger\");\nconst jodavisualize_1 = require(\"../processor/jodavisualize\");\nconst JodaSiteConfig_1 = require(\"../helper/JodaSiteConfig\");\nconst functions_1 = require(\"../helper/functions\");\nfunction getCSSRule(ruleName) {\n    ruleName = ruleName.toLowerCase();\n    var result = null;\n    var find = Array.prototype.find;\n    find.call(document.styleSheets, styleSheet => {\n        result = find.call(styleSheet.cssRules, cssRule => {\n            return cssRule instanceof CSSStyleRule\n                && cssRule.selectorText.toLowerCase() == ruleName;\n        });\n        return result != null;\n    });\n    return result;\n}\nconsole.time(\"jodaTime\");\nlet JodaContentElement = class JodaContentElement extends HTMLElement {\n    constructor() {\n        super(...arguments);\n        _JodaContentElement_origContentTemplate.set(this, void 0);\n        _JodaContentElement_outputDiv.set(this, void 0);\n    }\n    awaitStyles() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let index = 0;\n            while (true) {\n                index++;\n                let initValue = getComputedStyle(this).getPropertyValue(\"--joda-init\");\n                if (initValue.indexOf(\"true\") !== -1) {\n                    break;\n                }\n                if (index > 100) {\n                    index = 0;\n                    console.warn(\"Still waiting for --joda-init: true\", this, \"current value:\", initValue, \"on url\", window.location.href);\n                }\n                yield (0, embed_1.ka_sleep)(50 + index);\n            }\n        });\n    }\n    setLoaded() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield (0, embed_1.ka_sleep)(10);\n            this.classList.add(\"loaded\");\n            yield (0, embed_1.ka_sleep)(100);\n            document.body.classList.add(\"loaded\");\n            document.querySelector(\"html\").classList.remove(\"loader\");\n        });\n    }\n    connectedCallback() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let logger = new logger_1.Logger(\"joda-content\");\n            yield (0, embed_1.ka_sleep)(1);\n            yield this.awaitStyles();\n            __classPrivateFieldSet(this, _JodaContentElement_origContentTemplate, (0, embed_1.ka_create_element)(\"template\"), \"f\");\n            __classPrivateFieldSet(this, _JodaContentElement_outputDiv, (0, embed_1.ka_create_element)(\"div\"), \"f\");\n            //this.#origContentTemplate.innerHTML = this.innerHTML;\n            //this.innerHTML = \"\";\n            //this.appendChild(this.#origContentTemplate);\n            //this.appendChild(this.#outputDiv);\n            if (JodaSiteConfig_1.jodaSiteConfig.disable_templates) {\n                this.setLoaded();\n                // For documentation: Add Class and Tag-Names\n                if (JodaSiteConfig_1.jodaSiteConfig.debug_visualize && JodaSiteConfig_1.jodaSiteConfig.debug_visualize_attribute) {\n                    (new jodavisualize_1.Jodavisualize()).process(this);\n                }\n                return;\n            }\n            // Process the content\n            let jodaStyle = new jodastyle_1.Jodastyle(logger);\n            yield jodaStyle.process(this);\n            let jodaresponsive = new jodaresponsive_1.Jodaresponsive(logger);\n            let currentBreakpoint = (0, jodaresponsive_1.getCurrentBreakpoint)();\n            jodaresponsive.process(this);\n            // For documentation: Add Class and Tag-Names\n            if (JodaSiteConfig_1.jodaSiteConfig.debug_visualize && JodaSiteConfig_1.jodaSiteConfig.debug_visualize_attribute) {\n                (new jodavisualize_1.Jodavisualize()).process(this);\n            }\n            this.setLoaded();\n            window.addEventListener(\"resize\", () => {\n                if (currentBreakpoint === (0, jodaresponsive_1.getCurrentBreakpoint)()) {\n                    return;\n                }\n                currentBreakpoint = (0, jodaresponsive_1.getCurrentBreakpoint)();\n                logger.log(\"Breakpoint changed to \" + currentBreakpoint);\n                jodaresponsive.process(this);\n            });\n            // Run all allTemplateConnectedCallbacks registered\n            for (let callback of functions_1.allTemplatesConnectedCallbacks) {\n                yield callback();\n            }\n        });\n    }\n    setContent(content) {\n        this.innerHTML = content;\n        this.connectedCallback();\n    }\n};\nexports.JodaContentElement = JodaContentElement;\n_JodaContentElement_origContentTemplate = new WeakMap();\n_JodaContentElement_outputDiv = new WeakMap();\nexports.JodaContentElement = JodaContentElement = __decorate([\n    (0, embed_1.customElement)(\"joda-content\")\n], JodaContentElement);\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst embed_1 = require(\"@kasimirjs/embed\");\nconst jodastyle_1 = require(\"../processor/jodastyle\");\nconst logger_1 = require(\"../helper/logger\");\nlet JodaFetch = class JodaFetch extends HTMLElement {\n    connectedCallback() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let select = this.getAttribute(\"data-select\");\n            let elem = document.querySelector(select);\n            if (elem === null) {\n                console.error(\"joda-fetch: Element not found\", select, \"in element\", this);\n                return;\n            }\n            let jodaStyle = new jodastyle_1.Jodastyle(new logger_1.Logger(\"joda-fetch\"));\n            this.innerHTML = elem.innerHTML;\n            yield jodaStyle.process(this);\n        });\n    }\n};\nJodaFetch = __decorate([\n    (0, embed_1.customElement)('joda-fetch')\n], JodaFetch);\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _JodaSplit_ready;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst embed_1 = require(\"@kasimirjs/embed\");\nconst jodasplit_1 = require(\"../processor/jodasplit\");\nconst logger_1 = require(\"../helper/logger\");\nconst jodashorts_1 = require(\"../processor/jodashorts\");\nconst JodaSiteConfig_1 = require(\"../helper/JodaSiteConfig\");\nlet JodaSplit = class JodaSplit extends HTMLElement {\n    constructor() {\n        super(...arguments);\n        _JodaSplit_ready.set(this, false);\n    }\n    get ready() {\n        return __classPrivateFieldGet(this, _JodaSplit_ready, \"f\");\n    }\n    connectedCallback() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let logger = new logger_1.Logger(\"joda-split\");\n            yield (0, embed_1.ka_sleep)(1);\n            if (JodaSiteConfig_1.jodaSiteConfig.debug_visualize) {\n                this.classList.add(\"joda-debug-visualize\");\n            }\n            if (JodaSiteConfig_1.jodaSiteConfig.disable_split) {\n                __classPrivateFieldSet(this, _JodaSplit_ready, true, \"f\");\n                return;\n            }\n            let jodaShorts = new jodashorts_1.Jodashorts(logger);\n            this.innerHTML = yield jodaShorts.process(this.innerHTML);\n            let jodaSplit = new jodasplit_1.Jodasplit(logger);\n            let fragment = document.createDocumentFragment();\n            fragment.append(yield jodaSplit.process(this));\n            this.innerHTML = \"\";\n            this.append(fragment);\n            __classPrivateFieldSet(this, _JodaSplit_ready, true, \"f\");\n        });\n    }\n};\n_JodaSplit_ready = new WeakMap();\nJodaSplit = __decorate([\n    (0, embed_1.customElement)('joda-split')\n], JodaSplit);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JodaDescriptionManager = exports.__JodaDescriptionManager = void 0;\nclass __JodaDescriptionManager {\n    addClass(category, className, description, example, modifiers, config = {}) {\n        let defaultConfig = {\n            bodyClasses: [],\n            parseMarkdown: true\n        };\n        config = Object.assign(Object.assign({}, defaultConfig), config);\n        if (window[\"jodastyle\"] === undefined) {\n            window[\"jodastyle\"] = {};\n        }\n        if (window[\"jodastyle\"][\"descriptions\"] === undefined) {\n            window[\"jodastyle\"][\"descriptions\"] = [];\n        }\n        window[\"jodastyle\"][\"descriptions\"].push({ category, className, description, example, modifiers, config });\n    }\n    get data() {\n        var _a;\n        if (window[\"jodastyle\"] === undefined) {\n            console.warn(\"[jodastyle description manager] No jodastyle descriptions found (Make sure you imported a theme) => window.jodastyle is undefined\");\n            return [];\n        }\n        return (_a = window[\"jodastyle\"][\"descriptions\"]) !== null && _a !== void 0 ? _a : [];\n    }\n    get classes() {\n        return this.data.map(e => e.className);\n    }\n    getDescription(className) {\n        return this.data.find(e => e.className === className);\n    }\n}\nexports.__JodaDescriptionManager = __JodaDescriptionManager;\nexports.JodaDescriptionManager = new __JodaDescriptionManager();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JodaElementException = void 0;\nclass JodaElementException {\n    constructor(message, element = null, triggerCommand = null) {\n        this.message = message;\n        this.element = element;\n        this.triggerCommand = triggerCommand;\n    }\n}\nexports.JodaElementException = JodaElementException;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JodaErrorElement = void 0;\nconst embed_1 = require(\"@kasimirjs/embed\");\nlet tpl = `\n<style>\n.joda-error {\n    display: block;\n    background-color: rgba(241,179,179,0.17);\n    margin: 1em;\n    padding: 1em;\n    color: red;\n    font-weight: bold;\n    border: 3px solid red;\n}\n</style>\n<div class=\"joda-error\">\n    [[ message ]]\n</div>\n`;\nlet JodaErrorElement = class JodaErrorElement extends embed_1.KaCustomElement {\n    constructor(message) {\n        super();\n        this.message = message;\n        let scope = this.init({\n            message: message\n        });\n    }\n    connectedCallback() {\n        const _super = Object.create(null, {\n            connectedCallback: { get: () => super.connectedCallback }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield _super.connectedCallback.call(this);\n            this.scope.message = this.message;\n        });\n    }\n};\nexports.JodaErrorElement = JodaErrorElement;\nexports.JodaErrorElement = JodaErrorElement = __decorate([\n    (0, embed_1.customElement)('joda-error'),\n    (0, embed_1.template)(tpl),\n    __metadata(\"design:paramtypes\", [Object])\n], JodaErrorElement);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jodaSiteConfig = void 0;\nconst embed_1 = require(\"@kasimirjs/embed\");\nclass JodaSiteConfig {\n    constructor() {\n        this.disable_split = false;\n        this.disable_templates = false;\n        this.disable_responsive = false;\n        this.debug_visualize = false;\n        this.debug_visualize_attribute = false; // Add Attribution to visualized elements\n    }\n}\nexports.jodaSiteConfig = (0, embed_1.ka_session_storage)(new JodaSiteConfig(), \"jodaSiteConfig\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QTemplate = exports.template_parse = void 0;\nconst embed_1 = require(\"@kasimirjs/embed\");\nconst embed_2 = require(\"@kasimirjs/embed\");\n/**\n * Searches for occurence of ${javascript expression} and replaces them with the result of the expression\n */\nfunction template_parse(input, scope, element) {\n    // Search for ${...} by preg and replace them with the result of the expression\n    return input.replace(/\\[\\[(.*?)]]/gmi, (match, p1) => {\n        let val = (0, embed_1.ka_eval)(p1, scope, element, {});\n        return val;\n    });\n}\nexports.template_parse = template_parse;\nclass QTemplate {\n    constructor(content) {\n        if (typeof content === \"string\") {\n            this.content = (0, embed_2.ka_create_element)(\"template\");\n            this.content.innerHTML = content;\n        }\n        else {\n            this.content = content;\n        }\n        if (this.content instanceof HTMLTemplateElement) {\n            if (this.content.content.children.length > 1) {\n                throw new Error(\"Template must have exactly one root element. Found: \" + this.content.innerHTML);\n            }\n            this.content = this.content.content.firstElementChild.cloneNode(true);\n        }\n        this.selected = null;\n    }\n    parse(scope) {\n        let tpl = (0, embed_2.ka_create_element)(\"template\", {}, [], null);\n        tpl.content.append(this.content);\n        //console.log(\"Parse\", this.content, this.content.toString());\n        tpl.innerHTML = template_parse(tpl.innerHTML, scope, tpl);\n        this.content = tpl.content.firstElementChild;\n        return this;\n    }\n    /**\n     * Returns the element with the given data-ref attribute\n     * @param data_ref\n     */\n    by(data_ref) {\n        let selector = `[data-ref=\"${data_ref}\"]`;\n        if (this.content.matches(selector)) {\n            return this.content;\n        }\n        return this.content.querySelector(selector);\n    }\n    select(data_ref) {\n        this.selected = this.by(data_ref);\n        if (this.selected === null) {\n            console.error(\"Element with data-ref '\" + data_ref + \"' not found.\", this.content);\n            throw \"Element with data-ref '\" + data_ref + \"' not found.\";\n        }\n        return this;\n    }\n    /**\n     * Pick elements by selector and append them to the selected element\n     *\n     * @param source\n     * @param selector\n     */\n    pick(source, selector, modifier = null) {\n        Array.from(source.querySelectorAll(selector)).forEach((e) => {\n            if (modifier !== null) {\n                e = modifier(e);\n            }\n            this.selected.append(e);\n        });\n        return this;\n    }\n    /**\n     * Select and return own wrapper\n     *\n     * @param data_ref\n     */\n    with(data_ref) {\n        let instance = new QTemplate(this.content);\n        instance.select(data_ref);\n        return instance;\n    }\n    append(element) {\n        if (element instanceof QTemplate) {\n            this.selected.append(element.content);\n            return this;\n        }\n        if (element instanceof NodeList) {\n            Array.from(element).forEach(e => this.selected.append(e));\n            return this;\n        }\n        if (Array.isArray(element) || element instanceof NodeList) {\n            element.forEach(e => this.selected.append(e));\n            return this;\n        }\n        this.selected.append(element);\n        return this;\n    }\n    clone() {\n        return new QTemplate(this.content.cloneNode(true));\n    }\n}\nexports.QTemplate = QTemplate;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runCallbacksForTemplate = exports.getTemplateFilledWithContent = exports.parseConfigString = exports.getCleanVariableValue = exports.splitChildrenBySelector = exports.jodaRenderer = exports.registerJodaRenderer = exports.wrapElement = exports.await_property = exports.allTemplatesConnectedCallbacks = void 0;\nconst embed_1 = require(\"@kasimirjs/embed\");\nconst JodaElementException_1 = require(\"./JodaElementException\");\nconst QTemplate_1 = require(\"./QTemplate\");\nconst joda_1 = require(\"../joda\");\nexports.allTemplatesConnectedCallbacks = [];\nfunction await_property(object, property, wait = 10) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof property === \"string\") {\n            property = property.split(\".\");\n        }\n        let value = undefined;\n        let index = 0;\n        while (value === undefined) {\n            index++;\n            let curObject = object;\n            for (let i = 0; i < property.length; i++) {\n                if (curObject === undefined) {\n                    break;\n                }\n                curObject = curObject[property[i]];\n            }\n            value = curObject;\n            if (value === undefined)\n                yield (0, embed_1.ka_sleep)(wait);\n            if (index > 1000) {\n                index = 0;\n                console.warn(\"Still waiting for property: \", property, \"in object\", object);\n            }\n        }\n        return value;\n    });\n}\nexports.await_property = await_property;\nfunction wrapElement(element, wrapper) {\n    var _a;\n    (_a = element.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(wrapper, element);\n    wrapper.appendChild(element);\n}\nexports.wrapElement = wrapElement;\nfunction registerJodaRenderer(name, renderer, config) {\n    if (window[\"jodastyle\"] === undefined) {\n        window[\"jodastyle\"] = {};\n    }\n    if (window[\"jodastyle\"][\"renderer\"] === undefined) {\n        window[\"jodastyle\"][\"renderer\"] = {};\n    }\n    window[\"jodastyle\"][\"renderer\"][name] = { renderer, config };\n}\nexports.registerJodaRenderer = registerJodaRenderer;\nfunction jodaRenderer(name, config) {\n    return function (classOrDescriptor) {\n        registerJodaRenderer(name, classOrDescriptor, config);\n    };\n}\nexports.jodaRenderer = jodaRenderer;\nfunction splitChildrenBySelector(element, splitBySelctor) {\n    let ret = [];\n    Array.from(element.children).forEach(child => {\n        if (child.matches(splitBySelctor)) {\n            ret.push(document.createDocumentFragment());\n        }\n        if (ret.length > 0) {\n            ret[ret.length - 1].append(child);\n        }\n    });\n    return ret;\n}\nexports.splitChildrenBySelector = splitChildrenBySelector;\nfunction getCleanVariableValue(styleValue) {\n    return styleValue.trim().replace(/^[\"']/g, '').replace(/[\"']$/, '').trim();\n}\nexports.getCleanVariableValue = getCleanVariableValue;\n/**\n * Parse config string formattes as key-value pairs like this: key1: value1; key2: value2; ... into an object.\n *\n * @param input String representing key-value pair separated by colon and each line separated by semicolon\n * @returns Object containing key-value pairs from string\n */\nfunction parseConfigString(input) {\n    // Check if input is null or undefined\n    if (input == null) {\n        return {};\n    }\n    // Split input string and filter invalid lines\n    const obj = {};\n    const lines = input.trim().split(';');\n    for (let line of lines) {\n        const parts = line.trim().split(':');\n        if (parts.length == 2) {\n            obj[parts[0].trim()] = parts[1].trim();\n        }\n    }\n    return obj;\n}\nexports.parseConfigString = parseConfigString;\n/**\n * Copy all data-child-* attributes from source to target element\n *\n * e.g. <slot data-child-class=\"abc\"> Will result in <div class=\"abc\">\n *     Also: <slot data-child-layout=\"use: #someElement\"> Will result in <div layout=\"use: #someElement\">\n * @param source\n * @param target\n */\nfunction copyDataChildAttributes(source, target) {\n    Array.from(source.attributes).forEach((attr) => {\n        if (attr.name.startsWith(\"data-child-\")) {\n            // if attribute is class, append classed to existing class attribute\n            if (attr.name === \"data-child-class\") {\n                target.classList.add(...attr.value.split(\" \").filter((value) => value !== \"\"));\n                return;\n            }\n            target.setAttribute(attr.name.substring(11), attr.value);\n        }\n    });\n}\nlet slotIndex = 0;\nfunction getTemplateFilledWithContent(templateSelector, content, origElement) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        let templateConfig = joda_1.Joda.getRegisteredTemplate(templateSelector);\n        let templateHtml = (_a = templateConfig === null || templateConfig === void 0 ? void 0 : templateConfig.template) !== null && _a !== void 0 ? _a : null;\n        if (templateHtml === null) {\n            let template = document.querySelector(templateSelector);\n            if (template === null) {\n                throw new JodaElementException_1.JodaElementException(\"Template not found: \" + templateSelector);\n            }\n            templateHtml = template.innerHTML;\n        }\n        // Load --layout-* variables to template parser\n        let props = getComputedStyle(origElement);\n        // Attention: Chrome cannot list defined CSS Variables!\n        templateHtml = (0, QTemplate_1.template_parse)(templateHtml, {\n            layout: new Proxy({}, {\n                get: function (target, name) {\n                    var _a;\n                    let val = props.getPropertyValue(\"--layout-\" + name.toString());\n                    if (val === \"\") {\n                        // Return default from template config\n                        return (_a = templateConfig === null || templateConfig === void 0 ? void 0 : templateConfig.layoutDefaults[name.toString()]) !== null && _a !== void 0 ? _a : \"\";\n                    }\n                    if (val === \"true\")\n                        return true;\n                    if (val === \"false\")\n                        return false;\n                    return val;\n                }\n            })\n        }, content);\n        let clone = document.createRange().createContextualFragment(templateHtml);\n        let done = [];\n        clone.querySelectorAll(\"slot[data-select][data-copy]\").forEach((slot) => {\n            if (done.includes(slot)) {\n                return;\n            }\n            done.push(slot);\n            slot.setAttribute(\"_slotIndex\", (++slotIndex).toString());\n            let select = slot.getAttribute(\"data-select\");\n            let selected;\n            if (slot.getAttribute(\"data-limit\") === \"1\") {\n                selected = Array.from([content.querySelector(select)]).map((element) => element.cloneNode(true));\n            }\n            else {\n                selected = Array.from(content.querySelectorAll(select)).map((element) => element.cloneNode(true));\n            }\n            selected.forEach((element) => {\n                copyDataChildAttributes(slot, element);\n            });\n            if (selected.length === 0) {\n                console.warn(\"No element found for selector: \" + select + \" in template: \" + templateSelector + \" for slot: \", slot);\n                return;\n            }\n            if (slot.hasAttribute(\"data-replace\") && selected) {\n                slot.replaceWith(...selected);\n            }\n            else if (selected) {\n                slot.append(...selected);\n            }\n        });\n        clone.querySelectorAll(\"slot[data-select]\").forEach((slot) => {\n            if (done.includes(slot)) {\n                return;\n            }\n            done.push(slot);\n            slot.setAttribute(\"_slotIndex\", (++slotIndex).toString());\n            let select = slot.getAttribute(\"data-select\");\n            let selected;\n            if (slot.getAttribute(\"data-limit\") === \"1\") {\n                let curElements = content.querySelector(select);\n                if (curElements === null) {\n                    selected = [];\n                }\n                else {\n                    selected = Array.from([content.querySelector(select)]);\n                }\n            }\n            else {\n                selected = Array.from(content.querySelectorAll(select));\n            }\n            if (selected.length === 0) {\n                console.warn(\"No element found for selector: \" + select + \" in template: \" + templateSelector + \" for slot: \", slot);\n                return;\n            }\n            selected.forEach((element) => {\n                copyDataChildAttributes(slot, element);\n            });\n            if (slot.hasAttribute(\"data-replace\") && selected) {\n                slot.replaceWith(...selected);\n            }\n            else if (selected) {\n                slot.append(...selected);\n            }\n        });\n        // Select <slot> element with no data-select attribute\n        let slot = clone.querySelector(\"slot:not([data-select])\");\n        if (slot !== null && slot.hasAttribute(\"data-class\")) {\n            if (done.includes(slot)) {\n                return;\n            }\n            done.push(slot);\n            slot.setAttribute(\"_slotIndex\", (++slotIndex).toString());\n            Array.from(content.children).forEach((element) => {\n                // Add all classes from data-class attribute to selected element\n                element.classList.add(...slot.getAttribute(\"data-class\").split(\" \").filter((value) => value !== \"\"));\n            });\n        }\n        if (slot !== null && slot.hasAttribute(\"data-replace\")) {\n            slot.replaceWith(...Array.from(content.children));\n        }\n        else if (slot !== null) {\n            slot.append(...Array.from(content.children));\n        }\n        else {\n            content.remove();\n        }\n        return clone;\n    });\n}\nexports.getTemplateFilledWithContent = getTemplateFilledWithContent;\nfunction runCallbacksForTemplate(templateSelector, element) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        let templateConfig = joda_1.Joda.getRegisteredTemplate(templateSelector);\n        if ((_a = templateConfig === null || templateConfig === void 0 ? void 0 : templateConfig.callbacks) === null || _a === void 0 ? void 0 : _a.onAfterConnectedCallback) {\n            yield templateConfig.callbacks.onAfterConnectedCallback(element);\n        }\n        if ((_b = templateConfig === null || templateConfig === void 0 ? void 0 : templateConfig.callbacks) === null || _b === void 0 ? void 0 : _b.onAfterAllTemplatesConnectedCallback) {\n            // Spool up callback (executed by jodastyle)\n            exports.allTemplatesConnectedCallbacks.push(() => __awaiter(this, void 0, void 0, function* () { return templateConfig.callbacks.onAfterAllTemplatesConnectedCallback(element); }));\n        }\n    });\n}\nexports.runCallbacksForTemplate = runCallbacksForTemplate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createElementTree = exports.createElement = exports.parseAttributeStr = exports.parseVariableStr = exports.parseVariableAndStyleStr = void 0;\nconst embed_1 = require(\"@kasimirjs/embed\");\nfunction parseVariableAndStyleStr(varString) {\n    let attrs = { \"$\": {}, \"@\": {} };\n    let regex = new RegExp(`([@$])[^@^$]+`, \"gi\");\n    varString.replace(regex, (match, type) => {\n        match = match.substring(1);\n        if (match.indexOf(\"=\") === -1 && type === \"@\") {\n            if (typeof attrs[type].class === \"undefined\")\n                attrs[type].class = \"\";\n            attrs[type].class += \" \" + match;\n            attrs[type].class = attrs[type].class.trim();\n        }\n        else {\n            let res = match.split(\"=\");\n            attrs[type][res.shift()] = res.join(\"=\").trim();\n        }\n        return \"\";\n    });\n    return attrs;\n}\nexports.parseVariableAndStyleStr = parseVariableAndStyleStr;\nfunction parseVariableStr(varString, delimiter = \"@\") {\n    let attrs = {};\n    let regex = new RegExp(`\\\\${delimiter}[^${delimiter}]+`, \"gi\");\n    varString.replace(regex, (match) => {\n        match = match.substring(1);\n        if (match.indexOf(\"=\") === -1) {\n            if (typeof attrs.class === \"undefined\")\n                attrs.class = \"\";\n            attrs.class += \" \" + match;\n            attrs.class = attrs.class.trim();\n        }\n        else {\n            let res = match.split(\"=\");\n            attrs[res.shift()] = res.join(\"=\").trim();\n        }\n        return \"\";\n    });\n    return attrs;\n}\nexports.parseVariableStr = parseVariableStr;\nfunction parseAttributeStr(attrString) {\n    return parseVariableStr(attrString, \"@\");\n}\nexports.parseAttributeStr = parseAttributeStr;\nfunction createElement(definition) {\n    let defRest = definition.trim();\n    let tag = \"div\";\n    defRest = defRest.replace(/^[a-z0-9_\\:\\-]+/ig, (match) => {\n        tag = match;\n        return \"\";\n    });\n    let attrs = parseAttributeStr(defRest);\n    let element = (0, embed_1.ka_create_element)(tag, attrs);\n    return element;\n}\nexports.createElement = createElement;\nfunction createElementTree(def) {\n    let start = null;\n    let leaf = null;\n    let splitted = def.split(\">\");\n    while (splitted.length > 0) {\n        let cur = splitted.shift();\n        let refName = null;\n        cur = cur.replace(/§([a-z0-9_\\-]+)/, (a, name) => {\n            refName = name;\n            return \"\";\n        });\n        if (cur.trim().startsWith(\"|\")) {\n            // TextNode\n            let el = document.createElement(\"div\");\n            if (splitted.length > 0)\n                cur += \">\" + splitted.join(\">\");\n            el.innerHTML = cur.trim().substring(1);\n            el.childNodes.forEach((e) => leaf.append(e.cloneNode(true)));\n            el.remove();\n            break;\n        }\n        let el = createElement(cur);\n        /*if (refName !== null)\n            this.#refs[refName] = el;\n*/\n        if (start === null) {\n            start = leaf = el;\n        }\n        else {\n            if (leaf instanceof HTMLTemplateElement) {\n                leaf.content.appendChild(el);\n            }\n            else {\n                leaf.appendChild(el);\n            }\n            leaf = el;\n        }\n    }\n    return { start, leaf };\n}\nexports.createElementTree = createElementTree;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nclass Logger {\n    constructor(name) {\n        this.name = name;\n    }\n    log(...args) {\n        console.log(\"[\" + this.name + \"]\", ...args);\n    }\n    warn(...args) {\n        console.warn(\"[\" + this.name + \"]\", ...args);\n    }\n}\nexports.Logger = Logger;\n","export * from \"./helper/JodaRenderer\";\nexport * from \"./component/joda-content-element\";\nexport * from \"./component/joda-fetch\";\nexport * from \"./component/joda-split\";\nexport * from \"./helper/functions\";\nexport * from \"./helper/JodaRenderer\";\nexport * from \"./helper/QTemplate\";\nexport * from \"./types/DefaultLayout\";\nexport * from \"./helper/JodaDescriptionManager\";\nexport * from \"./helper/logger\";\nexport * from \"./processor/jodasplit\";\nexport * from \"./helper/JodaSiteConfig\";\nexport * from \"./joda\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Joda = void 0;\nexports.Joda = new (class {\n    /**\n     * Register a template instead of adding <template id=\"...\">...</template> to the DOM\n     *\n     * @param id\n     * @param data\n     * @param layoutDefaults\n     * @param callbacks\n     */\n    registerTemplate(id, data, layoutDefaults = {}, callbacks = {}) {\n        if (!window[\"jodastyle\"])\n            window[\"jodastyle\"] = {};\n        if (!window[\"jodastyle\"][\"templates\"])\n            window[\"jodastyle\"][\"templates\"] = {};\n        window[\"jodastyle\"][\"templates\"][id] = {\n            template: data,\n            layoutDefaults: layoutDefaults,\n            callbacks: callbacks\n        };\n    }\n    getRegisteredTemplate(id) {\n        var _a, _b, _c;\n        if (id.startsWith(\"#\"))\n            id = id.substring(1);\n        return (_c = (_b = (_a = window[\"jodastyle\"]) === null || _a === void 0 ? void 0 : _a[\"templates\"]) === null || _b === void 0 ? void 0 : _b[id]) !== null && _c !== void 0 ? _c : null;\n    }\n})();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LayoutProcessor = void 0;\nconst functions_1 = require(\"../helper/functions\");\nconst commands = [\"use\", \"wrap\"];\nclass LayoutProcessor {\n    constructor(logger) {\n        this.logger = logger;\n    }\n    processNode(node) {\n        if (!node.hasAttribute(\"layout\"))\n            return node;\n        let layout = (0, functions_1.parseConfigString)(node.getAttribute(\"layout\"));\n        for (let key in layout) {\n            if (commands.includes(key)) {\n                node.style.setProperty(\"--joda-\" + key, layout[key]);\n                continue;\n            }\n            node.style.setProperty(\"--layout-\" + key, layout[key]);\n        }\n        return node;\n    }\n}\nexports.LayoutProcessor = LayoutProcessor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Jodaresponsive = exports.parseClassStr = exports.getCurrentBreakpoint = exports.breakpoints = void 0;\nexports.breakpoints = {\n    \"xsm\": 0,\n    \"sm\": 576,\n    \"md\": 768,\n    \"lg\": 992,\n    \"xl\": 1200,\n    \"xxl\": 1400\n};\nfunction getCurrentBreakpoint() {\n    let ret = \"\";\n    Object.keys(exports.breakpoints).forEach((key) => {\n        if (window.innerWidth >= exports.breakpoints[key]) {\n            ret = key;\n        }\n    });\n    return ret;\n}\nexports.getCurrentBreakpoint = getCurrentBreakpoint;\nclass ResponsiveClass {\n    constructor() {\n        this.always = [];\n        this.default = null;\n        this.xsm = null;\n        this.xs = null;\n        this.sm = null;\n        this.md = null;\n        this.lg = null;\n        this.xl = null;\n        this.xxl = null;\n        this.breakpoints = [\"xsm\", \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\"];\n    }\n    getClassesForBreakpoint(breakpoint = null) {\n        if (breakpoint === null) {\n            breakpoint = getCurrentBreakpoint();\n        }\n        let ret = [];\n        ret.push(...this.always);\n        let isDefault = true;\n        for (let bp of this.breakpoints) {\n            //console.log(\"Breakpoint\", bp, this[bp], breakpoint);\n            if (this[bp] !== null) {\n                ret = this[bp];\n                isDefault = false;\n            }\n            if (bp === breakpoint) {\n                break;\n            }\n        }\n        if (isDefault && this.default !== null) {\n            ret.push(...this.default);\n        }\n        ret = ret.filter((item) => item !== \"\");\n        return ret;\n    }\n    ;\n}\nfunction parseClassStr(input) {\n    let ret = new ResponsiveClass();\n    let pointer = \"always\";\n    input.split(\" \").map((item) => {\n        let matches = item.match(/\\:([a-zA-Z]*)\\:/);\n        if (matches === null) {\n            ret[pointer].push(item);\n            return;\n        }\n        pointer = matches[1];\n        if (pointer === \"\") {\n            pointer = \"default\";\n        }\n        if (ret[pointer] === null) {\n            ret[pointer] = [];\n        }\n    });\n    return ret;\n}\nexports.parseClassStr = parseClassStr;\nclass Jodaresponsive {\n    constructor(logger) {\n        this.logger = logger;\n    }\n    processNode(node) {\n        var _a;\n        const origAttr = \"data-class-orig\";\n        if (!node.hasAttribute(origAttr)) {\n            let classes = (_a = node.getAttribute(\"class\")) !== null && _a !== void 0 ? _a : \"\";\n            if (classes.indexOf(\":\") === -1)\n                return;\n            node.setAttribute(origAttr, classes);\n        }\n        let classes = node.getAttribute(origAttr);\n        let responsiveClasses = parseClassStr(classes);\n        node.setAttribute(\"class\", \"\");\n        node.classList.add(...responsiveClasses.always.filter((item) => item !== \"\"));\n        node.classList.add(...responsiveClasses.getClassesForBreakpoint());\n    }\n    process(node) {\n        Array.from([node, ...Array.from(node.querySelectorAll(\"*\"))]).forEach((child) => {\n            this.processNode(child);\n        });\n    }\n}\nexports.Jodaresponsive = Jodaresponsive;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Jodashorts = void 0;\nclass Jodashorts {\n    constructor(logger) {\n        this.logger = logger;\n    }\n    process(source) {\n        source = source.replace(/\\[([a-z0-9\\-)]+)(.*?)]/g, (match, name, attrStr) => {\n            let attrs = {\n                \"class\": []\n            };\n            // Search for name=\"value\" or name='value'. Make sure that starting ' matches ending ' using back reference\n            attrStr = attrStr.replace(/”/g, '\"').replace(/“/g, '\"').replace(/‘/g, \"'\").replace(/’/g, \"'\");\n            attrStr = attrStr.replace(/([a-z0-9\\-\\.]+)=([\"'])(.*?)\\2/mig, (match, name, quote, value) => {\n                if (name === \"class\") {\n                    attrs[\"class\"].push(...value.split(\" \"));\n                    return \"\";\n                }\n                attrs[name] = value;\n                return \"\";\n            });\n            attrStr.split(\" \").forEach((attr) => {\n                attr = attr.trim();\n                if (attr === \"\")\n                    return;\n                if (attr.startsWith(\".\")) {\n                    attrs[\"class\"].push(attr.substr(1));\n                    return;\n                }\n                attrs[attr] = \"\";\n            });\n            let attrstr = \"\";\n            for (let attr in attrs) {\n                if (attr === \"class\") {\n                    attrstr += ` class=\"${attrs[attr].join(\" \")}\"`;\n                }\n                else {\n                    attrstr += ` ${attr}=\"${attrs[attr]}\"`;\n                }\n            }\n            let ret = `<${name}${attrstr}></${name}>`;\n            return ret;\n        });\n        return source;\n    }\n}\nexports.Jodashorts = Jodashorts;\n","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Jodasplit_target, _Jodasplit_parents, _Jodasplit_currentParent, _Jodasplit_currentContent, _Jodasplit_currentChildren;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Jodasplit = void 0;\nconst embed_1 = require(\"@kasimirjs/embed\");\n/**\n * Copy attributes data-section-* from source to target\n *\n * So data-section-class becomes class on target\n *\n * On data-section-class it will add the classs to the existing classes\n * On data-section-style it will add the styles to existing styles\n *\n * @param source\n * @param target\n */\nfunction copySectionAttributes(source, target) {\n    source.getAttributeNames().forEach((name) => {\n        if (!name.startsWith(\"data-section-\")) {\n            return;\n        }\n        let value = source.getAttribute(name);\n        name = name.substr(13);\n        if (name === \"class\") {\n            // Filter empty classes\n            target.classList.add(...value.split(\" \").filter((c) => c.length > 0));\n            return;\n        }\n        if (name === \"style\") {\n            // Filter empty classes\n            target.setAttribute(\"style\", (target.getAttribute(\"style\") || \"\") + value);\n            return;\n        }\n        // default\n        target.setAttribute(name, value);\n    });\n}\nclass Jodasplit {\n    constructor(logger) {\n        this.logger = logger;\n        _Jodasplit_target.set(this, document.createDocumentFragment());\n        _Jodasplit_parents.set(this, [__classPrivateFieldGet(this, _Jodasplit_target, \"f\")]);\n        _Jodasplit_currentParent.set(this, (0, embed_1.ka_create_element)(\"section\", { class: \"section-h1pre\" }));\n        _Jodasplit_currentContent.set(this, (0, embed_1.ka_create_element)(\"div\", { class: \"content\" }, [], __classPrivateFieldGet(this, _Jodasplit_currentParent, \"f\")));\n        _Jodasplit_currentChildren.set(this, (0, embed_1.ka_create_element)(\"div\", { class: \"children\" }, [], __classPrivateFieldGet(this, _Jodasplit_currentParent, \"f\")));\n    }\n    findParentElement(layer) {\n        while (__classPrivateFieldGet(this, _Jodasplit_parents, \"f\").length > layer) {\n            __classPrivateFieldGet(this, _Jodasplit_parents, \"f\").pop();\n        }\n        while (__classPrivateFieldGet(this, _Jodasplit_parents, \"f\")[__classPrivateFieldGet(this, _Jodasplit_parents, \"f\").length - 1] === undefined) {\n            __classPrivateFieldGet(this, _Jodasplit_parents, \"f\").pop();\n        }\n        return __classPrivateFieldGet(this, _Jodasplit_parents, \"f\")[__classPrivateFieldGet(this, _Jodasplit_parents, \"f\").length - 1];\n    }\n    createNewElement(tagName, layer, tag) {\n        tagName = tagName.toLowerCase();\n        let curParent = this.findParentElement(layer);\n        //console.log(\"createNewElement\", tagName, curParent, this.#parents);\n        let curParentChildren = curParent.childNodes[1];\n        __classPrivateFieldSet(this, _Jodasplit_currentParent, (0, embed_1.ka_create_element)(tag, { class: \"section-\" + tagName }), \"f\");\n        while (__classPrivateFieldGet(this, _Jodasplit_parents, \"f\").length < layer) {\n            __classPrivateFieldGet(this, _Jodasplit_parents, \"f\").push(undefined);\n        }\n        __classPrivateFieldGet(this, _Jodasplit_parents, \"f\").push(__classPrivateFieldGet(this, _Jodasplit_currentParent, \"f\"));\n        if (curParent === __classPrivateFieldGet(this, _Jodasplit_target, \"f\")) {\n            curParent.appendChild(__classPrivateFieldGet(this, _Jodasplit_currentParent, \"f\"));\n        }\n        else {\n            curParentChildren.append(__classPrivateFieldGet(this, _Jodasplit_currentParent, \"f\"));\n        }\n        __classPrivateFieldSet(this, _Jodasplit_currentContent, (0, embed_1.ka_create_element)(\"div\", { class: \"content\" }, [], __classPrivateFieldGet(this, _Jodasplit_currentParent, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _Jodasplit_currentChildren, (0, embed_1.ka_create_element)(\"div\", { class: \"children\" }, [], __classPrivateFieldGet(this, _Jodasplit_currentParent, \"f\")), \"f\");\n        return __classPrivateFieldGet(this, _Jodasplit_currentParent, \"f\");\n    }\n    process(source) {\n        let lastLayer = 1;\n        __classPrivateFieldGet(this, _Jodasplit_target, \"f\").append(__classPrivateFieldGet(this, _Jodasplit_currentParent, \"f\"));\n        // Layout Processor now in JodaStyle\n        //let layoutProcessor = new LayoutProcessor(this.logger);\n        Array.from(source.children).forEach((child) => {\n            if (child instanceof HTMLElement && child.matches(\"footer\")) {\n                // Just copy node\n                __classPrivateFieldGet(this, _Jodasplit_target, \"f\").appendChild(child);\n                return;\n            }\n            if (child instanceof HTMLElement && child.matches(\"h1, h2, h3, h4, h5, h6, h7, h8, h9, hr:not(.hr), .section-h2, .section-h3, .section-h4\")) {\n                let layer = 1;\n                let tag = \"div\";\n                if (child.matches(\"h1,h2,.section-h2\")) {\n                    layer = lastLayer = 1;\n                    tag = \"section\";\n                }\n                else if (child.matches(\"h3, h4, h5, h6, h7, h8, h9, .section-h3, .section-h4\")) {\n                    if (child.matches(\".section-h3\")) {\n                        layer = lastLayer = 6;\n                    }\n                    else if (child.matches(\".section-h4\")) {\n                        layer = lastLayer = 8;\n                    }\n                    else {\n                        layer = lastLayer = parseInt(child.tagName.substr(1)) * 2; // Allow HR in between\n                    }\n                    tag = \"div\";\n                }\n                else if (child.matches(\"hr\")) {\n                    layer = lastLayer + 1; // hr crates subelement of the last element\n                    tag = \"div\";\n                }\n                //console.log(\"layer is\", layer, lastLayer, child.tagName, child);\n                let e = this.createNewElement(child.tagName.toLowerCase(), layer, tag);\n                e.setAttribute(\"layout\", child.getAttribute(\"layout\") || \"\");\n                child.removeAttribute(\"layout\");\n                // Copy data-section-* attributes to the new element\n                copySectionAttributes(child, e);\n                if (child.tagName === \"HR\" && !child.classList.contains(\"hr\")) {\n                    // Only copy styles from HR Elements not marked as .hr\n                    e.setAttribute(\"style\", child.getAttribute(\"style\") || \"\");\n                    child.removeAttribute(\"style\");\n                    e.classList.add(...child.classList);\n                    child.setAttribute(\"orig-class\", child.getAttribute(\"class\") || \"\");\n                    child.setAttribute(\"class\", \"\");\n                }\n                //layoutProcessor.processNode(e);\n            }\n            if (child.tagName === \"HR\" && !child.classList.contains(\"hr\")) {\n                child.setAttribute(\"orig-pre-split-class\", child.getAttribute(\"class\"));\n                child.setAttribute(\"class\", \"d-none\");\n            }\n            __classPrivateFieldGet(this, _Jodasplit_currentContent, \"f\").appendChild(child);\n        });\n        // Remove empty content elements\n        Array.from(__classPrivateFieldGet(this, _Jodasplit_target, \"f\").querySelectorAll(\".children\")).forEach((child) => {\n            if (child.children.length === 0) {\n                child.remove();\n            }\n        });\n        // Reove empty content elements\n        Array.from(__classPrivateFieldGet(this, _Jodasplit_target, \"f\").querySelectorAll(\".content\")).forEach((child) => {\n            if (child.children.length === 0) {\n                child.remove();\n            }\n        });\n        return __classPrivateFieldGet(this, _Jodasplit_target, \"f\");\n    }\n}\nexports.Jodasplit = Jodasplit;\n_Jodasplit_target = new WeakMap(), _Jodasplit_parents = new WeakMap(), _Jodasplit_currentParent = new WeakMap(), _Jodasplit_currentContent = new WeakMap(), _Jodasplit_currentChildren = new WeakMap();\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jodaStyleCommands = void 0;\nconst ka_quick_template_1 = require(\"../helper/ka-quick-template\");\nconst functions_1 = require(\"../helper/functions\");\nconst embed_1 = require(\"@kasimirjs/embed\");\nexports.jodaStyleCommands = {};\n/**\n * Replace the element with the given @class > @id=elementId template\n *\n * @param value\n * @param target\n * @param element\n * @param logger\n */\nexports.jodaStyleCommands[\"--joda-replace-by\"] = (value, target, element, logger) => {\n    let parent = element.parentElement;\n    let ret = (0, ka_quick_template_1.createElementTree)(value);\n    parent.replaceChild(ret.start, element);\n    Array.from(element.children).forEach((child) => {\n        ret.leaf.append(child);\n    });\n    element.remove();\n    return ret.leaf;\n};\n/**\n * Wrap the selected element with the Template\n *\n * @param value\n * @param target\n * @param element\n * @param logger\n */\nexports.jodaStyleCommands[\"--joda-wrap\"] = (value, target, element, logger) => __awaiter(void 0, void 0, void 0, function* () {\n    let parent = element.parentElement;\n    if (value.startsWith(\"#\")) {\n        console.log(\"Wrap element\", element, \"with template\", value);\n        let placeholder = document.createElement(\"div\");\n        parent.insertBefore(placeholder, element);\n        // Move Element to placeholder (to be able to access it in <slot>)\n        placeholder.append(element);\n        let newElement = yield (0, functions_1.getTemplateFilledWithContent)(value, placeholder, element);\n        placeholder.replaceWith(newElement);\n        yield (0, functions_1.runCallbacksForTemplate)(value, element);\n        return element;\n    }\n    else {\n        let ret = (0, ka_quick_template_1.createElementTree)(value);\n        parent.replaceChild(ret.start, element);\n        ret.leaf.append(element);\n        return element;\n    }\n});\nexports.jodaStyleCommands[\"--joda-container\"] = (value, target, element, logger) => {\n    let ret = (0, ka_quick_template_1.createElementTree)(value);\n    Array.from(element.children).forEach((child) => {\n        ret.leaf.append(child);\n    });\n    element.append(ret.start);\n    return element;\n};\nexports.jodaStyleCommands[\"--joda-unwrap\"] = (value, target, element, logger) => {\n    let parent = element.parentElement;\n    let grandParent = parent.parentElement;\n    grandParent.insertBefore(element, parent);\n    if (parent.children.length === 0) {\n        parent.remove();\n    }\n    return element;\n};\n/**\n * --joda-group: @row\n * @param value\n * @param target\n * @param element\n * @param logger\n */\nexports.jodaStyleCommands[\"--joda-group\"] = (value, target, element, logger) => {\n    const groupByKey = \"jodaIsGroupedBy\";\n    if (element[groupByKey] !== undefined) {\n        return element;\n    }\n    let siblings = [];\n    let curSibling = element.nextElementSibling;\n    while (curSibling && (0, functions_1.getCleanVariableValue)(getComputedStyle(curSibling).getPropertyValue(\"--joda-group\")) === value) {\n        siblings.push(curSibling);\n        curSibling[groupByKey] = true;\n        curSibling = curSibling.nextElementSibling;\n    }\n    let parent = element.parentElement;\n    let ret = (0, ka_quick_template_1.createElementTree)(value);\n    // Insert the Element\n    element.parentElement.insertBefore(ret.start, element);\n    ret.leaf.append(element);\n    siblings.forEach((sibling) => {\n        ret.leaf.append(sibling);\n    });\n    return element;\n};\nexports.jodaStyleCommands[\"--joda-class\"] = (value, target, element, logger) => {\n    let ret = (0, ka_quick_template_1.createElementTree)(value);\n    element.setAttribute(\"class\", element.getAttribute(\"class\") + \" \" + value);\n    return element;\n};\nexports.jodaStyleCommands[\"--joda-use\"] = (value, target, element, logger) => __awaiter(void 0, void 0, void 0, function* () {\n    if (value.startsWith(\"#\")) {\n        let placeholder = document.createElement(\"div\");\n        Array.from(element.children).forEach((child) => {\n            placeholder.append(child);\n        });\n        let newElement = yield (0, functions_1.getTemplateFilledWithContent)(value, placeholder, element);\n        let firstElement = newElement.firstElementChild;\n        firstElement[\"joda-style-processed\"] = true; // Set style as processed (to prevent double processing)\n        // Copy first line of the outerHTML string of the element\n        let debugElement = element.outerHTML.split(\"\\n\")[0];\n        firstElement.setAttribute(\"_orig_elem\", debugElement);\n        element.getAttributeNames().forEach((attrName) => {\n            var _a, _b;\n            // copy attributes but. Append class and styles\n            if (attrName === \"class\") {\n                firstElement.setAttribute(attrName, (_a = element.getAttribute(attrName) + \" \" + firstElement.getAttribute(attrName)) !== null && _a !== void 0 ? _a : \"\");\n                return;\n            }\n            if (attrName === \"style\") {\n                firstElement.setAttribute(attrName, (_b = element.getAttribute(attrName) + \" \" + firstElement.getAttribute(attrName)) !== null && _b !== void 0 ? _b : \"\");\n                return;\n            }\n            if (attrName.startsWith(\"layout\")) {\n                firstElement.setAttribute(\"layout-orig\", element.getAttribute(attrName));\n                return;\n            }\n            firstElement.setAttribute(attrName, element.getAttribute(attrName));\n        });\n        element.parentElement.insertBefore(newElement, element);\n        element.parentElement.removeChild(element);\n        yield (0, functions_1.runCallbacksForTemplate)(value, firstElement);\n        return firstElement;\n    }\n    let matches = value.match(/([a-z0-9\\_-]+)\\s*\\((.*?)\\)/);\n    if (!matches) {\n        console.error(\"Invalid --joda-use command: \", value, \"in element\", element, \" should be in format: commandName(arg1: value1, arg2: value2, ...)\");\n        throw \"Invalid --joda-use command: \" + value + \" should be in format: commandName(arg1: value1, arg2: value2, ...)\";\n    }\n    logger.log(\"Using renderer: \", matches[1], \"with args: \", matches[2], \"on element\", element);\n    let commandName = matches[1];\n    //console.log(\"interpret\", \"{\" + matches[2] + \"}\")\n    let args = (0, embed_1.ka_eval)(\"{\" + matches[2] + \"}\", {}, target, {});\n    let command = yield (0, functions_1.await_property)(window, [\"jodastyle\", \"renderer\", commandName]);\n    let config = new command.config();\n    let style = getComputedStyle(element);\n    Object.keys(config).forEach((key) => {\n        let val = style.getPropertyValue(\"--layout-\" + key.replace(/\\_/g, \"-\"));\n        if (val !== \"\") {\n            config[key] = val.replace(/^[\"']/g, '').replace(/[\"']$/, '').trim();\n        }\n    });\n    Object.assign(config, args);\n    return yield (new command.renderer).render(element, config);\n});\nexports.jodaStyleCommands[\"--joda-on-empty-class\"] = (value, target, element, logger) => __awaiter(void 0, void 0, void 0, function* () {\n    console.log(\"Check if element is empty\", element.textContent.trim(), \"and add class\", value);\n    if (element.textContent.trim() === \"\") {\n        element.classList.add(value);\n    }\n    return element;\n});\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Jodastyle = void 0;\nconst jodastyle_commands_1 = require(\"./jodastyle-commands\");\nconst functions_1 = require(\"../helper/functions\");\nconst embed_1 = require(\"@kasimirjs/embed\");\nconst JodaElementException_1 = require(\"../helper/JodaElementException\");\nconst JodaErrorElement_1 = require(\"../helper/JodaErrorElement\");\nconst LayoutProcessor_1 = require(\"./LayoutProcessor\");\nclass Jodastyle {\n    constructor(logger) {\n        this.logger = logger;\n    }\n    process(node) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait for all joda-split to be ready\n            for (let child of Array.from(node.getElementsByTagName(\"joda-split\"))) {\n                while (child[\"ready\"] !== true) {\n                    yield (0, embed_1.ka_sleep)(5);\n                }\n            }\n            // Run layout-attribute processor (for whole style - already running on joda-split)\n            let layoutProcessor = new LayoutProcessor_1.LayoutProcessor(this.logger);\n            node.querySelectorAll(\"[layout]\").forEach((node) => {\n                layoutProcessor.processNode(node);\n            });\n            // Run jodastyle commands\n            for (let child of [node, ...Array.from(node.querySelectorAll(\"*\"))]) {\n                if (child[\"joda-style-processed\"] === true) {\n                    continue;\n                }\n                child[\"joda-style-processed\"] = true;\n                let style = getComputedStyle(child);\n                let keys = Object.keys(jodastyle_commands_1.jodaStyleCommands);\n                for (let key of Array.from(keys)) {\n                    let styleValue = style.getPropertyValue(key);\n                    if (styleValue === \"\") {\n                        continue;\n                    }\n                    if (styleValue === getComputedStyle(child.parentElement).getPropertyValue(key)) {\n                        continue; // Inherited from parent\n                    }\n                    // Replace starting and ending with \" or ' with nothing\n                    styleValue = (0, functions_1.getCleanVariableValue)(styleValue);\n                    let command = jodastyle_commands_1.jodaStyleCommands[key];\n                    try {\n                        child = (yield command(styleValue, node, child, this.logger));\n                    }\n                    catch (e) {\n                        if (e instanceof JodaElementException_1.JodaElementException) {\n                            e.triggerCommand = key + \": \" + styleValue;\n                            this.logger.warn(e.message, e.element);\n                            child.replaceWith(new JodaErrorElement_1.JodaErrorElement(e.message + \" (trigger by: \" + e.triggerCommand + \")\"));\n                        }\n                        else {\n                            this.logger.warn(\"Unhandled exception\", e, \"on element\", child, \"triggered by\", key + \": \" + styleValue);\n                            throw e;\n                        }\n                    }\n                }\n                yield this.process(child); // Recursive parse replaced elements\n            }\n        });\n    }\n}\nexports.Jodastyle = Jodastyle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Jodavisualize = void 0;\nconst embed_1 = require(\"@kasimirjs/embed\");\nclass Jodavisualize {\n    process(element) {\n        [element, ...Array.from(element.querySelectorAll(\"*\"))].forEach((e) => {\n            e.insertBefore((0, embed_1.ka_create_element)(\"div\", { class: \"joda-visualize\" }, `<${e.tagName.toLowerCase()}  class=\"${Array.from(e.classList).join(\", \")}\">`), e.firstElementChild);\n        });\n    }\n}\nexports.Jodavisualize = Jodavisualize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLayout = void 0;\nclass DefaultLayout {\n    constructor() {\n        this.container = \"container\";\n        this.break1 = \"xl\";\n    }\n}\nexports.DefaultLayout = DefaultLayout;\n","\n\nimport \"./showcase/default-page\";\nimport \"./showcase/legal-page\";\nimport \"./showcase/contact-page\";\n","import {JodaDescriptionManager} from \"@leuffen/jodastyle\";\n\nlet html =`\n\n<nav layout=\"use: #navbar-switch1\" class=\"floating\">\n    <div class=\"brand\"><a href=\"\"><img src=\"/images/logo-systemwebsite.webp\"></a></div>\n    <ul class=\"navbar-top\">\n        <li class=\":: d-none :lg: \"><a href=\"\">Beratungstelefon</a></li>\n        <li class=\":: :lg: d-none\"><a href=\"\">Beratung-Tel.: (0201) 12345</a></li>\n        <li><a href=\"\">Angebot anfordern</a></li>\n    </ul>\n    <ul class=\"navbar-main\">\n        <li><a href=\"#home\">Punkt1</a></li>\n        <li><a href=\"#home\">Punkt2</a></li>\n        <li><a href=\"#home\">Hello World</a></li>\n        <li><a href=\"#home\">Hello World</a></li>\n    </ul>\n    <ul class=\"nav-menu\">\n        <li><a href=\"#home\">Home</a></li>\n    </ul>\n</nav>\n\n# Kontakt\n{: layout=\"use: #header1\" data-section-class=\"increased-height\"}\n\nVielen Dank für Ihr Interesse. Nutzen Sie das Formular oder schreiben sie uns unter [kontakt@leuffen.de](kontakt@leuffen.de).\n\n\n## Kontaktformular\n{: layout=\"use: #contact-form\"}\n\n![Some Image](/images/illustration-a1.webp)\n\n- <i class=\"bi bi-geo-alt-fill\"></i> Mathildenstr. 9-11, 45130 Essen\n- <i class=\"bi bi-telephone-fill\"></i> (0201) 7 58 59 936\n- <i class=\"bi bi-envelope-fill\"></i> kontakt@leuffen.de\n\n[input type=\"text\"  name=\"Name\" required .mb-3]\n[input type=\"email\" name=\"E-Mail\" data-invalid-msg=\"Bitte geben Sie eine gültige E-Mail Adresse ein\" required .mb-3]\n[textarea name=\"Nachricht\" .mb-3]\n\n\n## Systemwebsite.de\n{: layout=\"use: #footer\"}\n\n> Ihr Partner für moderne medizinische Webseiten-Entwicklung\n\n\n\n### Links\n\n- [Konditionen](#)\n- [Leistungen](#)\n- [FAQ](#)\n- [Kontakt](#)\n\n### Links\n\n- [Konditionen](#)\n- [Leistungen](#)\n- [FAQ](#)\n- [Kontakt](#)\n\n### Folgen Sie uns\n\n- [LinkedIn](#)\n- [Xing](#)\n- [Facebook](#)\n- [Instragram](#)\n\n---\n{: .footer-nav}\n\nCopyright (c) 2023 Systemwebsite by leuffen.de\n\n- [AGB](#)\n- [Datenschutz](#)\n- [Impressum](#)\n\n`;\n\nJodaDescriptionManager.addClass(\"page\",\n    \"contact-page\",\n    \"contact-page\",\n    html,\n    []\n    ,\n    {\n        bodyClasses: [\"themejs-sys\"]\n    }\n);\n","import {JodaDescriptionManager} from \"@leuffen/jodastyle\";\n\nlet html =`\n\n<nav layout=\"use: #navbar-switch1\" class=\"floating\">\n    <div class=\"brand\"><a href=\"\"><img src=\"/images/logo-systemwebsite.webp\"></a></div>\n    <ul class=\"navbar-top\">\n        <li class=\":: d-none :lg: \"><a href=\"\">Beratungstelefon</a></li>\n        <li class=\":: :lg: d-none\"><a href=\"\">Beratung-Tel.: (0201) 12345</a></li>\n        <li><a href=\"\">Angebot anfordern</a></li>\n    </ul>\n    <ul class=\"navbar-main\">\n        <li><a href=\"#home\">Punkt1</a></li>\n        <li><a href=\"#home\">Punkt2</a></li>\n        <li><a href=\"#home\">Hello World</a></li>\n        <li><a href=\"#home\">Hello World</a></li>\n    </ul>\n    <ul class=\"nav-menu\">\n        <li><a href=\"#home\">Home</a></li>\n    </ul>\n</nav>\n\n# Wir entwickeln moderne und maßgeschneiderte Websites für <typewriter-element>Allgemeinmediziner, Internisten, Gynäkologen, Orthopäden, Dermatologen, HNO-Ärzte, Augenärzte, Chirurgen, Urologen, Kardiologen, Ärzte & Mediziner</typewriter-element>\n{: layout=\"use: #header1\"}\n\n![Webdesign für Ärzte](https://cdn.leuffen.de//leu-systemwebsite/v2/7/113-73_edcba/hero-image.webp)\n\nEinfach und schnell zur eigenen Praxis-Website ohne Mehraufwand.\n\n[Jetzt sichern](#)\n{: .btn .btn-primary}\n\n\n## Hero Section\n{: layout=\"use: #disturber\"}\n\nWir garantieren Ihnen 100% Zufriedenheit mit unserer <b class=\"text-primary\">30 Tage Geld-zurück-Garantie!</b>\n\n\n## Website für Ärzte im Rundum-sorglos-Paket\n{: layout=\"use: #icon-catchprases\"}\n\nSie suchen nach einer individuellen Website für Ihre Arztpraxis ohne den üblichen Aufwand? Mit unserer blitzschnellen\nUmsetzung im modularen Ansatz ist Ihre Praxis-Website im Handumdrehen online. Ohne endlose Absprachen und Mehraufwand,\ninklusive Bilder und Texte im modernen Design. Alles beginnt mit einem kostenlosen Erstgespräch\n– sichern Sie sich jetzt Ihre maßgeschneiderte Praxis-Website.\n\n- ![Some Image](https://cdn.leuffen.de//leu-systemwebsite/v2/13/400-489_409.21/icon-time.svg) *Ihre Praxis-Website nach nur zwei Terminen*\n- ![Some Image](https://cdn.leuffen.de//leu-systemwebsite/v2/9/43-35_500/icon-monitor-mobile.svg) *Individuelle Bilder und Texte in Sekundenschnelle*\n- ![Some Image](https://cdn.leuffen.de//leu-systemwebsite/v2/11/190-213_446.74/icon-shield.svg) *Domain, SSL und E-Mail-Postfach (BSI zertifiziert) möglich*\n\n## Service\n{: layout=\"use: #service-slider\" data-scrollspy-name=\"Service\"}\n\n> Wählen Sie aus unseren Leistungen\n\nStellen Sie Ihre Leistungen individuell zusammen: Sie entscheiden welche Leistungen wir direkt erledigen oder mit welchen\nPartnern von Ihnen wir zusammenarbeiten.\n\nIhr Projektmanager kontaktiert auf Wunsch Ihre IT Dienstleister und koordiniert die Zusammenarbeit.\n\n<a href=\"#\" class=\"btn btn-outline-primary desktop-button\">Alle Leistungen entdecken</a>\n\n\n\n\n### Wirkungsvolle Texte\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/30/a_500/icon-text-image.svg)\n\nSchnell Starten mit unseren erprobten Text- & Bildvorlagen für alle Fachrichtungen.\n\n### Logos mit Stil\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/31/a_500/icon-logodesign.svg)\n\nNoch kein Logo? Wir erstellen Ihnen ein individuelles Logo für Ihre Praxis.\n\n### Passende Print-Designs\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/32/a_500/icon-business-print.svg)\n\nAus einem Guss: Praxisschild, Visitenkarten, Briefpapier, Rezeptblöcke und vieles mehr.\n\n### Ausdrucksstarke Praxisfotos\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/10/a_ba/icon-photography.webp)\n\nKostenlose Abstimmung und Terminfindung mit einem Fotografen in Ihrer Nähe.\n\n### Individuelle Designleistungen\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/14/a_ba/icon-webdesign.webp)\n\nDurchgängig ein Design: Vereinbaren Sie jederzeit einen Termin mit einem Designer.\n\n\n\n## Eine Praxis-Website auf Ihre Bedürfnisse angepasst\n{: layout=\"use: #cols-2\" data-scrollspy-name=\"Features\"}\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/18/72-65_ba/illustration-04.webp)\nDurchdachte Features für Ihre Patienten, immer mit der neusten Technologie und auf dem aktuellen Stand:\n\n\n- Kontaktinformationen und Arzt-Profile\n- Informationen über Behandlungen und Spezialisierungen\n- Online-Rezepte und Überweisungsanfragen\n- Urlaubsschaltung, Vertretung und Öffnungszeiten\n- und vieles mehr\n\nKompatibel mit allen Praxis- & Online-Terminsystemen.\n\n\n## Schnell und kostengünstig: Praxis-Websites durch Webdesign-Pooling\n{: layout=\"use: #cols-2\" data-section-class=\"reversed-rows\"}\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/4/232-211_475.87/illustration-01.svg)\n\nOb Neugründung oder etablierte Praxis – unsere modular aufgebauten Websites für Ärzte sind darauf ausgerichtet, den spezifischen Anforderungen Ihrer Praxis gerecht zu werden. Das Konzept des Webdesign-Pooling birgt dabei zahlreiche Vorteile:\n\n\n- Zeit und Kosten sparen durch statische Webelemente im individuellen Design.\n- Website as a Service: Nur das zahlen, was auch genutzt wird.\n- Update-Garantie: Jederzeit durch zusätzliche Module erweiterbar.\n- Immer verfügbar und auf dem neusten Stand der Technik ohne Zusatzkosten.\n- Besten Ladezeiten für optimale Google-Suchergebnisse.\n\n\n\n## Datenschutz vom Experten\n{: layout=\"use: #cols-2-bg\" }\n\n> <b>Rundum-<br />Sorglos-Paket</b>\n\nDSGVO-konforme Datensparsamkeit und Datensicherheit sind für uns selbstverständlich. Standardmäßig sind alle unsere Websites Cookie-frei. Natürlich mit sicherem SSL-Zertifikat und BSI zertifiziertem E-Mail-Postfach (optional).\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/5/387-290_391.56/illustration-03.svg)\n\n\n## Selber machen oder machen lassen? Sie entscheiden!\n{: layout=\"use: #cols-2\" data-section-class=\"reversed-rows\"}\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/16/52-51_ba/illustration-02.webp)\n\nÄndern Sie Inhalte und Bilder, Urlaubs- und Vertretungzeiten, Öffnungszeiten und vieles mehr über unsere intuitive Weboberfläche\noder lassen Sie uns die Arbeit machen: zum günstigen Pauschalpreis inklusive Bildbearbeitung und Texterstellung.\n\nServiceaufträge werden i.d.R. innerhalb eines Werktages direkt vom Designer erledigt.\n\n## Key Figures\n{: layout=\"use: #key-figures\"}\n\n\n## Ablauf\n{: layout=\"use: #cards-slider\" data-scrollspy-name=\"Ablauf\"}\n\n> Einfach und schnell zur eigenen Praxis-Website.\n\nDamit Sie sich auf Ihre Patienten konzentrieren können, kümmern wir uns um den Rest.\n\nKein Stress mit veralteten Agenturen und schlechtem Service: Wir stellen sämtliche Bilder und Texte, welche zu jeder Zeit ausgetauscht werden können. Außerdem garantieren wir technisch einwandfreie Websites, auch nach Jahren im Gebrauch, bis hin zum kompletten Relaunch nach drei Jahren – **ohne zusätzliche Kosten!**\n\n\n[Zum kostenlosen Erstgespräch](#)\n{: .btn .btn-primary}\n\n\n\n### Kostenloses Erstgespräch\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/23/64-57_ba/illustration-a1.webp)\n\nKein Vertriebsgespräch! Im Zoom-Call besprechen Sie Möglichkeiten und Wünsche direkt mit dem Entwickler.\n\n### Design-Entwurf\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/22/35-37_ba/illustration-a2.webp)\n\nInnerhalb 14 Tage nach Vertragsabschluss präsentieren wir Ihnen einen individuellen Design-Entwurf inklusive Texte und Bildmaterial.\n\n### Anpassen\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/21/121-78_ba/illustration-a3.webp)\nUnser Entwickler geht alle Änderungen Schritt-für-Schritt per Videokonferenz mit Ihnen durch. Inhalte und Features werden im Anschluss nach Ihren Wünschen angepasst.\n\n### Online gehen\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/19/137-134_ba/illustration-a4.webp)\n\nBereits nach zwei Terminen sind wir bereit für die Liveschaltung Ihrer Praxis-Website. Letzte Änderungen werden besprochen.\n\n### Fair Service & Support\n\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/23/64-57_ba/illustration-a1.webp)\n\nReichen Sie neue Praxisbilder und Texte auch nach Live-Schaltung ein, wir tauschen diese kostenlos um.\n\n### Kostenloser Relaunch alle 3 Jahre\n![](https://cdn.leuffen.de//leu-systemwebsite/v2/20/48-31_ba/illustration-a5.webp)\n\n\nDamit wir Ihnen den neusten Stand der Technik für Ihre Website garantieren können, erhalten Sie alle drei Jahre einen kostenlosen Relaunch Ihrer Praxis-Website.\n\n## Das sagen Ihre Kollegen über uns\n{: layout=\"use: #customer-reviews\"}\n\n\n### Dr. med. Eleni Deutereou, Berlin\n\n>  „Alle geäußerten Wünsche wurden zeitnah umgesetzt und mit dem Ergebnis sind wir sehr zufrieden. Die Webseite lässt auch über unser Personal einfach nach Bedarf verändern. Ich kann Herrn Leuffen uneingeschränkt empfehlen! “\n\n[www.hoefner-deutereou.de](https://www.hoefner-deutereou.de){: target=\"_blank\"}\n\n### Robert Sedlmaier, München\n\n>  „Eine klasse Idee sehr gut und schnell umgesetzt! Wir sind sehr zufrieden mit dem Ergebnis der Homepage, und besonders auch mit der sehr einfach und variabel zu bedienenden Admin-Umgebung. Wir freuen uns auf eine lange Partnerschaft! “\n\n[www.zahnarztpraxis-sedlmaier.de](https://www.zahnarztpraxis-sedlmaier.de){: target=\"_blank\"}\n\n### Tanja Melchior, Freiburg\n\n>  „Sehr gute, unkompliziert freundliche und professionelle Zusammenarbeit bei der Erstellung meiner Website. Kann ich uneingeschränkt weiterempfehlen. “\n\n[melchior-psychotherapie.de](https://www.melchior-psychotherapie.de){: target=\"_blank\"}\n\n### Dr. Michal Müller, Hannover\n\n>  „100% empfehlenswert. Tolle Zusammenarbeit mit erstklassiger super engagierte Betreuung. Besser geht es nicht und mir hat noch keine Websiteerstellung so Spaß gemacht.“\n\n[dr-mcmueller.de](https://www.dr-mcmueller.de){: target=\"_blank\"}\n\n### Dr. Gülide Uysal, Herne\n\n>  „100% Weiterempfehlung! Sehr kompetente und professionelle Zusammenarbeit. Meine Wünsche bezüglich der Website wurden schnell  umgesetzt und Herr Leuffen hatte auch immer Tipps und Ideen zur Optimierung parat. Das Preis-/Leistungsverhältnis ist unschlagbar.“\n\n[frauenärztin-uysal.de](https://www.frauenärztin-uysal.de){: target=\"_blank\"}\n\n### Heike Peters, Erkner\n\n>  „Die Erstellung der Webseite verlief sehr unkompliziert. Die Webseite ist sehr übersichtlich und ansprechend gestaltet. Ich bin mit dem Ergebnis sehr zufrieden.“\n\n[hausaezrte-in-erkner.de](https://www.hausaerzte-in-erkner.de){: target=\"_blank\"}\n\n\n## Erhalten Sie kostenlos Ihr unverbindliches Angebot mit nur wenigen Klicks!\n{: layout=\"use: #cta1\"}\n\n[Jetzt Konditionen freischalten](#){: class=\"btn btn-primary\"}\n\n\n## Häufig gestellte Fragen\n{: layout=\"use: #text-container\" .text-center }\n\n---\n{: layout=\"use: accordion()\" .mb-5}\n\n### Wie schnell kann meine Praxis-Website erstellt werden?\n\nBereits 14 Tage nach Vertragsschluss kann Ihre individuelle Praxis-Website live gehen. In zwei Terminen besprechen wir Ihre Wünsche, Anforderungen, Features und bearbeiten alle Änderungen im Nachgang. Im Anschluss steht Ihrem Live-Gang nichts mehr im Weg.\n\n### Welche Art von Texten und Bildern sind im Angebot enthalten?\n\nUnser Angebot umfasst individuell gestaltete Texte und Bilder für Ihre Praxis-Website. Diese Inhalte sind flexibel und\nkönnen jederzeit kostenlos ausgetauscht oder angepasst werden, um sicherzustellen, dass sie genau zu Ihrer Praxis passen.\n\nNeben eigenen Bildern lizenzieren wir gerne Bilder von adobe Stock oder evato Elements kostenlos für Sie.\n\n### Was ist im Rundum-sorglos-Paket für Ärzte enthalten?\n\nUnser Rundum-sorglos-Paket bietet eine umfassende Lösung für Ärzte, die ihre Praxis-Website ohne den üblichen Aufwand gestalten möchten. Es umfasst die schnelle Erstellung Ihrer Website, ohne endlose Absprachen und Mehraufwand. Bilder und Texte im modernen Design sind inklusive. Updates, Sicherheit und Funktionalität ist in unserem Service garantiert.\n\n### Wie kann ich sicherstellen, dass meine Praxis-Website DSGVO-konform ist?\n\nKeine Sorge, darum kümmern wir uns! Die DSGVO-Konformität Ihrer Website ist von großer Bedeutung. Unsere Websites werden gemäß den DSGVO-Richtlinien entwickelt und nutzen SSL-Zertifikate. Darüber hinaus werden sie auf deutschen Servern gehostet, um die Sicherheit und den Datenschutz Ihrer Patienten zu gewährleisten.\n\n### Was sind die Vorteile des Webdesign-Pooling-Konzepts?\n\nDas Webdesign-Pooling-Konzept bietet zahlreiche Vorteile: Es spart Zeit und Kosten, da die Website mühelos an sich\nändernde Bedürfnisse angepasst werden kann. Dank ihrer Skalierbarkeit ist es möglich, neue Module bei Praxiswachstum\nhinzuzufügen.\n\nDie unkomplizierte Wartung reduziert sowohl den Pflegeaufwand als auch die Gesamtkosten. Zusätzlich stärkt die\nkonsistente Gestaltung das Vertrauen Ihrer Patienten, während unabhängige Modulüberprüfungen die Sicherheit gewährleisten.\n\n### Wie können Patienten auf meiner Website Termine buchen?\n\nDie Terminbuchung auf Ihrer Website kann über alle am Markt befindlichen Systeme durchgeführt werden.\nIhre Patienten können einfach und bequem Termine online buchen und mit Ihnen in Kontakt treten. Die Website ermöglicht\nauch eine flexible Terminverwaltung, die es Ihnen ermöglicht, eigenständig Verfügbarkeiten, Vertretungen und\nSchließungen zu organisieren.\n\n**Neu: Wir sind doctolib-Partner!** Sichern Sie sich 3 Monate lang 50% Rabatt auf den Monatspreis von doctolib.\n\n### Kann ich die Praxis-Website auch auf mobilen Geräten anzeigen lassen?\n\nJa, unsere Praxis-Websites sind für mobile Geräte optimiert. Das bedeutet, dass Ihre Patienten Ihre Website problemlos\nauf Smartphones und Tablets anzeigen und nutzen können, was die Erreichbarkeit und Zugänglichkeit Ihrer Praxis auf allen Geräten sicherstellt.\n\n### Ist die Website für meine Arztpraxis suchmaschinenoptimiert?\n\nJa, unsere Websites sind suchmaschinenoptimiert, um sicherzustellen, dass Ihre Patienten Sie leicht finden können. Inhalte, Struktur und Darstellung sind so gestaltet, dass sie den besten Platz in den Suchergebnissen von Suchmaschinen wie Google erreichen.\n\n### Wie kann ich personalisiertes Personalmarketing auf meiner Praxis-Website nutzen?\n\nSie können personalisiertes Personalmarketing auf Ihrer Website nutzen, um außergewöhnliche Talente für Ihr Praxis-Team zu gewinnen. Durch ein integriertes Karriereportal können Sie potenzielle Mitarbeiter ansprechen und Ihre offenen Stellen effektiv bewerben.\n\n### Gibt es eine kostenlose Erstberatung, um die Möglichkeiten für meine Praxis-Website zu besprechen?\n\nJa, wir bieten ein kostenloses Erstgespräch, bei dem Sie Ihre Möglichkeiten und Wünsche direkt mit unserem Entwickler besprechen können. In diesem Gespräch können wir Ihre spezifischen Anforderungen und Ziele für Ihre Praxis-Website ausführlich erörtern.\n\n## Kontakt\n{: layout=\"use: #contact\"}\n\n[input type=\"text\"  name=\"Name\" required .mb-3]\n[input type=\"email\" name=\"E-Mail\" data-invalid-msg=\"Bitte geben Sie eine gültige E-Mail Adresse ein\" required .mb-3]\n[input type=\"tel\" name=\"Telefon\" .mb-3]\n\n## Newsletter\n{: layout=\"use: #newsletter\" data-section-style=\"padding-top: 160px;\" data-section-class=\"dark\"}\n\nMelden Sie sich jetzt für unseren Newsletter an und erhalten Sie alle paar Wochen aktuelle News, Design- und Funktionsvorschläge und viele weitere hilfreiche Tipps für Ihren Onlineauftritt.\n\n\n\n\n## Systemwebsite.de\n{: layout=\"use: #footer\"}\n\n> Ihr Partner für moderne medizinische Webseiten-Entwicklung\n\n\n\n### Links\n\n- [Konditionen](#)\n- [Leistungen](#)\n- [FAQ](#)\n- [Kontakt](#)\n\n### Links\n\n- [Konditionen](#)\n- [Leistungen](#)\n- [FAQ](#)\n- [Kontakt](#)\n\n### Folgen Sie uns\n\n- [LinkedIn](#)\n- [Xing](#)\n- [Facebook](#)\n- [Instragram](#)\n\n---\n{: .footer-nav}\n\nCopyright (c) 2023 Systemwebsite by leuffen.de\n\n- [AGB](#)\n- [Datenschutz](#)\n- [Impressum](#)\n\n`;\n\nJodaDescriptionManager.addClass(\"page\",\n    \"themejs-sys\",\n    \"themejs-sys\",\n    html,\n    []\n    ,\n    {\n        bodyClasses: [\"themejs-sys\"]\n    }\n);\n","import {JodaDescriptionManager} from \"@leuffen/jodastyle\";\n\nlet html =`\n\n<nav layout=\"use: #navbar-switch1\" class=\"floating\">\n    <div class=\"brand\"><a href=\"\"><img src=\"/images/logo-systemwebsite.webp\"></a></div>\n    <ul class=\"navbar-top\">\n        <li class=\":: d-none :lg: \"><a href=\"\">Beratungstelefon</a></li>\n        <li class=\":: :lg: d-none\"><a href=\"\">Beratung-Tel.: (0201) 12345</a></li>\n        <li><a href=\"\">Angebot anfordern</a></li>\n    </ul>\n    <ul class=\"navbar-main\">\n        <li><a href=\"#home\">Punkt1</a></li>\n        <li><a href=\"#home\">Punkt2</a></li>\n        <li><a href=\"#home\">Hello World</a></li>\n        <li><a href=\"#home\">Hello World</a></li>\n    </ul>\n    <ul class=\"nav-menu\">\n        <li><a href=\"#home\">Home</a></li>\n    </ul>\n</nav>\n\n# Datenschutz\n{: layout=\"use: #header1\"}\n\n\n## Hero Section\n{: layout=\"use: #disturber\"}\n\nWir garantieren Ihnen 100% Zufriedenheit mit unserer <b class=\"text-primary\">30 Tage Geld-zurück-Garantie!</b>\n\n## Datenschutzerklärung\n{: layout=\"use: #text-container\"}\n\n### Wir nehmen den Schutz Ihrer persönlichen Daten sehr ernst. Wir behandeln Ihre personenbezogenen Daten\nvertraulich und entsprechend der gesetzlichen Datenschutzvorschriften sowie dieser Datenschutzerklärung.\n\nDie Nutzung unserer Website ist in der Regel ohne Angabe personenbezogener Daten möglich. Soweit auf\nunseren Seiten personenbezogene Daten (beispielsweise Name, Anschrift oder E-Mail-Adressen) erhoben werden,\nerfolgt dies, soweit möglich, stets auf freiwilliger Basis. Diese Daten werden ohne Ihre ausdrückliche\nZustimmung nicht an Dritte weitergegeben.\n\nWir weisen darauf hin, dass die Datenübertragung im Internet (z.B. bei der Kommunikation per E-Mail)\nSicherheitslücken aufweisen kann. Ein lückenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht möglich.\n\n\n\n### Verantwortliche Stelle\n\nDie verantwortliche Stelle für die Datenverarbeitung auf dieser Website ist:\n\n\n\n{{ site.data.general.name}}<br>\n{% if site.data.general.name2 != null %}{{site.data.general.name2}}<br>{% endif %}\n{{site.data.general.street}}<br>\n{{site.data.general.zip}} {{site.data.general.city}}<br><br>\nTelefon: <a href=\"tel:{{site.data.general.phone1}}\">{{site.data.general.phone1_text}}</a><br>\n<a href=\"mailto:{{site.data.general.email}}\" >{{site.data.general.email}}</a><br>\n\n\n\nVerantwortliche Stelle ist die natürliche oder juristische Person, die allein oder gemeinsam mit anderen\nüber die Zwecke und Mittel der Verarbeitung von personenbezogenen Daten (z.B. Namen, E-Mail-Adressen o. Ä.) entscheidet.\n\n\n### Widerruf Ihrer Einwilligung zur Datenverarbeitung\n\nViele Datenverarbeitungsvorgänge sind nur mit Ihrer ausdrücklichen Einwilligung möglich. Sie können eine\nbereits erteilte Einwilligung jederzeit widerrufen. Dazu reicht eine formlose Mitteilung per E-Mail an uns.\nDie Rechtmäßigkeit der bis zum Widerruf erfolgten Datenverarbeitung bleibt vom Widerruf unberührt.\n\n\n### Beschwerderecht bei der zuständigen Aufsichtsbehörde\n\nIm Falle datenschutzrechtlicher Verstöße steht dem Betroffenen ein Beschwerderecht bei der zuständigen\nAufsichtsbehörde zu. Zuständige Aufsichtsbehörde in datenschutzrechtlichen Fragen ist der\nLandesdatenschutzbeauftragte des Bundeslandes, in dem unser Unternehmen seinen Sitz hat. Eine Liste der\nDatenschutzbeauftragten sowie deren Kontaktdaten können folgendem Link entnommen werden:\n<a href=\"https://www.bfdi.bund.de/DE/Infothek/Anschriften_Links/anschriften_links-node.html\" rel=\"nofollow\">https://www.bfdi.bund.de/DE/Infothek/Anschriften_Links/anschriften_links-node.html</a>\n\n\n### Recht auf Datenübertragbarkeit\n\nSie haben das Recht, Daten, die wir auf Grundlage Ihrer Einwilligung oder in Erfüllung eines Vertrags\nautomatisiert verarbeiten, an sich oder an einen Dritten in einem gängigen, maschinenlesbaren Format aushändigen\nzu lassen. Sofern Sie die direkte Übertragung der Daten an einen anderen Verantwortlichen verlangen,\nerfolgt dies nur, soweit es technisch machbar ist.\n\n### SSL- bzw. TLS-Verschlüsselung\n\nDiese Seite nutzt aus Sicherheitsgründen und zum Schutz der Übertragung vertraulicher Inhalte, wie zum\nBeispiel Bestellungen oder Anfragen, die Sie an uns als Seitenbetreiber senden, eine SSL-bzw.\nTLS-Verschlüsselung. Eine verschlüsselte Verbindung erkennen Sie daran, dass die Adresszeile des Browsers\nvon “http://” auf “https://” wechselt und an dem Schloss-Symbol in Ihrer Browserzeile.\n\nWenn die SSL- bzw. TLS-Verschlüsselung aktiviert ist, können die Daten, die Sie an uns übermitteln,\nnicht von Dritten mitgelesen werden.\n\n\n### Auskunft, Sperrung, Löschung\n\nSie haben im Rahmen der geltenden gesetzlichen Bestimmungen jederzeit das Recht auf unentgeltliche Auskunft\nüber Ihre gespeicherten personenbezogenen Daten, deren Herkunft und Empfänger und den Zweck der\nDatenverarbeitung und ggf. ein Recht auf Berichtigung, Sperrung oder Löschung dieser Daten. Hierzu sowie\nzu weiteren Fragen zum Thema personenbezogene Daten können Sie sich jederzeit unter der im Impressum\nangegebenen Adresse an uns wenden.\n\n\n### Widerspruch gegen Werbe-Mails\n\nDer Nutzung von im Rahmen der Impressumspflicht veröffentlichten Kontaktdaten zur Übersendung von nicht\nausdrücklich angeforderter Werbung und Informationsmaterialien wird hiermit widersprochen. Die Betreiber\nder Seiten behalten sich ausdrücklich rechtliche Schritte im Falle der unverlangten Zusendung von\nWerbeinformationen, etwa durch Spam-E-Mails, vor.\n\n## Datenschutzbeauftragter\n{: layout=\"use: #text-container\"}\n\n### Gesetzlich vorgeschriebener Datenschutzbeauftragter\n\n\nWir haben für unser Unternehmen einen Datenschutzbeauftragten bestellt.\n\n\n\n{{ site.data.general.datenschutzbeauftragter | newline_to_br}}<br>\nTelefon: <a href=\"tel:{{site.data.general.legal.phone1}}\">{{site.data.general.phone1_text}}</a><br>\n<a href=\"tel:{{site.data.general.email}}\" >{{site.data.general.email}}</a><br>\n\n## Datenerfassung auf unserer Website\n{: layout=\"use: #text-container\"}\n\n### Cookies\n\nDie Internetseiten verwenden teilweise so genannte Cookies. Cookies richten auf Ihrem Rechner keinen\nSchaden an und enthalten keine Viren. Cookies dienen dazu, unser Angebot nutzerfreundlicher, effektiver\nund sicherer zu machen. Cookies sind kleine Textdateien, die auf Ihrem Rechner abgelegt werden und die Ihr\nBrowser speichert.\n\nDie meisten der von uns verwendeten Cookies sind so genannte “Session-Cookies”. Sie werden nach Ende Ihres\nBesuchs automatisch gelöscht. Andere Cookies bleiben auf Ihrem Endgerät gespeichert bis Sie diese löschen.\nDiese Cookies ermöglichen es uns, Ihren Browser beim nächsten Besuch wiederzuerkennen.\n\nSie können Ihren Browser so einstellen, dass Sie über das Setzen von Cookies informiert werden und Cookies nur\nim Einzelfall erlauben, die Annahme von Cookies für bestimmte Fälle oder generell ausschließen sowie das automatische\nLöschen der Cookies beim Schließen des Browser aktivieren. Bei der Deaktivierung von Cookies kann die Funktionalität\ndieser Website eingeschränkt sein.\n\nCookies, die zur Durchführung des elektronischen Kommunikationsvorgangs oder zur Bereitstellung bestimmter, von Ihnen\nerwünschter Funktionen (z.B. Warenkorbfunktion) erforderlich sind, werden auf Grundlage von Art. 6 Abs. 1 lit. f DSGVO\ngespeichert. Der Websitebetreiber hat ein berechtigtes Interesse an der Speicherung von Cookies zur technisch\nfehlerfreien und optimierten Bereitstellung seiner Dienste. Soweit andere Cookies (z.B. Cookies zur Analyse\nIhres Surfverhaltens) gespeichert werden, werden diese in dieser Datenschutzerklärung gesondert behandelt.\n\n\n### Server-Log-Dateien\n\nDer Provider der Seiten erhebt und speichert automatisch Informationen in so genannten Server-Log-Dateien, die Ihr Browser automatisch an uns übermittelt. Dies sind:\n\n\n- Browsertyp und Browserversion\n- verwendetes Betriebssystem\n- Referrer URL\n- Hostname des zugreifenden Rechners\n- Uhrzeit der Serveranfrage\n- IP-Adresse\n\n\n\nEine Zusammenführung dieser Daten mit anderen Datenquellen wird nicht vorgenommen.\n\nGrundlage für die Datenverarbeitung ist Art. 6 Abs. 1 lit. b DSGVO, der die Verarbeitung von Daten zur Erfüllung eines Vertrags oder vorvertraglicher Maßnahmen gestattet.\n\n\n### Kontaktformular & E-Mail\n\nWir weisen darauf hin, dass die Datenübertragung im Internet (z.B. bei der Kommunikation per E-Mail)\nSicherheitslücken aufweisen kann. Ein lückenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht\nmöglich. Wir raten daher dringend davon ab, Gesundheitsdaten über das Kontaktformular bzw. per E-Mail an\nuns zu übersenden.\n\nWenn Sie uns per Kontaktformular Anfragen zukommen lassen, werden Ihre Angaben aus dem Anfrageformular\ninklusive der von Ihnen dort angegebenen Kontaktdaten zwecks Bearbeitung der Anfrage und für den Fall\nvon Anschlussfragen bei uns gespeichert. Diese Daten geben wir nicht ohne Ihre Einwilligung weiter.\n\nDie Verarbeitung der in das Kontaktformular eingegebenen Daten erfolgt somit ausschließlich auf Grundlage\nIhrer Einwilligung (Art. 6 Abs. 1 lit. a DSGVO). Sie können diese Einwilligung jederzeit widerrufen.\nDazu reicht eine formlose Mitteilung per E-Mail an uns. Die Rechtmäßigkeit der bis zum Widerruf erfolgten\nDatenverarbeitungsvorgänge bleibt vom Widerruf unberührt.\n\nDie von Ihnen im Kontaktformular eingegebenen Daten verbleiben bei uns, bis Sie uns zur Löschung auffordern,\nIhre Einwilligung zur Speicherung widerrufen oder der Zweck für die Datenspeicherung entfällt (z.B. nach\nabgeschlossener Bearbeitung Ihrer Anfrage). Zwingende gesetzliche Bestimmungen – insbesondere\nAufbewahrungsfristen – bleiben unberührt.\n\n\n## Analyse Tools und Plugins\n{: layout=\"use: #text-container\"}\n\n{% if site.data.general.tools.recaptcha %}\n### Google reCAPTCHA\n\nWir nutzen “Google reCAPTCHA” (im Folgenden “reCAPTCHA”) auf unseren Websites. Anbieter ist die Google\nInc., 1600 Amphitheatre Parkway, Mountain View, CA 94043, USA (“Google”).\n\nMit reCAPTCHA soll überprüft werden, ob die Dateneingabe auf unseren Websites (z.B. in einem Kontaktformular)\ndurch einen Menschen oder durch ein automatisiertes Programm erfolgt. Hierzu analysiert reCAPTCHA das\nVerhalten des Websitebesuchers anhand verschiedener Merkmale. Diese Analyse beginnt automatisch, sobald\nder Websitebesucher die Website betritt. Zur Analyse wertet reCAPTCHA verschiedene Informationen aus\n(z.B. IP-Adresse, Verweildauer des Websitebesuchers auf der Website oder vom Nutzer getätigte Mausbewegungen).\nDie bei der Analyse erfassten Daten werden an Google weitergeleitet.\n\nDie reCAPTCHA-Analysen laufen vollständig im Hintergrund. Websitebesucher werden nicht darauf hingewiesen, dass eine Analyse stattfindet.\n\nDie Datenverarbeitung erfolgt auf Grundlage von Art. 6 Abs. 1 lit. f DSGVO. Der Websitebetreiber hat ein berechtigtes Interesse daran, seine Webangebote vor missbräuchlicher automatisierter Ausspähung und vor SPAM zu schützen.\n\nWeitere Informationen zu Google reCAPTCHA sowie die Datenschutzerklärung von Google entnehmen Sie folgenden Links:\n<a href=\"https://www.google.com/intl/de/policies/privacy/\">https://www.google.com/intl/de/policies/privacy/</a> und\n<a href=\"https://www.google.com/recaptcha/intro/android.html\">https://www.google.com/recaptcha/intro/android.html</a>.\n{% endif %}\n\n\n### Google Maps\n\nDiese Seite nutzt über eine API den Kartendienst Google Maps. Anbieter ist die Google Inc., 1600 Amphitheatre Parkway,\nMountain View, CA 94043, USA.\n\nZur Nutzung der Funktionen von Google Maps ist es notwendig, Ihre IP Adresse zu speichern. Diese Informationen werden\nin der Regel an einen Server von Google in den USA übertragen und dort gespeichert. Der Anbieter\ndieser Seite hat keinen Einfluss auf diese Datenübertragung.\n\nDie Nutzung von Google Maps erfolgt im Interesse einer ansprechenden Darstellung unserer Online-Angebote und an\neiner leichten Auffindbarkeit der von uns auf der Website angegebenen Orte. Dies stellt ein berechtigtes\nInteresse im Sinne von Art. 6 Abs. 1 lit. f DSGVO dar.\n\nMehr Informationen zum Umgang mit Nutzerdaten finden Sie in der Datenschutzerklärung von\nGoogle: https://www.google.de/intl/de/policies/privacy/.\n\n### jameda-Plug-In\n\nUnsere Homepage nutzt Plug-Ins der jameda GmbH, St.-Cajetan-Straße 41, 81669 München. Wenn Sie eine unserer mit\neinem Jameda- Plug-Ins ausgestatteten Seiten besuchen, wird eine Verbindung zu den Servern von Jameda hergestellt.\nDabei wird dem Jameda-Server mitgeteilt, welche unserer Seiten Sie besucht haben. Jameda erhebt Informationen über\ndie Nutzung von HYPERLINK „https://www.arzt-datenschutz.de/www.jameda.de“ \\\\t „_blank“ www.jameda.de von einzelnen\nRechnern aus. Mit dem Sammeln solcher Informationen beabsichtigt Jameda sein Online-Angebot zu individualisieren.\nWenn Sie mit dem Plug-In interagieren, zum Beispiel den „Empfehlen“-Button betätigen oder einen Kommentar abgeben,\nwird die entsprechende Information von Ihrem Browser direkt an Jameda übermittelt und dort gespeichert. Den Zweck und\nUmfang der jeweiligen Datenerhebung und Informationen zur weiteren Verarbeitung und Nutzung der Daten durch die Anbieter\nsowie Ihre diesbezüglichen Rechte und Einstellungsmöglichkeiten zum Schutz Ihrer Privatsphäre erfahren Sie auf den\nSeiten von Jameda in der Datenschutzerklärung unter: https://www.jameda.de/jameda/datenschutz.php\n\n\n\n## Erhalten Sie kostenlos Ihr unverbindliches Angebot mit nur wenigen Klicks!\n{: layout=\"use: #cta1\"}\n\n[Jetzt Konditionen freischalten](#){: class=\"btn btn-primary\"}\n\n## Kontakt\n{: layout=\"use: #contact\"}\n\n[input type=\"text\"  name=\"Name\" required .mb-3]\n[input type=\"email\" name=\"E-Mail\" data-invalid-msg=\"Bitte geben Sie eine gültige E-Mail Adresse ein\" required .mb-3]\n[input type=\"tel\" name=\"Telefon\" .mb-3]\n\n## Newsletter\n{: layout=\"use: #newsletter\" data-section-style=\"padding-top: 160px;\" data-section-class=\"dark\"}\n\nMelden Sie sich jetzt für unseren Newsletter an und erhalten Sie alle paar Wochen aktuelle News, Design- und Funktionsvorschläge und viele weitere hilfreiche Tipps für Ihren Onlineauftritt.\n\n\n\n\n\n\n## Systemwebsite.de\n{: layout=\"use: #footer\"}\n\n> Ihr Partner für moderne medizinische Webseiten-Entwicklung\n\n\n\n### Links\n\n- [Konditionen](#)\n- [Leistungen](#)\n- [FAQ](#)\n- [Kontakt](#)\n\n### Links\n\n- [Konditionen](#)\n- [Leistungen](#)\n- [FAQ](#)\n- [Kontakt](#)\n\n### Folgen Sie uns\n\n- [LinkedIn](#)\n- [Xing](#)\n- [Facebook](#)\n- [Instragram](#)\n\n---\n{: .footer-nav}\n\nCopyright (c) 2023 Systemwebsite by leuffen.de\n\n- [AGB](#)\n- [Datenschutz](#)\n- [Impressum](#)\n\n`;\n\nJodaDescriptionManager.addClass(\"page\",\n    \"legal-page\",\n    \"legal-page\",\n    html,\n    []\n    ,\n    {\n        bodyClasses: [\"themejs-sys\"]\n    }\n);\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\nconst patternsConfig = require('./patterns.js');\n\nconst defaultOptions = {\n  leftDelimiter: '{',\n  rightDelimiter: '}',\n  allowedAttributes: []\n};\n\nmodule.exports = function attributes(md, options_) {\n  let options = Object.assign({}, defaultOptions);\n  options = Object.assign(options, options_);\n\n  const patterns = patternsConfig(options);\n\n  function curlyAttrs(state) {\n    const tokens = state.tokens;\n\n    for (let i = 0; i < tokens.length; i++) {\n      for (let p = 0; p < patterns.length; p++) {\n        const pattern = patterns[p];\n        let j = null; // position of child with offset 0\n        const match = pattern.tests.every(t => {\n          const res = test(tokens, i, t);\n          if (res.j !== null) { j = res.j; }\n          return res.match;\n        });\n        if (match) {\n          pattern.transform(tokens, i, j);\n          if (pattern.name === 'inline attributes' || pattern.name === 'inline nesting 0') {\n            // retry, may be several inline attributes\n            p--;\n          }\n        }\n      }\n    }\n  }\n\n  md.core.ruler.before('linkify', 'curly_attributes', curlyAttrs);\n};\n\n/**\n * Test if t matches token stream.\n *\n * @param {array} tokens\n * @param {number} i\n * @param {object} t Test to match.\n * @return {object} { match: true|false, j: null|number }\n */\nfunction test(tokens, i, t) {\n  const res = {\n    match: false,\n    j: null  // position of child\n  };\n\n  const ii = t.shift !== undefined\n    ? i + t.shift\n    : t.position;\n\n  if (t.shift !== undefined && ii < 0) {\n    // we should never shift to negative indexes (rolling around to back of array)\n    return res;\n  }\n\n  const token = get(tokens, ii);  // supports negative ii\n\n\n  if (token === undefined) { return res; }\n\n  for (const key of Object.keys(t)) {\n    if (key === 'shift' || key === 'position') { continue; }\n\n    if (token[key] === undefined) { return res; }\n\n    if (key === 'children' && isArrayOfObjects(t.children)) {\n      if (token.children.length === 0) {\n        return res;\n      }\n      let match;\n      const childTests = t.children;\n      const children = token.children;\n      if (childTests.every(tt => tt.position !== undefined)) {\n        // positions instead of shifts, do not loop all children\n        match = childTests.every(tt => test(children, tt.position, tt).match);\n        if (match) {\n          // we may need position of child in transform\n          const j = last(childTests).position;\n          res.j = j >= 0 ? j : children.length + j;\n        }\n      } else {\n        for (let j = 0; j < children.length; j++) {\n          match = childTests.every(tt => test(children, j, tt).match);\n          if (match) {\n            res.j = j;\n            // all tests true, continue with next key of pattern t\n            break;\n          }\n        }\n      }\n\n      if (match === false) { return res; }\n\n      continue;\n    }\n\n    switch (typeof t[key]) {\n    case 'boolean':\n    case 'number':\n    case 'string':\n      if (token[key] !== t[key]) { return res; }\n      break;\n    case 'function':\n      if (!t[key](token[key])) { return res; }\n      break;\n    case 'object':\n      if (isArrayOfFunctions(t[key])) {\n        const r = t[key].every(tt => tt(token[key]));\n        if (r === false) { return res; }\n        break;\n      }\n    // fall through for objects !== arrays of functions\n    default:\n      throw new Error(`Unknown type of pattern test (key: ${key}). Test should be of type boolean, number, string, function or array of functions.`);\n    }\n  }\n\n  // no tests returned false -> all tests returns true\n  res.match = true;\n  return res;\n}\n\nfunction isArrayOfObjects(arr) {\n  return Array.isArray(arr) && arr.length && arr.every(i => typeof i === 'object');\n}\n\nfunction isArrayOfFunctions(arr) {\n  return Array.isArray(arr) && arr.length && arr.every(i => typeof i === 'function');\n}\n\n/**\n * Get n item of array. Supports negative n, where -1 is last\n * element in array.\n * @param {array} arr\n * @param {number} n\n */\nfunction get(arr, n) {\n  return n >= 0 ? arr[n] : arr[arr.length + n];\n}\n\n// get last element of array, safe - returns {} if not found\nfunction last(arr) {\n  return arr.slice(-1)[0] || {};\n}\n","'use strict';\n/**\n * If a pattern matches the token stream,\n * then run transform.\n */\n\nconst utils = require('./utils.js');\n\nmodule.exports = options => {\n  const __hr = new RegExp('^ {0,3}[-*_]{3,} ?'\n                          + utils.escapeRegExp(options.leftDelimiter)\n                          + '[^' + utils.escapeRegExp(options.rightDelimiter) + ']');\n\n  return ([\n    {\n      /**\n       * ```python {.cls}\n       * for i in range(10):\n       *     print(i)\n       * ```\n       */\n      name: 'fenced code blocks',\n      tests: [\n        {\n          shift: 0,\n          block: true,\n          info: utils.hasDelimiters('end', options)\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i];\n        const start = token.info.lastIndexOf(options.leftDelimiter);\n        const attrs = utils.getAttrs(token.info, start, options);\n        utils.addAttrs(attrs, token);\n        token.info = utils.removeDelimiter(token.info, options);\n      }\n    }, {\n      /**\n       * bla `click()`{.c} ![](img.png){.d}\n       *\n       * differs from 'inline attributes' as it does\n       * not have a closing tag (nesting: -1)\n       */\n      name: 'inline nesting 0',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              shift: -1,\n              type: (str) => str === 'image' || str === 'code_inline'\n            }, {\n              shift: 0,\n              type: 'text',\n              content: utils.hasDelimiters('start', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const endChar = token.content.indexOf(options.rightDelimiter);\n        const attrToken = tokens[i].children[j - 1];\n        const attrs = utils.getAttrs(token.content, 0, options);\n        utils.addAttrs(attrs, attrToken);\n        if (token.content.length === (endChar + options.rightDelimiter.length)) {\n          tokens[i].children.splice(j, 1);\n        } else {\n          token.content = token.content.slice(endChar + options.rightDelimiter.length);\n        }\n      }\n    }, {\n      /**\n       * | h1 |\n       * | -- |\n       * | c1 |\n       *\n       * {.c}\n       */\n      name: 'tables',\n      tests: [\n        {\n          // let this token be i, such that for-loop continues at\n          // next token after tokens.splice\n          shift: 0,\n          type: 'table_close'\n        }, {\n          shift: 1,\n          type: 'paragraph_open'\n        }, {\n          shift: 2,\n          type: 'inline',\n          content: utils.hasDelimiters('only', options)\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i + 2];\n        const tableOpen = utils.getMatchingOpeningToken(tokens, i);\n        const attrs = utils.getAttrs(token.content, 0, options);\n        // add attributes\n        utils.addAttrs(attrs, tableOpen);\n        // remove <p>{.c}</p>\n        tokens.splice(i + 1, 3);\n      }\n    }, {\n      /**\n       * *emphasis*{.with attrs=1}\n       */\n      name: 'inline attributes',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              shift: -1,\n              nesting: -1  // closing inline tag, </em>{.a}\n            }, {\n              shift: 0,\n              type: 'text',\n              content: utils.hasDelimiters('start', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, 0, options);\n        const openingToken = utils.getMatchingOpeningToken(tokens[i].children, j - 1);\n        utils.addAttrs(attrs, openingToken);\n        token.content = content.slice(content.indexOf(options.rightDelimiter) + options.rightDelimiter.length);\n      }\n    }, {\n      /**\n       * - item\n       * {.a}\n       */\n      name: 'list softbreak',\n      tests: [\n        {\n          shift: -2,\n          type: 'list_item_open'\n        }, {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -2,\n              type: 'softbreak'\n            }, {\n              position: -1,\n              type: 'text',\n              content: utils.hasDelimiters('only', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, 0, options);\n        let ii = i - 2;\n        while (tokens[ii - 1] &&\n          tokens[ii - 1].type !== 'ordered_list_open' &&\n          tokens[ii - 1].type !== 'bullet_list_open') { ii--; }\n        utils.addAttrs(attrs, tokens[ii - 1]);\n        tokens[i].children = tokens[i].children.slice(0, -2);\n      }\n    }, {\n      /**\n       * - nested list\n       *   - with double \\n\n       *   {.a} <-- apply to nested ul\n       *\n       * {.b} <-- apply to root <ul>\n       */\n      name: 'list double softbreak',\n      tests: [\n        {\n          // let this token be i = 0 so that we can erase\n          // the <p>{.a}</p> tokens below\n          shift: 0,\n          type: (str) =>\n            str === 'bullet_list_close' ||\n            str === 'ordered_list_close'\n        }, {\n          shift: 1,\n          type: 'paragraph_open'\n        }, {\n          shift: 2,\n          type: 'inline',\n          content: utils.hasDelimiters('only', options),\n          children: (arr) => arr.length === 1\n        }, {\n          shift: 3,\n          type: 'paragraph_close'\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i + 2];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, 0, options);\n        const openingToken = utils.getMatchingOpeningToken(tokens, i);\n        utils.addAttrs(attrs, openingToken);\n        tokens.splice(i + 1, 3);\n      }\n    }, {\n      /**\n       * - end of {.list-item}\n       */\n      name: 'list item end',\n      tests: [\n        {\n          shift: -2,\n          type: 'list_item_open'\n        }, {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -1,\n              type: 'text',\n              content: utils.hasDelimiters('end', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, content.lastIndexOf(options.leftDelimiter), options);\n        utils.addAttrs(attrs, tokens[i - 2]);\n        const trimmed = content.slice(0, content.lastIndexOf(options.leftDelimiter));\n        token.content = last(trimmed) !== ' ' ?\n          trimmed : trimmed.slice(0, -1);\n      }\n    }, {\n      /**\n       * something with softbreak\n       * {.cls}\n       */\n      name: '\\n{.a} softbreak then curly in start',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -2,\n              type: 'softbreak'\n            }, {\n              position: -1,\n              type: 'text',\n              content: utils.hasDelimiters('only', options)\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const attrs = utils.getAttrs(token.content, 0, options);\n        // find last closing tag\n        let ii = i + 1;\n        while (tokens[ii + 1] && tokens[ii + 1].nesting === -1) { ii++; }\n        const openingToken = utils.getMatchingOpeningToken(tokens, ii);\n        utils.addAttrs(attrs, openingToken);\n        tokens[i].children = tokens[i].children.slice(0, -2);\n      }\n    }, {\n      /**\n       * horizontal rule --- {#id}\n       */\n      name: 'horizontal rule',\n      tests: [\n        {\n          shift: 0,\n          type: 'paragraph_open'\n        },\n        {\n          shift: 1,\n          type: 'inline',\n          children: (arr) => arr.length === 1,\n          content: (str) => str.match(__hr) !== null,\n        },\n        {\n          shift: 2,\n          type: 'paragraph_close'\n        }\n      ],\n      transform: (tokens, i) => {\n        const token = tokens[i];\n        token.type = 'hr';\n        token.tag = 'hr';\n        token.nesting = 0;\n        const content = tokens[i + 1].content;\n        const start = content.lastIndexOf(options.leftDelimiter);\n        const attrs = utils.getAttrs(content, start, options);\n        utils.addAttrs(attrs, token);\n        token.markup = content;\n        tokens.splice(i + 1, 2);\n      }\n    }, {\n      /**\n       * end of {.block}\n       */\n      name: 'end of block',\n      tests: [\n        {\n          shift: 0,\n          type: 'inline',\n          children: [\n            {\n              position: -1,\n              content: utils.hasDelimiters('end', options),\n              type: (t) => t !== 'code_inline' && t !== 'math_inline'\n            }\n          ]\n        }\n      ],\n      transform: (tokens, i, j) => {\n        const token = tokens[i].children[j];\n        const content = token.content;\n        const attrs = utils.getAttrs(content, content.lastIndexOf(options.leftDelimiter), options);\n        let ii = i + 1;\n        while (tokens[ii + 1] && tokens[ii + 1].nesting === -1) { ii++; }\n        const openingToken = utils.getMatchingOpeningToken(tokens, ii);\n        utils.addAttrs(attrs, openingToken);\n        const trimmed = content.slice(0, content.lastIndexOf(options.leftDelimiter));\n        token.content = last(trimmed) !== ' ' ?\n          trimmed : trimmed.slice(0, -1);\n      }\n    }\n  ]);\n};\n\n// get last element of array or string\nfunction last(arr) {\n  return arr.slice(-1)[0];\n}\n","/**\n * parse {.class #id key=val} strings\n * @param {string} str: string to parse\n * @param {int} start: where to start parsing (including {)\n * @returns {2d array}: [['key', 'val'], ['class', 'red']]\n */\nexports.getAttrs = function (str, start, options) {\n  // not tab, line feed, form feed, space, solidus, greater than sign, quotation mark, apostrophe and equals sign\n  const allowedKeyChars = /[^\\t\\n\\f />\"'=]/;\n  const pairSeparator = ' ';\n  const keySeparator = '=';\n  const classChar = '.';\n  const idChar = '#';\n\n  const attrs = [];\n  let key = '';\n  let value = '';\n  let parsingKey = true;\n  let valueInsideQuotes = false;\n\n  // read inside {}\n  // start + left delimiter length to avoid beginning {\n  // breaks when } is found or end of string\n  for (let i = start + options.leftDelimiter.length; i < str.length; i++) {\n    if (str.slice(i, i + options.rightDelimiter.length) === options.rightDelimiter) {\n      if (key !== '') { attrs.push([key, value]); }\n      break;\n    }\n    const char_ = str.charAt(i);\n\n    // switch to reading value if equal sign\n    if (char_ === keySeparator && parsingKey) {\n      parsingKey = false;\n      continue;\n    }\n\n    // {.class} {..css-module}\n    if (char_ === classChar && key === '') {\n      if (str.charAt(i + 1) === classChar) {\n        key = 'css-module';\n        i += 1;\n      } else {\n        key = 'class';\n      }\n      parsingKey = false;\n      continue;\n    }\n\n    // {#id}\n    if (char_ === idChar && key === '') {\n      key = 'id';\n      parsingKey = false;\n      continue;\n    }\n\n    // {value=\"inside quotes\"}\n    if (char_ === '\"' && value === '' && !valueInsideQuotes) {\n      valueInsideQuotes = true;\n      continue;\n    }\n    if (char_ === '\"' && valueInsideQuotes) {\n      valueInsideQuotes = false;\n      continue;\n    }\n\n    // read next key/value pair\n    if ((char_ === pairSeparator && !valueInsideQuotes)) {\n      if (key === '') {\n        // beginning or ending space: { .red } vs {.red}\n        continue;\n      }\n      attrs.push([key, value]);\n      key = '';\n      value = '';\n      parsingKey = true;\n      continue;\n    }\n\n    // continue if character not allowed\n    if (parsingKey && char_.search(allowedKeyChars) === -1) {\n      continue;\n    }\n\n    // no other conditions met; append to key/value\n    if (parsingKey) {\n      key += char_;\n      continue;\n    }\n    value += char_;\n  }\n\n  if (options.allowedAttributes && options.allowedAttributes.length) {\n    const allowedAttributes = options.allowedAttributes;\n\n    return attrs.filter(function (attrPair) {\n      const attr = attrPair[0];\n\n      function isAllowedAttribute (allowedAttribute) {\n        return (attr === allowedAttribute\n          || (allowedAttribute instanceof RegExp && allowedAttribute.test(attr))\n        );\n      }\n\n      return allowedAttributes.some(isAllowedAttribute);\n    });\n\n  }\n  return attrs;\n\n};\n\n/**\n * add attributes from [['key', 'val']] list\n * @param {array} attrs: [['key', 'val']]\n * @param {token} token: which token to add attributes\n * @returns token\n */\nexports.addAttrs = function (attrs, token) {\n  for (let j = 0, l = attrs.length; j < l; ++j) {\n    const key = attrs[j][0];\n    if (key === 'class') {\n      token.attrJoin('class', attrs[j][1]);\n    } else if (key === 'css-module') {\n      token.attrJoin('css-module', attrs[j][1]);\n    } else {\n      token.attrPush(attrs[j]);\n    }\n  }\n  return token;\n};\n\n/**\n * Does string have properly formatted curly?\n *\n * start: '{.a} asdf'\n * end: 'asdf {.a}'\n * only: '{.a}'\n *\n * @param {string} where to expect {} curly. start, end or only.\n * @return {function(string)} Function which testes if string has curly.\n */\nexports.hasDelimiters = function (where, options) {\n\n  if (!where) {\n    throw new Error('Parameter `where` not passed. Should be \"start\", \"end\" or \"only\".');\n  }\n\n  /**\n   * @param {string} str\n   * @return {boolean}\n   */\n  return function (str) {\n    // we need minimum three chars, for example {b}\n    const minCurlyLength = options.leftDelimiter.length + 1 + options.rightDelimiter.length;\n    if (!str || typeof str !== 'string' || str.length < minCurlyLength) {\n      return false;\n    }\n\n    function validCurlyLength (curly) {\n      const isClass = curly.charAt(options.leftDelimiter.length) === '.';\n      const isId = curly.charAt(options.leftDelimiter.length) === '#';\n      return (isClass || isId)\n        ? curly.length >= (minCurlyLength + 1)\n        : curly.length >= minCurlyLength;\n    }\n\n    let start, end, slice, nextChar;\n    const rightDelimiterMinimumShift = minCurlyLength - options.rightDelimiter.length;\n    switch (where) {\n    case 'start':\n      // first char should be {, } found in char 2 or more\n      slice = str.slice(0, options.leftDelimiter.length);\n      start = slice === options.leftDelimiter ? 0 : -1;\n      end = start === -1 ? -1 : str.indexOf(options.rightDelimiter, rightDelimiterMinimumShift);\n      // check if next character is not one of the delimiters\n      nextChar = str.charAt(end + options.rightDelimiter.length);\n      if (nextChar && options.rightDelimiter.indexOf(nextChar) !== -1) {\n        end = -1;\n      }\n      break;\n\n    case 'end':\n      // last char should be }\n      start = str.lastIndexOf(options.leftDelimiter);\n      end = start === -1 ? -1 : str.indexOf(options.rightDelimiter, start + rightDelimiterMinimumShift);\n      end = end === str.length - options.rightDelimiter.length ? end : -1;\n      break;\n\n    case 'only':\n      // '{.a}'\n      slice = str.slice(0, options.leftDelimiter.length);\n      start = slice === options.leftDelimiter ? 0 : -1;\n      slice = str.slice(str.length - options.rightDelimiter.length);\n      end = slice === options.rightDelimiter ? str.length - options.rightDelimiter.length : -1;\n      break;\n\n    default:\n      throw new Error(`Unexpected case ${where}, expected 'start', 'end' or 'only'`);\n    }\n\n    return start !== -1 && end !== -1 && validCurlyLength(str.substring(start, end + options.rightDelimiter.length));\n  };\n};\n\n/**\n * Removes last curly from string.\n */\nexports.removeDelimiter = function (str, options) {\n  const start = escapeRegExp(options.leftDelimiter);\n  const end = escapeRegExp(options.rightDelimiter);\n\n  const curly = new RegExp(\n    '[ \\\\n]?' + start + '[^' + start + end + ']+' + end + '$'\n  );\n  const pos = str.search(curly);\n\n  return pos !== -1 ? str.slice(0, pos) : str;\n};\n\n/**\n * Escapes special characters in string s such that the string\n * can be used in `new RegExp`. For example \"[\" becomes \"\\\\[\".\n *\n * @param {string} s Regex string.\n * @return {string} Escaped string.\n */\nfunction escapeRegExp (s) {\n  return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\nexports.escapeRegExp = escapeRegExp;\n\n/**\n * find corresponding opening block\n */\nexports.getMatchingOpeningToken = function (tokens, i) {\n  if (tokens[i].type === 'softbreak') {\n    return false;\n  }\n  // non closing blocks, example img\n  if (tokens[i].nesting === 0) {\n    return tokens[i];\n  }\n\n  const level = tokens[i].level;\n  const type = tokens[i].type.replace('_close', '_open');\n\n  for (; i >= 0; --i) {\n    if (tokens[i].type === type && tokens[i].level === level) {\n      return tokens[i];\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * from https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js\n */\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nexports.escapeHtml = function (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, start, max) {\n  var code, level,\n      pos = start,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, start, max) {\n  var code,\n      marker,\n      lines = 0,\n      pos = start,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i, prevLine,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    prevLine = state.line;\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\");\n        }\n        break;\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched');\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\"); }\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i, prevPos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    prevPos = state.pos;\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\"); }\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  oldBMarks  = [];\n  oldBSCount = [];\n  oldSCount  = [];\n  oldTShift  = [];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      offset = initial;\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      nextLine = startLine,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[nextLine] + state.tShift[nextLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false;\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ nextLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ nextLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[nextLine];\n    oldSCount = state.sCount[nextLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine];\n    state.sCount[nextLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[nextLine] = oldTShift;\n    state.sCount[nextLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = state.line;\n    itemLines[1] = nextLine;\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine, endLine) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = match[0];\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"../../dev\";\n"],"names":[],"sourceRoot":""}